///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            12/Apr/2014  12:18:04 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\Texas Instruments\Z-Stack Lighting             /
//                          1.0.2\Components\mt\MT_ZDO.c                      /
//    Command line       =  -f "D:\Texas Instruments\Z-Stack Lighting         /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wRouter.cfg" (-DCPU32MHZ      /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f "D:\Texas        /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO     /
//                          -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f "D:\Texas              /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wZCL.cfg" "D:\Texas           /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Components\mt\MT_ZDO.c" -D                  /
//                          FEATURE_GREEN_POWER -D SECURE=1 -D                /
//                          TC_LINKKEY_JOIN -D ZDSECMGR_TC_DEVICE_MAX=2 -D    /
//                          NV_RESTORE -D HOLD_AUTO_START -D INTER_PAN -D     /
//                          ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D             /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D MT_ZDO_CB_FUNC -D   /
//                          MT_UTIL_FUNC -D MT_ZDO_MGMT -D LCD_SUPPORTED -D   /
//                          HAL_LCD=FALSE -D HAL_KEY=FALSE -D ZCL_BASIC -D    /
//                          ZCL_READ -D ZCL_WRITE -D ZCL_IDENTIFY -D          /
//                          ZCL_ON_OFF -D ZCL_SCENES -D ZCL_GROUPS -D         /
//                          ZCL_LIGHT_LINK_ENHANCE -D ZCL_LEVEL_CTRL -D       /
//                          ZCL_COLOR_CTRL -D xMAX_CHANNELS_24GHZ=0x02108800  /
//                          -lC "D:\Texas Instruments\Z-Stack Lighting        /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Bridge /
//                          EB-Pro\List\" -lA "D:\Texas Instruments\Z-Stack   /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\BridgeEB-Pro\List\" --diag_suppress            /
//                          Pe001,Pa010 -o "D:\Texas Instruments\Z-Stack      /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\BridgeEB-Pro\Obj\" -e --debug --core=plain     /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I "D:\Texas                 /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\" -I   /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\Sou /
//                          rce\" -I "D:\Texas Instruments\Z-Stack Lighting   /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          Source\" -I "D:\Texas Instruments\Z-Stack         /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\..\..\..\HomeAutomation\Source\" -I "D:\Texas  /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\HomeAutomation\SampleLight\Source\" -I         /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\ZMain\TI2530DB\" -I "D:\Texas                  /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\hal\include\" -I "D:\Texas    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\hal\target\CC2530EB\" -I      /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\include\" -I "D:\Texas    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\high_level\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\" -I      /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\single_ch /
//                          ip\" -I "D:\Texas Instruments\Z-Stack Lighting    /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mt\" -I "D:\Texas             /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\osal\include\" -I "D:\Texas   /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\services\saddr\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\services\sdata\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\af\" -I "D:\Texas       /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\nwk\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sapi\" -I "D:\Texas     /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sec\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sys\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\zcl\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\zdo\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\zmac\" -I "D:\Texas           /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\zmac\f8w\" -Ohz               /
//                          --require_prototypes                              /
//    List file          =  D:\Texas Instruments\Z-Stack Lighting             /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Bridge /
//                          EB-Pro\List\MT_ZDO.s51                            /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME MT_ZDO

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_ADD
        EXTERN ?L_SHL
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?US_SWITCH_SPARSE
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??MT_ZdoActiveEpRequest?relay
        FUNCTION ??MT_ZdoActiveEpRequest?relay,0203H
        PUBLIC ??MT_ZdoAddrRspCB?relay
        FUNCTION ??MT_ZdoAddrRspCB?relay,0203H
        PUBLIC ??MT_ZdoBeaconIndCB?relay
        FUNCTION ??MT_ZdoBeaconIndCB?relay,0203H
        PUBLIC ??MT_ZdoBindRequest?relay
        FUNCTION ??MT_ZdoBindRequest?relay,0203H
        PUBLIC ??MT_ZdoCommandProcessing?relay
        FUNCTION ??MT_ZdoCommandProcessing?relay,0203H
        PUBLIC ??MT_ZdoComplexDescRequest?relay
        FUNCTION ??MT_ZdoComplexDescRequest?relay,0203H
        FUNCTION ??MT_ZdoConcentratorIndCB?relay,0203H
        PUBLIC ??MT_ZdoDirectCB?relay
        FUNCTION ??MT_ZdoDirectCB?relay,0203H
        PUBLIC ??MT_ZdoEndDevAnnce?relay
        FUNCTION ??MT_ZdoEndDevAnnce?relay,0203H
        PUBLIC ??MT_ZdoEndDevAnnceCB?relay
        FUNCTION ??MT_ZdoEndDevAnnceCB?relay,0203H
        PUBLIC ??MT_ZdoEndDevBindRequest?relay
        FUNCTION ??MT_ZdoEndDevBindRequest?relay,0203H
        PUBLIC ??MT_ZdoEndDeviceTimeoutRequest?relay
        FUNCTION ??MT_ZdoEndDeviceTimeoutRequest?relay,0203H
        PUBLIC ??MT_ZdoHandleExceptions?relay
        FUNCTION ??MT_ZdoHandleExceptions?relay,0203H
        PUBLIC ??MT_ZdoIEEEAddrRequest?relay
        FUNCTION ??MT_ZdoIEEEAddrRequest?relay,0203H
        PUBLIC ??MT_ZdoInit?relay
        FUNCTION ??MT_ZdoInit?relay,0203H
        PUBLIC ??MT_ZdoJoinCnfCB?relay
        FUNCTION ??MT_ZdoJoinCnfCB?relay,0203H
        PUBLIC ??MT_ZdoJoinReq?relay
        FUNCTION ??MT_ZdoJoinReq?relay,0203H
        FUNCTION ??MT_ZdoLeaveInd?relay,0203H
        PUBLIC ??MT_ZdoMatchDescRequest?relay
        FUNCTION ??MT_ZdoMatchDescRequest?relay,0203H
        PUBLIC ??MT_ZdoMgmtBindRequest?relay
        FUNCTION ??MT_ZdoMgmtBindRequest?relay,0203H
        PUBLIC ??MT_ZdoMgmtDirectJoinRequest?relay
        FUNCTION ??MT_ZdoMgmtDirectJoinRequest?relay,0203H
        PUBLIC ??MT_ZdoMgmtLeaveRequest?relay
        FUNCTION ??MT_ZdoMgmtLeaveRequest?relay,0203H
        PUBLIC ??MT_ZdoMgmtLqiRequest?relay
        FUNCTION ??MT_ZdoMgmtLqiRequest?relay,0203H
        PUBLIC ??MT_ZdoMgmtNwkDiscRequest?relay
        FUNCTION ??MT_ZdoMgmtNwkDiscRequest?relay,0203H
        PUBLIC ??MT_ZdoMgmtNwkUpdateRequest?relay
        FUNCTION ??MT_ZdoMgmtNwkUpdateRequest?relay,0203H
        PUBLIC ??MT_ZdoMgmtPermitJoinRequest?relay
        FUNCTION ??MT_ZdoMgmtPermitJoinRequest?relay,0203H
        PUBLIC ??MT_ZdoMgmtRtgRequest?relay
        FUNCTION ??MT_ZdoMgmtRtgRequest?relay,0203H
        PUBLIC ??MT_ZdoNWKAddressRequest?relay
        FUNCTION ??MT_ZdoNWKAddressRequest?relay,0203H
        PUBLIC ??MT_ZdoNetworkDiscoveryReq?relay
        FUNCTION ??MT_ZdoNetworkDiscoveryReq?relay,0203H
        PUBLIC ??MT_ZdoNodeDescRequest?relay
        FUNCTION ??MT_ZdoNodeDescRequest?relay,0203H
        PUBLIC ??MT_ZdoNwkAddrOfInterestReq?relay
        FUNCTION ??MT_ZdoNwkAddrOfInterestReq?relay,0203H
        PUBLIC ??MT_ZdoNwkDiscoveryCnfCB?relay
        FUNCTION ??MT_ZdoNwkDiscoveryCnfCB?relay,0203H
        PUBLIC ??MT_ZdoPowerDescRequest?relay
        FUNCTION ??MT_ZdoPowerDescRequest?relay,0203H
        PUBLIC ??MT_ZdoRegisterForZDOMsg?relay
        FUNCTION ??MT_ZdoRegisterForZDOMsg?relay,0203H
        PUBLIC ??MT_ZdoRemoveRegisteredCB?relay
        FUNCTION ??MT_ZdoRemoveRegisteredCB?relay,0203H
        PUBLIC ??MT_ZdoSendData?relay
        FUNCTION ??MT_ZdoSendData?relay,0203H
        PUBLIC ??MT_ZdoSendMsgCB?relay
        FUNCTION ??MT_ZdoSendMsgCB?relay,0203H
        PUBLIC ??MT_ZdoServiceDiscRequest?relay
        FUNCTION ??MT_ZdoServiceDiscRequest?relay,0203H
        PUBLIC ??MT_ZdoSimpleDescRequest?relay
        FUNCTION ??MT_ZdoSimpleDescRequest?relay,0203H
        PUBLIC ??MT_ZdoSrcRtgCB?relay
        FUNCTION ??MT_ZdoSrcRtgCB?relay,0203H
        PUBLIC ??MT_ZdoStartupFromApp?relay
        FUNCTION ??MT_ZdoStartupFromApp?relay,0203H
        PUBLIC ??MT_ZdoStateChangeCB?relay
        FUNCTION ??MT_ZdoStateChangeCB?relay,0203H
        PUBLIC ??MT_ZdoUnbindRequest?relay
        FUNCTION ??MT_ZdoUnbindRequest?relay,0203H
        PUBLIC ??MT_ZdoUserDescRequest?relay
        FUNCTION ??MT_ZdoUserDescRequest?relay,0203H
        PUBLIC ??MT_ZdoUserDescSet?relay
        FUNCTION ??MT_ZdoUserDescSet?relay,0203H
        PUBLIC MT_ZdoActiveEpRequest
        FUNCTION MT_ZdoActiveEpRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC MT_ZdoAddrRspCB
        FUNCTION MT_ZdoAddrRspCB,021203H
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC MT_ZdoBeaconIndCB
        FUNCTION MT_ZdoBeaconIndCB,021603H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC MT_ZdoBindRequest
        FUNCTION MT_ZdoBindRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 43, STACK
        PUBLIC MT_ZdoCommandProcessing
        FUNCTION MT_ZdoCommandProcessing,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC MT_ZdoComplexDescRequest
        FUNCTION MT_ZdoComplexDescRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        FUNCTION MT_ZdoConcentratorIndCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC MT_ZdoDirectCB
        FUNCTION MT_ZdoDirectCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC MT_ZdoEndDevAnnce
        FUNCTION MT_ZdoEndDevAnnce,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC MT_ZdoEndDevAnnceCB
        FUNCTION MT_ZdoEndDevAnnceCB,021203H
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC MT_ZdoEndDevBindRequest
        FUNCTION MT_ZdoEndDevBindRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 95, STACK
        PUBLIC MT_ZdoEndDeviceTimeoutRequest
        FUNCTION MT_ZdoEndDeviceTimeoutRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC MT_ZdoHandleExceptions
        FUNCTION MT_ZdoHandleExceptions,0a1203H
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 25, STACK
        PUBLIC MT_ZdoIEEEAddrRequest
        FUNCTION MT_ZdoIEEEAddrRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC MT_ZdoInit
        FUNCTION MT_ZdoInit,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC MT_ZdoJoinCnfCB
        FUNCTION MT_ZdoJoinCnfCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC MT_ZdoJoinReq
        FUNCTION MT_ZdoJoinReq,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        FUNCTION MT_ZdoLeaveInd,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC MT_ZdoMatchDescRequest
        FUNCTION MT_ZdoMatchDescRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 97, STACK
        PUBLIC MT_ZdoMgmtBindRequest
        FUNCTION MT_ZdoMgmtBindRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC MT_ZdoMgmtDirectJoinRequest
        FUNCTION MT_ZdoMgmtDirectJoinRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC MT_ZdoMgmtLeaveRequest
        FUNCTION MT_ZdoMgmtLeaveRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC MT_ZdoMgmtLqiRequest
        FUNCTION MT_ZdoMgmtLqiRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC MT_ZdoMgmtNwkDiscRequest
        FUNCTION MT_ZdoMgmtNwkDiscRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC MT_ZdoMgmtNwkUpdateRequest
        FUNCTION MT_ZdoMgmtNwkUpdateRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC MT_ZdoMgmtPermitJoinRequest
        FUNCTION MT_ZdoMgmtPermitJoinRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC MT_ZdoMgmtRtgRequest
        FUNCTION MT_ZdoMgmtRtgRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC MT_ZdoNWKAddressRequest
        FUNCTION MT_ZdoNWKAddressRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC MT_ZdoNetworkDiscoveryReq
        FUNCTION MT_ZdoNetworkDiscoveryReq,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC MT_ZdoNodeDescRequest
        FUNCTION MT_ZdoNodeDescRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC MT_ZdoNwkAddrOfInterestReq
        FUNCTION MT_ZdoNwkAddrOfInterestReq,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC MT_ZdoNwkDiscoveryCnfCB
        FUNCTION MT_ZdoNwkDiscoveryCnfCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC MT_ZdoPowerDescRequest
        FUNCTION MT_ZdoPowerDescRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC MT_ZdoRegisterForZDOMsg
        FUNCTION MT_ZdoRegisterForZDOMsg,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC MT_ZdoRemoveRegisteredCB
        FUNCTION MT_ZdoRemoveRegisteredCB,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC MT_ZdoSendData
        FUNCTION MT_ZdoSendData,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC MT_ZdoSendMsgCB
        FUNCTION MT_ZdoSendMsgCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC MT_ZdoServiceDiscRequest
        FUNCTION MT_ZdoServiceDiscRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC MT_ZdoSimpleDescRequest
        FUNCTION MT_ZdoSimpleDescRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC MT_ZdoSrcRtgCB
        FUNCTION MT_ZdoSrcRtgCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC MT_ZdoStartupFromApp
        FUNCTION MT_ZdoStartupFromApp,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC MT_ZdoStateChangeCB
        FUNCTION MT_ZdoStateChangeCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC MT_ZdoUnbindRequest
        FUNCTION MT_ZdoUnbindRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 43, STACK
        PUBLIC MT_ZdoUserDescRequest
        FUNCTION MT_ZdoUserDescRequest,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC MT_ZdoUserDescSet
        FUNCTION MT_ZdoUserDescSet,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC _zdoCallbackSub
        PUBLIC pBeaconIndBuf
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
MT_BuildAndSendZToolResponse SYMBOL "MT_BuildAndSendZToolResponse"
??MT_BuildAndSendZToolResponse?relay SYMBOL "?relay", MT_BuildAndSendZToolResponse
MT_Word2Buf         SYMBOL "MT_Word2Buf"
??MT_Word2Buf?relay SYMBOL "?relay", MT_Word2Buf
ZDApp_JoinReq       SYMBOL "ZDApp_JoinReq"
??ZDApp_JoinReq?relay SYMBOL "?relay", ZDApp_JoinReq
ZDApp_NetworkDiscoveryReq SYMBOL "ZDApp_NetworkDiscoveryReq"
??ZDApp_NetworkDiscoveryReq?relay SYMBOL "?relay", ZDApp_NetworkDiscoveryReq
ZDOInitDevice       SYMBOL "ZDOInitDevice"
??ZDOInitDevice?relay SYMBOL "?relay", ZDOInitDevice
ZDO_DeregisterForZdoCB SYMBOL "ZDO_DeregisterForZdoCB"
??ZDO_DeregisterForZdoCB?relay SYMBOL "?relay", ZDO_DeregisterForZdoCB
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
??ZDO_ParseAddrRsp?relay SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
??ZDO_ParseDeviceAnnce?relay SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_RegisterForZDOMsg SYMBOL "ZDO_RegisterForZDOMsg"
??ZDO_RegisterForZDOMsg?relay SYMBOL "?relay", ZDO_RegisterForZDOMsg
ZDO_RegisterForZdoCB SYMBOL "ZDO_RegisterForZdoCB"
??ZDO_RegisterForZdoCB?relay SYMBOL "?relay", ZDO_RegisterForZdoCB
ZDO_RemoveRegisteredCB SYMBOL "ZDO_RemoveRegisteredCB"
??ZDO_RemoveRegisteredCB?relay SYMBOL "?relay", ZDO_RemoveRegisteredCB
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
??ZDP_BindUnbindReq?relay SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_DeviceAnnce     SYMBOL "ZDP_DeviceAnnce"
??ZDP_DeviceAnnce?relay SYMBOL "?relay", ZDP_DeviceAnnce
ZDP_EndDeviceBindReq SYMBOL "ZDP_EndDeviceBindReq"
??ZDP_EndDeviceBindReq?relay SYMBOL "?relay", ZDP_EndDeviceBindReq
ZDP_EndDeviceTimeoutReq SYMBOL "ZDP_EndDeviceTimeoutReq"
??ZDP_EndDeviceTimeoutReq?relay SYMBOL "?relay", ZDP_EndDeviceTimeoutReq
ZDP_IEEEAddrReq     SYMBOL "ZDP_IEEEAddrReq"
??ZDP_IEEEAddrReq?relay SYMBOL "?relay", ZDP_IEEEAddrReq
ZDP_MatchDescReq    SYMBOL "ZDP_MatchDescReq"
??ZDP_MatchDescReq?relay SYMBOL "?relay", ZDP_MatchDescReq
ZDP_MgmtDirectJoinReq SYMBOL "ZDP_MgmtDirectJoinReq"
??ZDP_MgmtDirectJoinReq?relay SYMBOL "?relay", ZDP_MgmtDirectJoinReq
ZDP_MgmtLeaveReq    SYMBOL "ZDP_MgmtLeaveReq"
??ZDP_MgmtLeaveReq?relay SYMBOL "?relay", ZDP_MgmtLeaveReq
ZDP_MgmtNwkDiscReq  SYMBOL "ZDP_MgmtNwkDiscReq"
??ZDP_MgmtNwkDiscReq?relay SYMBOL "?relay", ZDP_MgmtNwkDiscReq
ZDP_MgmtNwkUpdateReq SYMBOL "ZDP_MgmtNwkUpdateReq"
??ZDP_MgmtNwkUpdateReq?relay SYMBOL "?relay", ZDP_MgmtNwkUpdateReq
ZDP_MgmtPermitJoinReq SYMBOL "ZDP_MgmtPermitJoinReq"
??ZDP_MgmtPermitJoinReq?relay SYMBOL "?relay", ZDP_MgmtPermitJoinReq
ZDP_NWKAddrOfInterestReq SYMBOL "ZDP_NWKAddrOfInterestReq"
??ZDP_NWKAddrOfInterestReq?relay SYMBOL "?relay", ZDP_NWKAddrOfInterestReq
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
??ZDP_NwkAddrReq?relay SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_SendData        SYMBOL "ZDP_SendData"
??ZDP_SendData?relay SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscReq   SYMBOL "ZDP_ServerDiscReq"
??ZDP_ServerDiscReq?relay SYMBOL "?relay", ZDP_ServerDiscReq
ZDP_SimpleDescReq   SYMBOL "ZDP_SimpleDescReq"
??ZDP_SimpleDescReq?relay SYMBOL "?relay", ZDP_SimpleDescReq
ZDP_UserDescSet     SYMBOL "ZDP_UserDescSet"
??ZDP_UserDescSet?relay SYMBOL "?relay", ZDP_UserDescSet
osal_build_uint32   SYMBOL "osal_build_uint32"
??osal_build_uint32?relay SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
sAddrExtCpy         SYMBOL "sAddrExtCpy"
??sAddrExtCpy?relay SYMBOL "?relay", sAddrExtCpy
MT_ZdoActiveEpRequest SYMBOL "MT_ZdoActiveEpRequest"
??MT_ZdoActiveEpRequest?relay SYMBOL "?relay", MT_ZdoActiveEpRequest
MT_ZdoAddrRspCB     SYMBOL "MT_ZdoAddrRspCB"
??MT_ZdoAddrRspCB?relay SYMBOL "?relay", MT_ZdoAddrRspCB
MT_ZdoBeaconIndCB   SYMBOL "MT_ZdoBeaconIndCB"
??MT_ZdoBeaconIndCB?relay SYMBOL "?relay", MT_ZdoBeaconIndCB
MT_ZdoBindRequest   SYMBOL "MT_ZdoBindRequest"
??MT_ZdoBindRequest?relay SYMBOL "?relay", MT_ZdoBindRequest
MT_ZdoCommandProcessing SYMBOL "MT_ZdoCommandProcessing"
??MT_ZdoCommandProcessing?relay SYMBOL "?relay", MT_ZdoCommandProcessing
MT_ZdoComplexDescRequest SYMBOL "MT_ZdoComplexDescRequest"
??MT_ZdoComplexDescRequest?relay SYMBOL "?relay", MT_ZdoComplexDescRequest
MT_ZdoDirectCB      SYMBOL "MT_ZdoDirectCB"
??MT_ZdoDirectCB?relay SYMBOL "?relay", MT_ZdoDirectCB
MT_ZdoEndDevAnnce   SYMBOL "MT_ZdoEndDevAnnce"
??MT_ZdoEndDevAnnce?relay SYMBOL "?relay", MT_ZdoEndDevAnnce
MT_ZdoEndDevAnnceCB SYMBOL "MT_ZdoEndDevAnnceCB"
??MT_ZdoEndDevAnnceCB?relay SYMBOL "?relay", MT_ZdoEndDevAnnceCB
MT_ZdoEndDevBindRequest SYMBOL "MT_ZdoEndDevBindRequest"
??MT_ZdoEndDevBindRequest?relay SYMBOL "?relay", MT_ZdoEndDevBindRequest
MT_ZdoEndDeviceTimeoutRequest SYMBOL "MT_ZdoEndDeviceTimeoutRequest"
??MT_ZdoEndDeviceTimeoutRequest?relay SYMBOL "?relay", MT_ZdoEndDeviceTimeoutRequest
MT_ZdoHandleExceptions SYMBOL "MT_ZdoHandleExceptions"
??MT_ZdoHandleExceptions?relay SYMBOL "?relay", MT_ZdoHandleExceptions
MT_ZdoIEEEAddrRequest SYMBOL "MT_ZdoIEEEAddrRequest"
??MT_ZdoIEEEAddrRequest?relay SYMBOL "?relay", MT_ZdoIEEEAddrRequest
MT_ZdoInit          SYMBOL "MT_ZdoInit"
??MT_ZdoInit?relay  SYMBOL "?relay", MT_ZdoInit
MT_ZdoJoinCnfCB     SYMBOL "MT_ZdoJoinCnfCB"
??MT_ZdoJoinCnfCB?relay SYMBOL "?relay", MT_ZdoJoinCnfCB
MT_ZdoJoinReq       SYMBOL "MT_ZdoJoinReq"
??MT_ZdoJoinReq?relay SYMBOL "?relay", MT_ZdoJoinReq
MT_ZdoMatchDescRequest SYMBOL "MT_ZdoMatchDescRequest"
??MT_ZdoMatchDescRequest?relay SYMBOL "?relay", MT_ZdoMatchDescRequest
MT_ZdoMgmtBindRequest SYMBOL "MT_ZdoMgmtBindRequest"
??MT_ZdoMgmtBindRequest?relay SYMBOL "?relay", MT_ZdoMgmtBindRequest
MT_ZdoMgmtDirectJoinRequest SYMBOL "MT_ZdoMgmtDirectJoinRequest"
??MT_ZdoMgmtDirectJoinRequest?relay SYMBOL "?relay", MT_ZdoMgmtDirectJoinRequest
MT_ZdoMgmtLeaveRequest SYMBOL "MT_ZdoMgmtLeaveRequest"
??MT_ZdoMgmtLeaveRequest?relay SYMBOL "?relay", MT_ZdoMgmtLeaveRequest
MT_ZdoMgmtLqiRequest SYMBOL "MT_ZdoMgmtLqiRequest"
??MT_ZdoMgmtLqiRequest?relay SYMBOL "?relay", MT_ZdoMgmtLqiRequest
MT_ZdoMgmtNwkDiscRequest SYMBOL "MT_ZdoMgmtNwkDiscRequest"
??MT_ZdoMgmtNwkDiscRequest?relay SYMBOL "?relay", MT_ZdoMgmtNwkDiscRequest
MT_ZdoMgmtNwkUpdateRequest SYMBOL "MT_ZdoMgmtNwkUpdateRequest"
??MT_ZdoMgmtNwkUpdateRequest?relay SYMBOL "?relay", MT_ZdoMgmtNwkUpdateRequest
MT_ZdoMgmtPermitJoinRequest SYMBOL "MT_ZdoMgmtPermitJoinRequest"
??MT_ZdoMgmtPermitJoinRequest?relay SYMBOL "?relay", MT_ZdoMgmtPermitJoinRequest
MT_ZdoMgmtRtgRequest SYMBOL "MT_ZdoMgmtRtgRequest"
??MT_ZdoMgmtRtgRequest?relay SYMBOL "?relay", MT_ZdoMgmtRtgRequest
MT_ZdoNWKAddressRequest SYMBOL "MT_ZdoNWKAddressRequest"
??MT_ZdoNWKAddressRequest?relay SYMBOL "?relay", MT_ZdoNWKAddressRequest
MT_ZdoNetworkDiscoveryReq SYMBOL "MT_ZdoNetworkDiscoveryReq"
??MT_ZdoNetworkDiscoveryReq?relay SYMBOL "?relay", MT_ZdoNetworkDiscoveryReq
MT_ZdoNodeDescRequest SYMBOL "MT_ZdoNodeDescRequest"
??MT_ZdoNodeDescRequest?relay SYMBOL "?relay", MT_ZdoNodeDescRequest
MT_ZdoNwkAddrOfInterestReq SYMBOL "MT_ZdoNwkAddrOfInterestReq"
??MT_ZdoNwkAddrOfInterestReq?relay SYMBOL "?relay", MT_ZdoNwkAddrOfInterestReq
MT_ZdoNwkDiscoveryCnfCB SYMBOL "MT_ZdoNwkDiscoveryCnfCB"
??MT_ZdoNwkDiscoveryCnfCB?relay SYMBOL "?relay", MT_ZdoNwkDiscoveryCnfCB
MT_ZdoPowerDescRequest SYMBOL "MT_ZdoPowerDescRequest"
??MT_ZdoPowerDescRequest?relay SYMBOL "?relay", MT_ZdoPowerDescRequest
MT_ZdoRegisterForZDOMsg SYMBOL "MT_ZdoRegisterForZDOMsg"
??MT_ZdoRegisterForZDOMsg?relay SYMBOL "?relay", MT_ZdoRegisterForZDOMsg
MT_ZdoRemoveRegisteredCB SYMBOL "MT_ZdoRemoveRegisteredCB"
??MT_ZdoRemoveRegisteredCB?relay SYMBOL "?relay", MT_ZdoRemoveRegisteredCB
MT_ZdoSendData      SYMBOL "MT_ZdoSendData"
??MT_ZdoSendData?relay SYMBOL "?relay", MT_ZdoSendData
MT_ZdoSendMsgCB     SYMBOL "MT_ZdoSendMsgCB"
??MT_ZdoSendMsgCB?relay SYMBOL "?relay", MT_ZdoSendMsgCB
MT_ZdoServiceDiscRequest SYMBOL "MT_ZdoServiceDiscRequest"
??MT_ZdoServiceDiscRequest?relay SYMBOL "?relay", MT_ZdoServiceDiscRequest
MT_ZdoSimpleDescRequest SYMBOL "MT_ZdoSimpleDescRequest"
??MT_ZdoSimpleDescRequest?relay SYMBOL "?relay", MT_ZdoSimpleDescRequest
MT_ZdoSrcRtgCB      SYMBOL "MT_ZdoSrcRtgCB"
??MT_ZdoSrcRtgCB?relay SYMBOL "?relay", MT_ZdoSrcRtgCB
MT_ZdoStartupFromApp SYMBOL "MT_ZdoStartupFromApp"
??MT_ZdoStartupFromApp?relay SYMBOL "?relay", MT_ZdoStartupFromApp
MT_ZdoStateChangeCB SYMBOL "MT_ZdoStateChangeCB"
??MT_ZdoStateChangeCB?relay SYMBOL "?relay", MT_ZdoStateChangeCB
MT_ZdoUnbindRequest SYMBOL "MT_ZdoUnbindRequest"
??MT_ZdoUnbindRequest?relay SYMBOL "?relay", MT_ZdoUnbindRequest
MT_ZdoUserDescRequest SYMBOL "MT_ZdoUserDescRequest"
??MT_ZdoUserDescRequest?relay SYMBOL "?relay", MT_ZdoUserDescRequest
MT_ZdoUserDescSet   SYMBOL "MT_ZdoUserDescSet"
??MT_ZdoUserDescSet?relay SYMBOL "?relay", MT_ZdoUserDescSet

        EXTERN ??MT_BuildAndSendZToolResponse?relay
        FUNCTION ??MT_BuildAndSendZToolResponse?relay,00H
        EXTERN ??MT_Word2Buf?relay
        FUNCTION ??MT_Word2Buf?relay,00H
        EXTERN ??ZDApp_JoinReq?relay
        FUNCTION ??ZDApp_JoinReq?relay,00H
        EXTERN ??ZDApp_NetworkDiscoveryReq?relay
        FUNCTION ??ZDApp_NetworkDiscoveryReq?relay,00H
        EXTERN ??ZDOInitDevice?relay
        FUNCTION ??ZDOInitDevice?relay,00H
        EXTERN ??ZDO_DeregisterForZdoCB?relay
        FUNCTION ??ZDO_DeregisterForZdoCB?relay,00H
        EXTERN ??ZDO_ParseAddrRsp?relay
        FUNCTION ??ZDO_ParseAddrRsp?relay,00H
        EXTERN ??ZDO_ParseDeviceAnnce?relay
        FUNCTION ??ZDO_ParseDeviceAnnce?relay,00H
        EXTERN ??ZDO_RegisterForZDOMsg?relay
        FUNCTION ??ZDO_RegisterForZDOMsg?relay,00H
        EXTERN ??ZDO_RegisterForZdoCB?relay
        FUNCTION ??ZDO_RegisterForZdoCB?relay,00H
        EXTERN ??ZDO_RemoveRegisteredCB?relay
        FUNCTION ??ZDO_RemoveRegisteredCB?relay,00H
        EXTERN ??ZDP_BindUnbindReq?relay
        FUNCTION ??ZDP_BindUnbindReq?relay,00H
        EXTERN ??ZDP_DeviceAnnce?relay
        FUNCTION ??ZDP_DeviceAnnce?relay,00H
        EXTERN ??ZDP_EndDeviceBindReq?relay
        FUNCTION ??ZDP_EndDeviceBindReq?relay,00H
        EXTERN ??ZDP_EndDeviceTimeoutReq?relay
        FUNCTION ??ZDP_EndDeviceTimeoutReq?relay,00H
        EXTERN ??ZDP_IEEEAddrReq?relay
        FUNCTION ??ZDP_IEEEAddrReq?relay,00H
        EXTERN ??ZDP_MatchDescReq?relay
        FUNCTION ??ZDP_MatchDescReq?relay,00H
        EXTERN ??ZDP_MgmtDirectJoinReq?relay
        FUNCTION ??ZDP_MgmtDirectJoinReq?relay,00H
        EXTERN ??ZDP_MgmtLeaveReq?relay
        FUNCTION ??ZDP_MgmtLeaveReq?relay,00H
        EXTERN ??ZDP_MgmtNwkDiscReq?relay
        FUNCTION ??ZDP_MgmtNwkDiscReq?relay,00H
        EXTERN ??ZDP_MgmtNwkUpdateReq?relay
        FUNCTION ??ZDP_MgmtNwkUpdateReq?relay,00H
        EXTERN ??ZDP_MgmtPermitJoinReq?relay
        FUNCTION ??ZDP_MgmtPermitJoinReq?relay,00H
        EXTERN ??ZDP_NWKAddrOfInterestReq?relay
        FUNCTION ??ZDP_NWKAddrOfInterestReq?relay,00H
        EXTERN ??ZDP_NwkAddrReq?relay
        FUNCTION ??ZDP_NwkAddrReq?relay,00H
        EXTERN ??ZDP_SendData?relay
        FUNCTION ??ZDP_SendData?relay,00H
        EXTERN ??ZDP_ServerDiscReq?relay
        FUNCTION ??ZDP_ServerDiscReq?relay,00H
        EXTERN ??ZDP_SimpleDescReq?relay
        FUNCTION ??ZDP_SimpleDescReq?relay,00H
        EXTERN ??ZDP_UserDescSet?relay
        FUNCTION ??ZDP_UserDescSet?relay,00H
        EXTERN ??osal_build_uint32?relay
        FUNCTION ??osal_build_uint32?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??sAddrExtCpy?relay
        FUNCTION ??sAddrExtCpy?relay,00H
        EXTERN MT_BuildAndSendZToolResponse
        FUNCTION MT_BuildAndSendZToolResponse,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 89, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MT_TaskID
        EXTERN MT_Word2Buf
        FUNCTION MT_Word2Buf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_JoinReq
        FUNCTION ZDApp_JoinReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_NetworkDiscoveryReq
        FUNCTION ZDApp_NetworkDiscoveryReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDOInitDevice
        FUNCTION ZDOInitDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_DeregisterForZdoCB
        FUNCTION ZDO_DeregisterForZdoCB,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_RegisterForZDOMsg
        FUNCTION ZDO_RegisterForZDOMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_RegisterForZdoCB
        FUNCTION ZDO_RegisterForZdoCB,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_RemoveRegisteredCB
        FUNCTION ZDO_RemoveRegisteredCB,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_DeviceAnnce
        FUNCTION ZDP_DeviceAnnce,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EndDeviceBindReq
        FUNCTION ZDP_EndDeviceBindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 95, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EndDeviceTimeoutReq
        FUNCTION ZDP_EndDeviceTimeoutReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_IEEEAddrReq
        FUNCTION ZDP_IEEEAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MatchDescReq
        FUNCTION ZDP_MatchDescReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 97, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtDirectJoinReq
        FUNCTION ZDP_MgmtDirectJoinReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLeaveReq
        FUNCTION ZDP_MgmtLeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtNwkDiscReq
        FUNCTION ZDP_MgmtNwkDiscReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtNwkUpdateReq
        FUNCTION ZDP_MgmtNwkUpdateReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtPermitJoinReq
        FUNCTION ZDP_MgmtPermitJoinReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NWKAddrOfInterestReq
        FUNCTION ZDP_NWKAddrOfInterestReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscReq
        FUNCTION ZDP_ServerDiscReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescReq
        FUNCTION ZDP_SimpleDescReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_TransID
        EXTERN ZDP_UserDescSet
        FUNCTION ZDP_UserDescSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\Texas Instruments\Z-Stack Lighting 1.0.2\Components\mt\MT_ZDO.c
//    1 /**************************************************************************************************
//    2   Filename:       MT_ZDO.c
//    3   Revised:        $Date: 2013-11-13 13:09:12 -0800 (Wed, 13 Nov 2013) $
//    4   Revision:       $Revision: 36079 $
//    5 
//    6   Description:    MonitorTest functions for the ZDO layer.
//    7 
//    8 
//    9   Copyright 2004-2013 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 #ifdef MT_ZDO_FUNC
//   41 
//   42 /**************************************************************************************************
//   43  * INCLUDES
//   44  **************************************************************************************************/
//   45 #include "ZComDef.h"
//   46 #include "OSAL.h"
//   47 #include "OSAL_Nv.h"
//   48 #include "MT.h"
//   49 #include "MT_ZDO.h"
//   50 #include "APSMEDE.h"
//   51 #include "ZDConfig.h"
//   52 #include "ZDProfile.h"
//   53 #include "ZDObject.h"
//   54 #include "ZDApp.h"
//   55 #include "OnBoard.h"
//   56 #include "aps_groups.h"
//   57 
//   58 #if defined ( MT_ZDO_EXTENSIONS )
//   59   #include "rtg.h"
//   60 #endif
//   61 #if defined ( MT_SYS_KEY_MANAGEMENT ) || defined ( MT_ZDO_EXTENSIONS )
//   62   #include "ZDSecMgr.h"
//   63 #endif
//   64 
//   65 #include "nwk_util.h"
//   66 
//   67 /**************************************************************************************************
//   68  * CONSTANTS
//   69  **************************************************************************************************/
//   70 #define MT_ZDO_END_DEVICE_ANNCE_IND_LEN   0x0D
//   71 #define MT_ZDO_ADDR_RSP_LEN               0x0D
//   72 #define MT_ZDO_BIND_UNBIND_RSP_LEN        0x03
//   73 #define MT_ZDO_BEACON_IND_LEN             21
//   74 #define MT_ZDO_BEACON_IND_PACK_LEN        (MT_UART_TX_BUFF_MAX - SPI_0DATA_MSG_LEN)
//   75 #define MT_ZDO_JOIN_CNF_LEN               5
//   76 
//   77 // Message must pack nwk addr, entire (not just pointer to) ieee addr, and packet cost, so the
//   78 // sizeof(zdoConcentratorInd_t) is not usable.
//   79 #define MT_ZDO_CONCENTRATOR_IND_LEN      (2 + Z_EXTADDR_LEN + 1)
//   80 
//   81 #define MTZDO_RESPONSE_BUFFER_LEN   100
//   82 
//   83 #define MTZDO_MAX_MATCH_CLUSTERS    16
//   84 #define MTZDO_MAX_ED_BIND_CLUSTERS  15
//   85 
//   86 // Conversion from ZDO Cluster Id to the RPC AREQ Id is direct as follows:
//   87 #define MT_ZDO_CID_TO_AREQ_ID(CId)  ((uint8)(CId) | 0x80)
//   88 
//   89 #define MT_ZDO_STATUS_LEN   1
//   90 
//   91 #if defined ( MT_ZDO_EXTENSIONS )
//   92 typedef struct
//   93 {
//   94   uint16            ami;
//   95   uint16            keyNvId;   // index to the Link Key table in NV
//   96   ZDSecMgr_Authentication_Option authenticateOption;
//   97 } ZDSecMgrEntry_t;
//   98 #endif  // MT_ZDO_EXTENSIONS
//   99 
//  100 /**************************************************************************************************
//  101  * GLOBAL VARIABLES
//  102  **************************************************************************************************/

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  103 uint32 _zdoCallbackSub;
_zdoCallbackSub:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  104 uint8 *pBeaconIndBuf = NULL;
pBeaconIndBuf:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  105 
//  106 /**************************************************************************************************
//  107  * LOCAL VARIABLES
//  108  **************************************************************************************************/
//  109 
//  110 /**************************************************************************************************
//  111  * LOCAL FUNCTIONS
//  112  **************************************************************************************************/
//  113 #if defined (MT_ZDO_FUNC)
//  114 void MT_ZdoNWKAddressRequest(uint8 *pBuf);
//  115 void MT_ZdoIEEEAddrRequest(uint8 *pBuf);
//  116 void MT_ZdoNodeDescRequest(uint8 *pBuf);
//  117 void MT_ZdoPowerDescRequest(uint8 *pBuf);
//  118 void MT_ZdoSimpleDescRequest(uint8 *pBuf);
//  119 void MT_ZdoActiveEpRequest(uint8 *pBuf);
//  120 void MT_ZdoMatchDescRequest(uint8 *pBuf);
//  121 void MT_ZdoComplexDescRequest(uint8 *pBuf);
//  122 void MT_ZdoUserDescRequest(uint8 *pBuf);
//  123 void MT_ZdoEndDevAnnce(uint8 *pBuf);
//  124 void MT_ZdoUserDescSet(uint8 *pBuf);
//  125 void MT_ZdoServiceDiscRequest(uint8 *pBuf);
//  126 #if defined ( ZIGBEE_CHILD_AGING )
//  127 void MT_ZdoEndDeviceTimeoutRequest(uint8 *pBuf);
//  128 #endif // ZIGBEE_CHILD_AGING
//  129 void MT_ZdoEndDevBindRequest(uint8 *pBuf);
//  130 void MT_ZdoBindRequest(uint8 *pBuf);
//  131 void MT_ZdoUnbindRequest(uint8 *pBuf);
//  132 void MT_ZdoMgmtNwkDiscRequest(uint8 *pBuf);
//  133 #if defined ( MT_SYS_KEY_MANAGEMENT )
//  134 void MT_ZdoSetLinkKey(uint8 *pBuf);
//  135 void MT_ZdoRemoveLinkKey(uint8 *pBuf);
//  136 void MT_ZdoGetLinkKey(uint8 *pBuf);
//  137 #endif /* MT_SYS_KEY_MANAGEMENT */
//  138 void MT_ZdoNetworkDiscoveryReq(uint8 *pBuf);
//  139 void MT_ZdoJoinReq(uint8 *pBuf);
//  140 /* Call back function */
//  141 void *MT_ZdoNwkDiscoveryCnfCB ( void *pStr );
//  142 void *MT_ZdoBeaconIndCB ( void *pStr );
//  143 void *MT_ZdoJoinCnfCB ( void *pStr );
//  144 #if defined (MT_ZDO_MGMT)
//  145 void MT_ZdoMgmtLqiRequest(uint8 *pBuf);
//  146 void MT_ZdoMgmtRtgRequest(uint8 *pBuf);
//  147 void MT_ZdoMgmtBindRequest(uint8 *pBuf);
//  148 void MT_ZdoMgmtLeaveRequest(uint8 *pBuf);
//  149 void MT_ZdoMgmtDirectJoinRequest(uint8 *pBuf);
//  150 void MT_ZdoMgmtPermitJoinRequest(uint8 *pBuf);
//  151 void MT_ZdoMgmtNwkUpdateRequest(uint8 *pBuf);
//  152 #endif /* MT_ZDO_MGMT */
//  153 void MT_ZdoSendData( uint8 *pBuf );
//  154 void MT_ZdoNwkAddrOfInterestReq( uint8 *pBuf );
//  155 void MT_ZdoStartupFromApp(uint8 *pBuf);
//  156 void MT_ZdoRegisterForZDOMsg(uint8 *pBuf);
//  157 void MT_ZdoRemoveRegisteredCB(uint8 *pBuf);
//  158 #endif /* MT_ZDO_FUNC */
//  159 
//  160 #if defined (MT_ZDO_CB_FUNC)
//  161 uint8 MT_ZdoHandleExceptions( afIncomingMSGPacket_t *pData, zdoIncomingMsg_t *inMsg );
//  162 void MT_ZdoAddrRspCB( ZDO_NwkIEEEAddrResp_t *pMsg, uint16 clusterID );
//  163 void MT_ZdoEndDevAnnceCB( ZDO_DeviceAnnce_t *pMsg, uint16 srcAddr );
//  164 void MT_ZdoBindUnbindRspCB( uint16 clusterID, uint16 srcAddr, uint8 status );
//  165 void* MT_ZdoSrcRtgCB( void *pStr );
//  166 static void *MT_ZdoConcentratorIndCB(void *pStr);
//  167 static void *MT_ZdoLeaveInd(void *vPtr);
//  168 #endif /* MT_ZDO_CB_FUNC */
//  169 
//  170 #if defined ( MT_ZDO_EXTENSIONS )
//  171 void MT_ZdoSecAddLinkKey( uint8 *pBuf );
//  172 void MT_ZdoSecEntryLookupExt( uint8 *pBuf );
//  173 void MT_ZdoSecDeviceRemove( uint8 *pBuf );
//  174 void MT_ZdoExtRouteDisc( uint8 *pBuf );
//  175 void MT_ZdoExtRouteCheck( uint8 *pBuf );
//  176 static void MT_ZdoExtRemoveGroup( uint8 *pBuf );
//  177 static void MT_ZdoExtRemoveAllGroup( uint8 *pBuf );
//  178 static void MT_ZdoExtFindAllGroupsEndpoint( uint8 *pBuf );
//  179 static void MT_ZdoExtFindGroup( uint8 *pBuf );
//  180 static void MT_ZdoExtAddGroup( uint8 *pBuf );
//  181 static void MT_ZdoExtCountAllGroups( uint8 *pBuf );
//  182 extern ZStatus_t ZDSecMgrEntryLookupExt( uint8* extAddr, ZDSecMgrEntry_t** entry );
//  183 #endif // MT_ZDO_EXTENSIONS
//  184 
//  185 #if defined (MT_ZDO_FUNC)
//  186 /***************************************************************************************************
//  187  * @fn      MT_ZdoInit
//  188  *
//  189  * @brief   MT ZDO initialization
//  190  *
//  191  * @param   none
//  192  *
//  193  * @return  none
//  194  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  195 void MT_ZdoInit(void)
MT_ZdoInit:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function MT_ZdoInit
        CODE
//  196 {
        FUNCALL MT_ZdoInit, ZDO_RegisterForZdoCB
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoInit, ZDO_RegisterForZdoCB
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoInit, ZDO_RegisterForZdoCB
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  197 #ifdef MT_ZDO_CB_FUNC
//  198   /* Register with ZDO for indication callbacks */
//  199   ZDO_RegisterForZdoCB(ZDO_SRC_RTG_IND_CBID, &MT_ZdoSrcRtgCB);
        ; Setup parameters for call to function ZDO_RegisterForZdoCB
        MOV     R2,#??MT_ZdoSrcRtgCB?relay & 0xff
        MOV     R3,#(??MT_ZdoSrcRtgCB?relay >> 8) & 0xff
        MOV     R1,#0x0
        LCALL   ??ZDO_RegisterForZdoCB?relay
//  200   ZDO_RegisterForZdoCB(ZDO_CONCENTRATOR_IND_CBID, &MT_ZdoConcentratorIndCB);
        ; Setup parameters for call to function ZDO_RegisterForZdoCB
        MOV     R2,#??MT_ZdoConcentratorIndCB?relay & 0xff
        MOV     R3,#(??MT_ZdoConcentratorIndCB?relay >> 8) & 0xff
        MOV     R1,#0x1
        LCALL   ??ZDO_RegisterForZdoCB?relay
//  201   ZDO_RegisterForZdoCB(ZDO_LEAVE_IND_CBID, &MT_ZdoLeaveInd);
        ; Setup parameters for call to function ZDO_RegisterForZdoCB
        MOV     R2,#??MT_ZdoLeaveInd?relay & 0xff
        MOV     R3,#(??MT_ZdoLeaveInd?relay >> 8) & 0xff
        MOV     R1,#0x6
        LCALL   ??ZDO_RegisterForZdoCB?relay
          CFI EndBlock cfiBlock0
//  202 #endif
//  203 }
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock1
//  204 
//  205 /***************************************************************************************************
//  206  * @fn      MT_ZdoCommandProcessing
//  207  *
//  208  * @brief
//  209  *
//  210  *   Process all the ZDO commands that are issued by test tool
//  211  *
//  212  * @param   pBuf - pointer to the msg buffer
//  213  *
//  214  *          | LEN  | CMD0  | CMD1  |  DATA  |
//  215  *          |  1   |   1   |   1   |  0-255 |
//  216  *
//  217  * @return  status
//  218  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  219 uint8 MT_ZdoCommandProcessing(uint8* pBuf)
MT_ZdoCommandProcessing:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function MT_ZdoCommandProcessing
        CODE
//  220 {
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoNWKAddressRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoIEEEAddrRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoNodeDescRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoPowerDescRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoSimpleDescRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoActiveEpRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMatchDescRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoComplexDescRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoUserDescRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoEndDevAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoUserDescSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoServiceDiscRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoEndDeviceTimeoutRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoEndDevBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoUnbindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoNetworkDiscoveryReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoJoinReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMgmtNwkDiscRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMgmtLqiRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMgmtRtgRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMgmtBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMgmtLeaveRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMgmtDirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMgmtPermitJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoMgmtNwkUpdateRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoStartupFromApp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoSendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoNwkAddrOfInterestReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoRegisterForZDOMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoCommandProcessing, MT_ZdoRemoveRegisteredCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//  221   uint8 status = MT_RPC_SUCCESS;
        MOV     R6,#0x0
//  222 
//  223   switch (pBuf[MT_RPC_POS_CMD1])
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_0 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_1 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_2 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_4 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_5 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_6 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_7 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_8 & 0xFFFF
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_9 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_10 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_11 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_12 & 0xFFFF
        ADD     A,#-0x13
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_13 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_14 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_15 & 0xFFFF
        ADD     A,#-0x4
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_16 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_17 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_18 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_19 & 0xFFFF
        ADD     A,#-0x7
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_20 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_21 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_22 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_23 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_24 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_25 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_26 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_27 & 0xFFFF
        ADD     A,#-0x7
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_28 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_29 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??MT_ZdoCommandProcessing_30 & 0xFFFF
        LJMP    ??MT_ZdoCommandProcessing_31 & 0xFFFF
//  224   {
//  225 #if defined ( ZDO_NWKADDR_REQUEST )
//  226     case MT_ZDO_NWK_ADDR_REQ:
//  227       MT_ZdoNWKAddressRequest(pBuf);
??MT_ZdoCommandProcessing_0:
        ; Setup parameters for call to function MT_ZdoNWKAddressRequest
        LCALL   ??MT_ZdoNWKAddressRequest?relay
//  228       break;
        LJMP    ??MT_ZdoCommandProcessing_32 & 0xFFFF
//  229 #endif
//  230 
//  231 #if defined ( ZDO_IEEEADDR_REQUEST )
//  232     case MT_ZDO_IEEE_ADDR_REQ:
//  233       MT_ZdoIEEEAddrRequest(pBuf);
??MT_ZdoCommandProcessing_1:
        ; Setup parameters for call to function MT_ZdoIEEEAddrRequest
        LCALL   ??MT_ZdoIEEEAddrRequest?relay
//  234       break;
        LJMP    ??MT_ZdoCommandProcessing_32 & 0xFFFF
//  235 #endif
//  236 
//  237 #if defined ( ZDO_NODEDESC_REQUEST )
//  238     case MT_ZDO_NODE_DESC_REQ:
//  239       MT_ZdoNodeDescRequest(pBuf);
??MT_ZdoCommandProcessing_2:
        ; Setup parameters for call to function MT_ZdoNodeDescRequest
        LCALL   ??MT_ZdoNodeDescRequest?relay
//  240       break;
        LJMP    ??MT_ZdoCommandProcessing_32 & 0xFFFF
//  241 #endif
//  242 
//  243 #if defined ( ZDO_POWERDESC_REQUEST )
//  244     case MT_ZDO_POWER_DESC_REQ:
//  245       MT_ZdoPowerDescRequest(pBuf);
??MT_ZdoCommandProcessing_3:
        ; Setup parameters for call to function MT_ZdoPowerDescRequest
        LCALL   ??MT_ZdoPowerDescRequest?relay
//  246       break;
        LJMP    ??MT_ZdoCommandProcessing_32 & 0xFFFF
//  247 #endif
//  248 
//  249 #if defined ( ZDO_SIMPLEDESC_REQUEST )
//  250     case MT_ZDO_SIMPLE_DESC_REQ:
//  251       MT_ZdoSimpleDescRequest(pBuf);
??MT_ZdoCommandProcessing_4:
        ; Setup parameters for call to function MT_ZdoSimpleDescRequest
        LCALL   ??MT_ZdoSimpleDescRequest?relay
//  252       break;
        LJMP    ??MT_ZdoCommandProcessing_32 & 0xFFFF
//  253 #endif
//  254 
//  255 #if defined ( ZDO_ACTIVEEP_REQUEST )
//  256     case MT_ZDO_ACTIVE_EP_REQ:
//  257       MT_ZdoActiveEpRequest(pBuf);
??MT_ZdoCommandProcessing_5:
        ; Setup parameters for call to function MT_ZdoActiveEpRequest
        LCALL   ??MT_ZdoActiveEpRequest?relay
//  258       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  259 #endif
//  260 
//  261 #if defined ( ZDO_MATCH_REQUEST )
//  262     case MT_ZDO_MATCH_DESC_REQ:
//  263       MT_ZdoMatchDescRequest(pBuf);
??MT_ZdoCommandProcessing_6:
        ; Setup parameters for call to function MT_ZdoMatchDescRequest
        LCALL   ??MT_ZdoMatchDescRequest?relay
//  264       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  265 #endif
//  266 
//  267 #if defined ( ZDO_COMPLEXDESC_REQUEST )
//  268     case MT_ZDO_COMPLEX_DESC_REQ:
//  269       MT_ZdoComplexDescRequest(pBuf);
??MT_ZdoCommandProcessing_7:
        ; Setup parameters for call to function MT_ZdoComplexDescRequest
        LCALL   ??MT_ZdoComplexDescRequest?relay
//  270       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  271 #endif
//  272 
//  273 #if defined ( ZDO_USERDESC_REQUEST )
//  274     case MT_ZDO_USER_DESC_REQ:
//  275       MT_ZdoUserDescRequest(pBuf);
??MT_ZdoCommandProcessing_8:
        ; Setup parameters for call to function MT_ZdoUserDescRequest
        LCALL   ??MT_ZdoUserDescRequest?relay
//  276       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  277 #endif
//  278 
//  279 #if defined ( ZDO_ENDDEVICE_ANNCE )
//  280     case MT_ZDO_END_DEV_ANNCE:
//  281       MT_ZdoEndDevAnnce(pBuf);
??MT_ZdoCommandProcessing_9:
        ; Setup parameters for call to function MT_ZdoEndDevAnnce
        LCALL   ??MT_ZdoEndDevAnnce?relay
//  282       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  283 #endif
//  284 
//  285 #if defined ( ZDO_USERDESCSET_REQUEST )
//  286     case MT_ZDO_USER_DESC_SET:
//  287       MT_ZdoUserDescSet(pBuf);
??MT_ZdoCommandProcessing_10:
        ; Setup parameters for call to function MT_ZdoUserDescSet
        LCALL   ??MT_ZdoUserDescSet?relay
//  288       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  289 #endif
//  290 
//  291 #if defined ( ZDO_SERVERDISC_REQUEST )
//  292     case MT_ZDO_SERVICE_DISC_REQ:
//  293       MT_ZdoServiceDiscRequest(pBuf);
??MT_ZdoCommandProcessing_11:
        ; Setup parameters for call to function MT_ZdoServiceDiscRequest
        LCALL   ??MT_ZdoServiceDiscRequest?relay
//  294       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  295 #endif
//  296 
//  297 #if defined ( ZIGBEE_CHILD_AGING )
//  298 #if defined ( ZDO_ENDDEVICETIMEOUT_REQUEST )
//  299     case MT_ZDO_END_DEVICE_TIMEOUT_REQ:
//  300       MT_ZdoEndDeviceTimeoutRequest(pBuf);
??MT_ZdoCommandProcessing_12:
        ; Setup parameters for call to function MT_ZdoEndDeviceTimeoutRequest
        LCALL   ??MT_ZdoEndDeviceTimeoutRequest?relay
//  301       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  302 #endif
//  303 #endif // ZIGBEE_CHILD_AGING
//  304 
//  305 #if defined ( ZDO_ENDDEVICEBIND_REQUEST )
//  306     case MT_ZDO_END_DEV_BIND_REQ:
//  307       MT_ZdoEndDevBindRequest(pBuf);
??MT_ZdoCommandProcessing_13:
        ; Setup parameters for call to function MT_ZdoEndDevBindRequest
        LCALL   ??MT_ZdoEndDevBindRequest?relay
//  308       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  309 #endif
//  310 
//  311 #if defined ( ZDO_BIND_UNBIND_REQUEST )
//  312     case MT_ZDO_BIND_REQ:
//  313       MT_ZdoBindRequest(pBuf);
??MT_ZdoCommandProcessing_14:
        ; Setup parameters for call to function MT_ZdoBindRequest
        LCALL   ??MT_ZdoBindRequest?relay
//  314       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  315 #endif
//  316 
//  317 #if defined ( ZDO_BIND_UNBIND_REQUEST )
//  318     case MT_ZDO_UNBIND_REQ:
//  319       MT_ZdoUnbindRequest(pBuf);
??MT_ZdoCommandProcessing_15:
        ; Setup parameters for call to function MT_ZdoUnbindRequest
        LCALL   ??MT_ZdoUnbindRequest?relay
//  320       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  321 #endif
//  322 
//  323 #if defined ( MT_SYS_KEY_MANAGEMENT )
//  324     case MT_ZDO_SET_LINK_KEY:
//  325       MT_ZdoSetLinkKey(pBuf);
//  326       break;
//  327 
//  328     case MT_ZDO_REMOVE_LINK_KEY:
//  329       MT_ZdoRemoveLinkKey(pBuf);
//  330       break;
//  331 
//  332     case MT_ZDO_GET_LINK_KEY:
//  333       MT_ZdoGetLinkKey(pBuf);
//  334       break;
//  335 #endif // MT_SYS_KEY_MANAGEMENT
//  336 
//  337 #if defined ( ZDO_MANUAL_JOIN )
//  338     case MT_ZDO_NWK_DISCOVERY_REQ:
//  339       MT_ZdoNetworkDiscoveryReq(pBuf);
??MT_ZdoCommandProcessing_16:
        ; Setup parameters for call to function MT_ZdoNetworkDiscoveryReq
        LCALL   ??MT_ZdoNetworkDiscoveryReq?relay
//  340       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  341 
//  342     case MT_ZDO_JOIN_REQ:
//  343       MT_ZdoJoinReq(pBuf);
??MT_ZdoCommandProcessing_17:
        ; Setup parameters for call to function MT_ZdoJoinReq
        LCALL   ??MT_ZdoJoinReq?relay
//  344       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  345 #endif
//  346 
//  347 #if defined ( ZDO_MGMT_NWKDISC_REQUEST )
//  348     case MT_ZDO_MGMT_NWKDISC_REQ:
//  349       MT_ZdoMgmtNwkDiscRequest(pBuf);
??MT_ZdoCommandProcessing_20:
        ; Setup parameters for call to function MT_ZdoMgmtNwkDiscRequest
        LCALL   ??MT_ZdoMgmtNwkDiscRequest?relay
//  350       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  351 #endif
//  352 
//  353 #if defined ( ZDO_MGMT_LQI_REQUEST )
//  354     case MT_ZDO_MGMT_LQI_REQ:
//  355       MT_ZdoMgmtLqiRequest(pBuf);
??MT_ZdoCommandProcessing_21:
        ; Setup parameters for call to function MT_ZdoMgmtLqiRequest
        LCALL   ??MT_ZdoMgmtLqiRequest?relay
//  356       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  357 #endif
//  358 
//  359 #if defined ( ZDO_MGMT_RTG_REQUEST )
//  360     case MT_ZDO_MGMT_RTG_REQ:
//  361       MT_ZdoMgmtRtgRequest(pBuf);
??MT_ZdoCommandProcessing_22:
        ; Setup parameters for call to function MT_ZdoMgmtRtgRequest
        LCALL   ??MT_ZdoMgmtRtgRequest?relay
//  362       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  363 #endif
//  364 
//  365 #if defined ( ZDO_MGMT_BIND_REQUEST )
//  366     case MT_ZDO_MGMT_BIND_REQ:
//  367       MT_ZdoMgmtBindRequest(pBuf);
??MT_ZdoCommandProcessing_23:
        ; Setup parameters for call to function MT_ZdoMgmtBindRequest
        LCALL   ??MT_ZdoMgmtBindRequest?relay
//  368       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  369 #endif
//  370 
//  371 #if defined ( ZDO_MGMT_LEAVE_REQUEST )
//  372     case MT_ZDO_MGMT_LEAVE_REQ:
//  373       MT_ZdoMgmtLeaveRequest(pBuf);
??MT_ZdoCommandProcessing_24:
        ; Setup parameters for call to function MT_ZdoMgmtLeaveRequest
        LCALL   ??MT_ZdoMgmtLeaveRequest?relay
//  374       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  375 #endif
//  376 
//  377 #if defined ( ZDO_MGMT_JOINDIRECT_REQUEST )
//  378     case MT_ZDO_MGMT_DIRECT_JOIN_REQ:
//  379       MT_ZdoMgmtDirectJoinRequest(pBuf);
??MT_ZdoCommandProcessing_25:
        ; Setup parameters for call to function MT_ZdoMgmtDirectJoinRequest
        LCALL   ??MT_ZdoMgmtDirectJoinRequest?relay
//  380       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  381 #endif
//  382 
//  383 #if defined ( ZDO_MGMT_PERMIT_JOIN_REQUEST )
//  384     case MT_ZDO_MGMT_PERMIT_JOIN_REQ:
//  385       MT_ZdoMgmtPermitJoinRequest(pBuf);
??MT_ZdoCommandProcessing_26:
        ; Setup parameters for call to function MT_ZdoMgmtPermitJoinRequest
        LCALL   ??MT_ZdoMgmtPermitJoinRequest?relay
//  386       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  387 #endif
//  388 
//  389 #if defined ( ZDO_MGMT_NWKUPDATE_REQUEST )
//  390     case MT_ZDO_MGMT_NWK_UPDATE_REQ:
//  391       MT_ZdoMgmtNwkUpdateRequest(pBuf);
??MT_ZdoCommandProcessing_27:
        ; Setup parameters for call to function MT_ZdoMgmtNwkUpdateRequest
        LCALL   ??MT_ZdoMgmtNwkUpdateRequest?relay
//  392       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  393 #endif
//  394 
//  395 #if defined ( ZDO_NETWORKSTART_REQUEST )
//  396     case MT_ZDO_STARTUP_FROM_APP:
//  397       MT_ZdoStartupFromApp(pBuf);
??MT_ZdoCommandProcessing_30:
        ; Setup parameters for call to function MT_ZdoStartupFromApp
        LCALL   ??MT_ZdoStartupFromApp?relay
//  398       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  399 #endif
//  400 
//  401     case MT_ZDO_SEND_DATA:
//  402       MT_ZdoSendData( pBuf );
??MT_ZdoCommandProcessing_18:
        ; Setup parameters for call to function MT_ZdoSendData
        LCALL   ??MT_ZdoSendData?relay
//  403       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  404 
//  405     case MT_ZDO_NWK_ADDR_OF_INTEREST_REQ:
//  406       MT_ZdoNwkAddrOfInterestReq( pBuf );
??MT_ZdoCommandProcessing_19:
        ; Setup parameters for call to function MT_ZdoNwkAddrOfInterestReq
        LCALL   ??MT_ZdoNwkAddrOfInterestReq?relay
//  407       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  408 
//  409     case MT_ZDO_MSG_CB_REGISTER:
//  410       MT_ZdoRegisterForZDOMsg(pBuf);
??MT_ZdoCommandProcessing_28:
        ; Setup parameters for call to function MT_ZdoRegisterForZDOMsg
        LCALL   ??MT_ZdoRegisterForZDOMsg?relay
//  411       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  412 
//  413     case MT_ZDO_MSG_CB_REMOVE:
//  414       MT_ZdoRemoveRegisteredCB(pBuf);
??MT_ZdoCommandProcessing_29:
        ; Setup parameters for call to function MT_ZdoRemoveRegisteredCB
        LCALL   ??MT_ZdoRemoveRegisteredCB?relay
//  415       break;
        SJMP    ??MT_ZdoCommandProcessing_32
//  416 
//  417 #if defined ( MT_ZDO_EXTENSIONS )
//  418     case MT_ZDO_SEC_ADD_LINK_KEY:
//  419       MT_ZdoSecAddLinkKey( pBuf );
//  420       break;
//  421 
//  422     case MT_ZDO_SEC_ENTRY_LOOKUP_EXT:
//  423       MT_ZdoSecEntryLookupExt( pBuf );
//  424       break;
//  425 
//  426     case MT_ZDO_SEC_DEVICE_REMOVE:
//  427        MT_ZdoSecDeviceRemove( pBuf );
//  428        break;
//  429 
//  430     case MT_ZDO_EXT_ROUTE_DISC:
//  431        MT_ZdoExtRouteDisc( pBuf );
//  432        break;
//  433 
//  434     case MT_ZDO_EXT_ROUTE_CHECK:
//  435        MT_ZdoExtRouteCheck( pBuf );
//  436        break;
//  437 
//  438     case MT_ZDO_EXT_REMOVE_GROUP:
//  439       MT_ZdoExtRemoveGroup( pBuf );
//  440       break;
//  441 
//  442     case MT_ZDO_EXT_REMOVE_ALL_GROUP:
//  443       MT_ZdoExtRemoveAllGroup( pBuf );
//  444       break;
//  445 
//  446     case MT_ZDO_EXT_FIND_ALL_GROUPS_ENDPOINT:
//  447       MT_ZdoExtFindAllGroupsEndpoint( pBuf );
//  448       break;
//  449 
//  450     case MT_ZDO_EXT_FIND_GROUP:
//  451       MT_ZdoExtFindGroup( pBuf );
//  452       break;
//  453 
//  454     case MT_ZDO_EXT_ADD_GROUP:
//  455       MT_ZdoExtAddGroup( pBuf );
//  456       break;
//  457 
//  458     case MT_ZDO_EXT_COUNT_ALL_GROUPS:
//  459       MT_ZdoExtCountAllGroups( pBuf );
//  460       break;
//  461 #endif  // MT_ZDO_EXTENSIONS
//  462 
//  463     default:
//  464       status = MT_RPC_ERR_COMMAND_ID;
??MT_ZdoCommandProcessing_31:
        INC     R6
        INC     R6
//  465       break;
//  466   }
//  467 
//  468   return status;
??MT_ZdoCommandProcessing_32:
        MOV     A,R6
        MOV     R1,A
        LJMP    ??Subroutine107_0 & 0xFFFF
          CFI EndBlock cfiBlock2
//  469 }
//  470 
//  471 /***************************************************************************************************
//  472  * @fn      MT_ZdoNwkAddrReq
//  473  *
//  474  * @brief   Handle a nwk address request.
//  475  *
//  476  * @param   pData  - MT message data
//  477  *
//  478  * @return  void
//  479  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  480 void MT_ZdoNWKAddressRequest(uint8 *pBuf)
MT_ZdoNWKAddressRequest:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function MT_ZdoNWKAddressRequest
        CODE
//  481 {
        FUNCALL MT_ZdoNWKAddressRequest, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNWKAddressRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  482   uint8 cmdId;
//  483   uint8 retValue;
//  484   uint8 reqType;
//  485   uint8 startIndex;
//  486   uint8 *pExtAddr;
//  487 
//  488   /* parse header */
//  489   cmdId = pBuf[MT_RPC_POS_CMD1];
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
//  490   pBuf += MT_RPC_FRAME_HDR_SZ;
//  491 
//  492   /* parse parameters */
//  493   pExtAddr = pBuf;
        MOV     A,R2
        ADD     A,#0x3
        MOV     R6,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R7,A
//  494   pBuf += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,R7
        LCALL   ?Subroutine39 & 0xFFFF
//  495 
//  496   /* Request type */
//  497   reqType = *pBuf++;
//  498 
//  499   /* Start index */
//  500   startIndex = *pBuf;
//  501 
//  502   retValue = (uint8)ZDP_NwkAddrReq(pExtAddr, reqType, startIndex, 0);
??CrossCallReturnLabel_50:
        LCALL   ??ZDP_NwkAddrReq?relay
          CFI EndBlock cfiBlock3
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
//  503 
//  504   /* Build and send back the response */
//  505   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  506 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_103:
        SJMP    ??Subroutine100_0
          CFI EndBlock cfiBlock4
//  507 
//  508 /***************************************************************************************************
//  509  * @fn      MT_ZdoIEEEAddrRequest
//  510  *
//  511  * @brief   Handle a IEEE address request.
//  512  *
//  513  * @param   pData  - MT message data
//  514  *
//  515  * @return  void
//  516  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  517 void MT_ZdoIEEEAddrRequest (uint8 *pBuf)
MT_ZdoIEEEAddrRequest:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function MT_ZdoIEEEAddrRequest
        CODE
//  518 {
        FUNCALL MT_ZdoIEEEAddrRequest, ZDP_IEEEAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoIEEEAddrRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  519   uint8 cmdId;
//  520   uint8 retValue;
//  521   uint16 shortAddr;
//  522   uint8 reqType;
//  523   uint8 startIndex;
//  524 
//  525   /* parse header */
//  526   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine38 & 0xFFFF
//  527   pBuf += MT_RPC_FRAME_HDR_SZ;
//  528 
//  529   /* Dev address */
//  530   shortAddr = BUILD_UINT16(pBuf[0], pBuf[1]);
??CrossCallReturnLabel_48:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_62:
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  531   pBuf += 2;
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R3
        LCALL   ?Subroutine39 & 0xFFFF
//  532 
//  533   /* request type */
//  534   reqType = *pBuf++;
//  535 
//  536   /* start index */
//  537   startIndex = *pBuf;
//  538 
//  539   retValue = (uint8)ZDP_IEEEAddrReq(shortAddr, reqType, startIndex, 0);
??CrossCallReturnLabel_51:
        LCALL   ??ZDP_IEEEAddrReq?relay
        SJMP    ?Subroutine9
          CFI EndBlock cfiBlock5
//  540 
//  541   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  542 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond6 Using cfiCommon0
          CFI Function MT_ZdoNWKAddressRequest
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function MT_ZdoIEEEAddrRequest
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+0
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_133:
        ; Setup parameters for call to function ZDP_NwkAddrReq
        ; Setup parameters for call to function ZDP_IEEEAddrReq
        MOV     R5,#0x0
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine90 & 0xFFFF
          CFI EndBlock cfiBlock9
??CrossCallReturnLabel_155:
        REQUIRE ??Subroutine99_0
        ; // Fall through to label ??Subroutine99_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine99_0:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R2,A
          CFI EndBlock cfiBlock10
        REQUIRE ??Subroutine100_0
        ; // Fall through to label ??Subroutine100_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine100_0:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
          CFI EndBlock cfiBlock11
        REQUIRE ??Subroutine101_0
        ; // Fall through to label ??Subroutine101_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine101_0:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        SJMP    ??Subroutine106_0
          CFI EndBlock cfiBlock12

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   ?Subroutine35 & 0xFFFF
          CFI EndBlock cfiBlock13
??CrossCallReturnLabel_43:
        REQUIRE ??Subroutine102_0
        ; // Fall through to label ??Subroutine102_0
//  543 
//  544 /***************************************************************************************************
//  545  * @fn      MT_ZdoNodeDescRequest
//  546  *
//  547  * @brief   Handle a Node Descriptor request.
//  548  *
//  549  * @param   pData  - MT message data
//  550  *
//  551  * @return  void
//  552  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine102_0:
          CFI Block cfiBlock14 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_NWKAddrOfInterestReq?relay
          CFI EndBlock cfiBlock14
        REQUIRE ??Subroutine103_0
        ; // Fall through to label ??Subroutine103_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine103_0:
          CFI Block cfiBlock15 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
          CFI EndBlock cfiBlock15
        REQUIRE ??Subroutine104_0
        ; // Fall through to label ??Subroutine104_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine104_0:
          CFI Block cfiBlock16 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock16
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine105_0:
          CFI Block cfiBlock17 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_152:
        LCALL   ??MT_BuildAndSendZToolResponse?relay
        MOV     A,#0xa
          CFI EndBlock cfiBlock17
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine106_0:
          CFI Block cfiBlock18 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock18
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine107_0:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock19

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function MT_ZdoPowerDescRequest
          CFI Conditional ??CrossCallReturnLabel_152
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function MT_ZdoActiveEpRequest
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+0
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function MT_ZdoComplexDescRequest
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+0
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function MT_ZdoUserDescRequest
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond23) CFA_SP SP+0
          CFI (cfiCond23) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond24 Using cfiCommon0
          CFI (cfiCond24) Function MT_ZdoNodeDescRequest
          CFI (cfiCond24) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond24) CFA_SP SP+0
          CFI (cfiCond24) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+0
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+0
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+0
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+0
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function MT_ZdoEndDeviceTimeoutRequest
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+0
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker30 Using cfiCommon1
          CFI (cfiPicker30) NoFunction
          CFI (cfiPicker30) Picker
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiPicker30
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine108_0:
          CFI Block cfiCond31 Using cfiCommon0
          CFI Function MT_ZdoMgmtLqiRequest
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond32) CFA_SP SP+0
          CFI (cfiCond32) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+0
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function MT_ZdoPowerDescRequest
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond34) CFA_SP SP+0
          CFI (cfiCond34) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function MT_ZdoActiveEpRequest
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+0
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function MT_ZdoComplexDescRequest
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+0
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function MT_ZdoUserDescRequest
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+0
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function MT_ZdoNodeDescRequest
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+0
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+0
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+0
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+0
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond42 Using cfiCommon0
          CFI (cfiCond42) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond42) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond42) CFA_SP SP+0
          CFI (cfiCond42) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function MT_ZdoEndDeviceTimeoutRequest
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond43) CFA_SP SP+0
          CFI (cfiCond43) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker44 Using cfiCommon1
          CFI (cfiPicker44) NoFunction
          CFI (cfiPicker44) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_156:
        MOV     R2,A
        MOV     R1,#0x65
        RET
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiPicker44

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond45 Using cfiCommon0
          CFI Function MT_ZdoEndDevAnnce
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function MT_ZdoServiceDiscRequest
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+0
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function MT_ZdoPowerDescRequest
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+0
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function MT_ZdoActiveEpRequest
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+0
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function MT_ZdoComplexDescRequest
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+0
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function MT_ZdoUserDescRequest
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond50) CFA_SP SP+0
          CFI (cfiCond50) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function MT_ZdoNodeDescRequest
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+0
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+0
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+0
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+0
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+0
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function MT_ZdoEndDeviceTimeoutRequest
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_153
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+0
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function MT_ZdoMgmtLqiRequest
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_154
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+0
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_154
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+0
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_154
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+0
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker60 Using cfiCommon1
          CFI (cfiPicker60) NoFunction
          CFI (cfiPicker60) Picker
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_202:
        MOV     A,R6
        RET
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiPicker60

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  553 void MT_ZdoNodeDescRequest (uint8 *pBuf)
MT_ZdoNodeDescRequest:
          CFI Block cfiBlock61 Using cfiCommon0
          CFI Function MT_ZdoNodeDescRequest
        CODE
//  554 {
        FUNCALL MT_ZdoNodeDescRequest, ZDP_NWKAddrOfInterestReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNodeDescRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
//  555   uint8 cmdId;
//  556   uint8 retValue;
//  557   zAddrType_t destAddr;
//  558   uint16 shortAddr;
//  559 
//  560   /* parse header */
//  561   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ??Subroutine115_0 & 0xFFFF
//  562   pBuf += MT_RPC_FRAME_HDR_SZ;
//  563 
//  564   /* Destination address */
//  565   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_185:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  566   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_169:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
//  567   pBuf += 2;
//  568 
//  569   /* Network address of interest */
//  570   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
//  571   pBuf += 2;
//  572 
//  573   retValue = (uint8)ZDP_NodeDescReq( &destAddr, shortAddr, 0);
??CrossCallReturnLabel_68:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,#0x2
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_126:
        MOV     A,R1
        SJMP    ??Subroutine102_0
          CFI EndBlock cfiBlock61
//  574 
//  575   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  576 }
//  577 
//  578 /***************************************************************************************************
//  579  * @fn      MT_ZdoPowerDescRequest
//  580  *
//  581  * @brief   Handle a Power Descriptor request.
//  582  *
//  583  * @param   pData  - MT message data
//  584  *
//  585  * @return  void
//  586  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  587 void MT_ZdoPowerDescRequest(uint8 *pBuf)
MT_ZdoPowerDescRequest:
          CFI Block cfiBlock62 Using cfiCommon0
          CFI Function MT_ZdoPowerDescRequest
        CODE
//  588 {
        FUNCALL MT_ZdoPowerDescRequest, ZDP_NWKAddrOfInterestReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoPowerDescRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
//  589   uint8 cmdId;
//  590   uint8 retValue;
//  591   zAddrType_t destAddr;
//  592   uint16 shortAddr;
//  593 
//  594   /* parse header */
//  595   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ??Subroutine115_0 & 0xFFFF
//  596   pBuf += MT_RPC_FRAME_HDR_SZ;
//  597 
//  598   /* Dev address */
//  599   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_186:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  600   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_170:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
//  601   pBuf += 2;
//  602 
//  603   /* Network address of interest */
//  604   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
//  605   pBuf += 2;
//  606 
//  607   retValue = (uint8)ZDP_PowerDescReq( &destAddr, shortAddr, 0);
??CrossCallReturnLabel_69:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,#0x3
        SJMP    ?Subroutine1
          CFI EndBlock cfiBlock62
//  608 
//  609   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  610 }
//  611 
//  612 /***************************************************************************************************
//  613  * @fn      MT_ZdoSimpleDescRequest
//  614  *
//  615  * @brief   Handle a Simple Descriptor request.
//  616  *
//  617  * @param   pBuf  - MT message data
//  618  *
//  619  * @return  void
//  620  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  621 void MT_ZdoSimpleDescRequest(uint8 *pBuf)
MT_ZdoSimpleDescRequest:
          CFI Block cfiBlock63 Using cfiCommon0
          CFI Function MT_ZdoSimpleDescRequest
        CODE
//  622 {
        FUNCALL MT_ZdoSimpleDescRequest, ZDP_SimpleDescReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoSimpleDescRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
//  623   uint8 cmdId;
//  624   uint8 retValue;
//  625   uint8 epInt;
//  626   zAddrType_t destAddr;
//  627   uint16 shortAddr;
//  628 
//  629   /* parse header */
//  630   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ??Subroutine115_0 & 0xFFFF
//  631   pBuf += MT_RPC_FRAME_HDR_SZ;
//  632 
//  633   /* Dev address */
//  634   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_187:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  635   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_171:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
//  636   pBuf += 2;
//  637 
//  638   /* Network address of interest */
//  639   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
//  640   pBuf += 2;
//  641 
//  642   /* endpoint/interface */
//  643   epInt = *pBuf++;
//  644 
//  645   retValue = (uint8)ZDP_SimpleDescReq( &destAddr, shortAddr, epInt, 0);
??CrossCallReturnLabel_70:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_42:
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_SimpleDescReq?relay
        LJMP    ??Subroutine103_0 & 0xFFFF
          CFI EndBlock cfiBlock63
//  646 
//  647   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  648 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond64 Using cfiCommon0
          CFI Function MT_ZdoPowerDescRequest
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function MT_ZdoActiveEpRequest
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+0
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function MT_ZdoComplexDescRequest
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+0
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function MT_ZdoUserDescRequest
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+0
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+0
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker69 Using cfiCommon1
          CFI (cfiPicker69) NoFunction
          CFI (cfiPicker69) Picker
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_127:
        MOV     A,#0x2
        RET
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiPicker69

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function MT_ZdoNodeDescRequest
          CFI Conditional ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function MT_ZdoPowerDescRequest
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_43
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+0
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function MT_ZdoActiveEpRequest
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_43
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+0
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function MT_ZdoComplexDescRequest
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_43
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+0
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function MT_ZdoUserDescRequest
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_43
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+0
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_42
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+0
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker76 Using cfiCommon1
          CFI (cfiPicker76) NoFunction
          CFI (cfiPicker76) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0x0
        CLR     A
        ADDC    A,R3
        MOV     R5,A
        RET
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiPicker76
//  649 
//  650 /***************************************************************************************************
//  651  * @fn      MT_ZdoActiveEpRequest
//  652  *
//  653  * @brief   Handle a Active EP request.
//  654  *
//  655  * @param   pBuf  - MT message data
//  656  *
//  657  * @return  void
//  658  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  659 void MT_ZdoActiveEpRequest(uint8 *pBuf)
MT_ZdoActiveEpRequest:
          CFI Block cfiBlock77 Using cfiCommon0
          CFI Function MT_ZdoActiveEpRequest
        CODE
//  660 {
        FUNCALL MT_ZdoActiveEpRequest, ZDP_NWKAddrOfInterestReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoActiveEpRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
//  661   uint8 cmdId;
//  662   uint8 retValue;
//  663   zAddrType_t destAddr;
//  664   uint16 shortAddr;
//  665 
//  666   /* parse header */
//  667   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ??Subroutine115_0 & 0xFFFF
//  668   pBuf += MT_RPC_FRAME_HDR_SZ;
//  669 
//  670   /* Dev address */
//  671   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_188:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  672   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_172:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
//  673   pBuf += 2;
//  674 
//  675   /* Network address of interest */
//  676   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
//  677   pBuf += 2;
//  678 
//  679   retValue = (uint8)ZDP_ActiveEPReq( &destAddr, shortAddr, 0);
??CrossCallReturnLabel_71:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,#0x5
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock77
//  680 
//  681   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  682 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond78 Using cfiCommon0
          CFI Function MT_ZdoNodeDescRequest
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function MT_ZdoPowerDescRequest
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+0
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+0
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function MT_ZdoActiveEpRequest
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+0
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function MT_ZdoComplexDescRequest
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+0
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function MT_ZdoUserDescRequest
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+0
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker84 Using cfiCommon1
          CFI (cfiPicker84) NoFunction
          CFI (cfiPicker84) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_161:
        ; Setup parameters for call to function ZDP_NWKAddrOfInterestReq
        ; Setup parameters for call to function ZDP_NWKAddrOfInterestReq
        ; Setup parameters for call to function ZDP_SimpleDescReq
        ; Setup parameters for call to function ZDP_NWKAddrOfInterestReq
        ; Setup parameters for call to function ZDP_NWKAddrOfInterestReq
        ; Setup parameters for call to function ZDP_NWKAddrOfInterestReq
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiPicker84

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond85 Using cfiCommon0
          CFI Function MT_ZdoNodeDescRequest
          CFI Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function MT_ZdoPowerDescRequest
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_69
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+0
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_70
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+0
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function MT_ZdoActiveEpRequest
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_71
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+0
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function MT_ZdoComplexDescRequest
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_72
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+0
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function MT_ZdoUserDescRequest
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_73
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+0
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function MT_ZdoMatchDescRequest
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_46
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+0
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_47
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+0
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function MT_ZdoUserDescSet
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_30
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+0
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_31
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+0
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker95 Using cfiCommon1
          CFI (cfiPicker95) NoFunction
          CFI (cfiPicker95) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiPicker95
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiCond96 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function MT_ZdoMatchDescRequest
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_158
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+0
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_159
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+0
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_160
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+0
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function MT_ZdoNodeDescRequest
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_68
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+0
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function MT_ZdoPowerDescRequest
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_69
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+0
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_70
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+0
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function MT_ZdoActiveEpRequest
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_71
          CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond103) CFA_SP SP+0
          CFI (cfiCond103) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function MT_ZdoComplexDescRequest
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_72
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+0
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function MT_ZdoUserDescRequest
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_73
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+0
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function MT_ZdoMatchDescRequest
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_46
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+0
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_47
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+0
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function MT_ZdoUserDescSet
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_30
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+0
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_31
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+0
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker110 Using cfiCommon1
          CFI (cfiPicker110) NoFunction
          CFI (cfiPicker110) Picker
        MOVX    @DPTR,A
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiPicker110
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiCond111 Using cfiCommon0
          CFI Function MT_ZdoMgmtLeaveRequest
          CFI Conditional ??CrossCallReturnLabel_165, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function MT_ZdoDirectCB
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_165, ??CrossCallReturnLabel_111
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+0
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function MT_ZdoSrcRtgCB
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_165, ??CrossCallReturnLabel_112
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+0
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function MT_ZdoMatchDescRequest
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_157
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+0
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function MT_ZdoMatchDescRequest
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_158
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+0
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_159
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+0
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_160
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+0
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function MT_ZdoNodeDescRequest
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_68
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+0
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function MT_ZdoPowerDescRequest
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_69
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+0
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_70
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+0
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function MT_ZdoActiveEpRequest
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_71
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+0
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function MT_ZdoComplexDescRequest
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_72
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+0
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function MT_ZdoUserDescRequest
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_73
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+0
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function MT_ZdoMatchDescRequest
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_46
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+0
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_47
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+0
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function MT_ZdoUserDescSet
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_30
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+0
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_31
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+0
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker128 Using cfiCommon1
          CFI (cfiPicker128) NoFunction
          CFI (cfiPicker128) Picker
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiPicker128
//  683 
//  684 /***************************************************************************************************
//  685  * @fn      MT_ZdoMatchDescRequest
//  686  *
//  687  * @brief   Handle a Match Descriptor request.
//  688  *
//  689  * @param   pBuf  - MT message data
//  690  *
//  691  * @return  void
//  692  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  693 void MT_ZdoMatchDescRequest(uint8 *pBuf)
MT_ZdoMatchDescRequest:
          CFI Block cfiBlock129 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
        CODE
//  694 {
        FUNCALL MT_ZdoMatchDescRequest, ZDP_MatchDescReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 97, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 97, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMatchDescRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 89, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 89, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 74
        MOV     A,#-0x4a
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 89)
//  695   uint8 cmdId;
//  696   uint8 retValue = 0;
        LCALL   ?Subroutine10 & 0xFFFF
//  697   uint8 i, numInClusters, numOutClusters;
//  698   uint16 profileId;
//  699   zAddrType_t destAddr;
//  700   uint16 shortAddr;
//  701   uint16 inClusters[MTZDO_MAX_MATCH_CLUSTERS], outClusters[MTZDO_MAX_MATCH_CLUSTERS];
//  702 
//  703   /* parse header */
//  704   cmdId = pBuf[MT_RPC_POS_CMD1];
//  705   pBuf += MT_RPC_FRAME_HDR_SZ;
//  706 
//  707   /* Dev address */
//  708   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_183:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  709   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_173:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  710   pBuf += 2;
//  711 
//  712   /* Network address of interest */
//  713   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
//  714   pBuf += 2;
??CrossCallReturnLabel_46:
        LCALL   ?Subroutine53 & 0xFFFF
//  715 
//  716   /* Profile ID */
//  717   profileId = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_166:
        LCALL   ?Subroutine15 & 0xFFFF
//  718   pBuf += 2;
//  719 
//  720   /* NumInClusters */
//  721   numInClusters = *pBuf++;
??CrossCallReturnLabel_4:
        MOV     R7,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
//  722   if ( numInClusters <= MTZDO_MAX_MATCH_CLUSTERS )
        CLR     C
        SUBB    A,#0x11
        JNC     ??MT_ZdoMatchDescRequest_0
//  723   {
//  724     /* IN clusters */
//  725     for ( i = 0; i < numInClusters; i++ )
        MOV     ?V0 + 2,R0
??MT_ZdoMatchDescRequest_1:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R7
        JNC     ??MT_ZdoMatchDescRequest_2
//  726     {
//  727       inClusters[i] = BUILD_UINT16( pBuf[0], pBuf[1]);
        LCALL   ?Subroutine20 & 0xFFFF
//  728       pBuf += 2;
//  729     }
//  730   }
??CrossCallReturnLabel_11:
        MOV     A,#0x2a
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_157:
        SJMP    ??MT_ZdoMatchDescRequest_1
//  731   else
//  732   {
//  733     retValue = ZDP_INVALID_REQTYPE;
??MT_ZdoMatchDescRequest_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        MOVX    @DPTR,A
//  734   }
//  735 
//  736   /* NumOutClusters */
//  737   numOutClusters = *pBuf++;
??MT_ZdoMatchDescRequest_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
//  738   if ( numOutClusters <= MTZDO_MAX_MATCH_CLUSTERS )
        CLR     C
        SUBB    A,#0x11
        JNC     ??MT_ZdoMatchDescRequest_3
//  739   {
//  740     /* OUT Clusters */
//  741     for ( i = 0; i < numOutClusters; i++ )
        MOV     ?V0 + 2,#0x0
??MT_ZdoMatchDescRequest_4:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,?V0 + 6
        JNC     ??MT_ZdoMatchDescRequest_5
//  742     {
//  743       outClusters[i] = BUILD_UINT16( pBuf[0], pBuf[1]);
        LCALL   ?Subroutine20 & 0xFFFF
//  744       pBuf += 2;
//  745     }
//  746   }
??CrossCallReturnLabel_12:
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_158:
        SJMP    ??MT_ZdoMatchDescRequest_4
//  747   else
//  748   {
//  749     retValue = ZDP_INVALID_REQTYPE;
??MT_ZdoMatchDescRequest_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        SJMP    ??MT_ZdoMatchDescRequest_6
//  750   }
//  751 
//  752   if ( retValue == 0 )
??MT_ZdoMatchDescRequest_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JNZ     ??MT_ZdoMatchDescRequest_7
//  753   {
//  754     retValue = (uint8)ZDP_MatchDescReq( &destAddr, shortAddr, profileId, numInClusters,
//  755                                        inClusters, numOutClusters, outClusters, 0);
        ; Setup parameters for call to function ZDP_MatchDescReq
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 92)
        MOV     A,?V0 + 6
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 93)
        MOV     A,#0x2e
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 95)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 97)
        MOV     A,R7
        MOV     R1,A
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_MatchDescReq?relay
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
??MT_ZdoMatchDescRequest_6:
        MOVX    @DPTR,A
//  756   }
//  757 
//  758   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
??MT_ZdoMatchDescRequest_7:
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
//  759 }
        MOV     A,#0x4a
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock129

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond130 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function MT_ZdoMatchDescRequest
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond131) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond131) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+0
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker132 Using cfiCommon1
          CFI (cfiPicker132) NoFunction
          CFI (cfiPicker132) Picker
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_142:
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiPicker132
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine111_0:
          CFI Block cfiCond133 Using cfiCommon0
          CFI Function MT_ZdoEndDevBindRequest
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+0
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function MT_ZdoMatchDescRequest
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+0
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function MT_ZdoMatchDescRequest
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+0
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker137 Using cfiCommon1
          CFI (cfiPicker137) NoFunction
          CFI (cfiPicker137) Picker
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_164:
        INC     ?V0 + 2
        RET
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiPicker137

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond138 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+0
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker140 Using cfiCommon1
          CFI (cfiPicker140) NoFunction
          CFI (cfiPicker140) Picker
        ADD     A,#0x2
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiPicker140
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine112_0:
          CFI Block cfiCond141 Using cfiCommon0
          CFI Function MT_ZdoNetworkDiscoveryReq
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function MT_ZdoMatchDescRequest
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+0
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+0
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker144 Using cfiCommon1
          CFI (cfiPicker144) NoFunction
          CFI (cfiPicker144) Picker
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        ; Setup parameters for call to function ZDApp_NetworkDiscoveryReq
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiPicker144

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond145 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function MT_ZdoMatchDescRequest
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+0
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker147 Using cfiCommon1
          CFI (cfiPicker147) NoFunction
          CFI (cfiPicker147) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,?V0 + 4
        ADD     A,#0x0
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 5,A
        MOV     A,?V0 + 2
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        RET
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiPicker147
//  760 
//  761 /***************************************************************************************************
//  762  * @fn      MT_ZdoComplexDescRequest
//  763  *
//  764  * @brief   Handle a Complex Descriptor request.
//  765  *
//  766  * @param   pBuf  - MT message data
//  767  *
//  768  * @return  void
//  769  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  770 void MT_ZdoComplexDescRequest(uint8 *pBuf)
MT_ZdoComplexDescRequest:
          CFI Block cfiBlock148 Using cfiCommon0
          CFI Function MT_ZdoComplexDescRequest
        CODE
//  771 {
        FUNCALL MT_ZdoComplexDescRequest, ZDP_NWKAddrOfInterestReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoComplexDescRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
//  772   uint8 cmdId;
//  773   uint8 retValue;
//  774   zAddrType_t destAddr;
//  775   uint16 shortAddr;
//  776 
//  777   /* parse header */
//  778   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ??Subroutine115_0 & 0xFFFF
//  779   pBuf += MT_RPC_FRAME_HDR_SZ;
//  780 
//  781   /* Dev address */
//  782   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_189:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  783   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_174:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
//  784   pBuf += 2;
//  785 
//  786   /* Network address of interest */
//  787   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
//  788   pBuf += 2;
//  789 
//  790   retValue = (uint8)ZDP_ComplexDescReq( &destAddr, shortAddr, 0);
??CrossCallReturnLabel_72:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,#0x10
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock148
//  791 
//  792   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  793 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond149 Using cfiCommon0
          CFI Function MT_ZdoNodeDescRequest
          CFI Conditional ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function MT_ZdoPowerDescRequest
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+0
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+0
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function MT_ZdoActiveEpRequest
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+0
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function MT_ZdoMatchDescRequest
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+0
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function MT_ZdoComplexDescRequest
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+0
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function MT_ZdoUserDescRequest
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+0
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function MT_ZdoUserDescSet
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+0
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond157) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+0
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+0
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+0
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+0
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker161 Using cfiCommon1
          CFI (cfiPicker161) NoFunction
          CFI (cfiPicker161) Picker
        MOV     A,#0x2
        MOVX    @DPTR,A
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiPicker161
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine113_0:
          CFI Block cfiCond162 Using cfiCommon0
          CFI Function MT_ZdoMgmtNwkUpdateRequest
          CFI Conditional ??CrossCallReturnLabel_182
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function MT_ZdoNodeDescRequest
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+0
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function MT_ZdoPowerDescRequest
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+0
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+0
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function MT_ZdoActiveEpRequest
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+0
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function MT_ZdoMatchDescRequest
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+0
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function MT_ZdoComplexDescRequest
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+0
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function MT_ZdoUserDescRequest
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+0
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function MT_ZdoUserDescSet
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+0
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+0
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+0
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+0
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+0
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker175 Using cfiCommon1
          CFI (cfiPicker175) NoFunction
          CFI (cfiPicker175) Picker
        MOV     DPL,R2
        MOV     DPH,R3
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiPicker175
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine114_0:
          CFI Block cfiCond176 Using cfiCommon0
          CFI Function MT_ZdoMgmtPermitJoinRequest
          CFI Conditional ??CrossCallReturnLabel_181
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond177) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+0
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function MT_ZdoNodeDescRequest
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+0
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function MT_ZdoPowerDescRequest
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+0
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+0
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function MT_ZdoActiveEpRequest
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+0
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function MT_ZdoMatchDescRequest
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+0
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function MT_ZdoComplexDescRequest
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+0
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function MT_ZdoUserDescRequest
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+0
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function MT_ZdoUserDescSet
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+0
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+0
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+0
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+0
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+0
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker190 Using cfiCommon1
          CFI (cfiPicker190) NoFunction
          CFI (cfiPicker190) Picker
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_217:
        MOV     R1,A
        MOV     A,R4
        MOV     R0,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiPicker190
//  794 
//  795 /***************************************************************************************************
//  796  * @fn      MT_ZdoUserDescRequest
//  797  *
//  798  * @brief   Handle a User Descriptor request.
//  799  *
//  800  * @param   pBuf  - MT message data
//  801  *
//  802  * @return  void
//  803  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  804 void MT_ZdoUserDescRequest(uint8 *pBuf)
MT_ZdoUserDescRequest:
          CFI Block cfiBlock191 Using cfiCommon0
          CFI Function MT_ZdoUserDescRequest
        CODE
//  805 {
        FUNCALL MT_ZdoUserDescRequest, ZDP_NWKAddrOfInterestReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoUserDescRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
//  806   uint8 cmdId;
//  807   uint8 retValue;
//  808   zAddrType_t destAddr;
//  809   uint16 shortAddr;
//  810 
//  811   /* parse header */
//  812   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ??Subroutine115_0 & 0xFFFF
//  813   pBuf += MT_RPC_FRAME_HDR_SZ;
//  814 
//  815   /* Dev address */
//  816   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_190:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  817   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1]);
??CrossCallReturnLabel_175:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
//  818   pBuf += 2;
//  819 
//  820   /* Network address of interest */
//  821   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1]);
//  822   pBuf += 2;
//  823 
//  824   retValue = (uint8)ZDP_UserDescReq( &destAddr, shortAddr, 0);
??CrossCallReturnLabel_73:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,#0x11
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock191
//  825 
//  826   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  827 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond192 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+0
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker194 Using cfiCommon1
          CFI (cfiPicker194) NoFunction
          CFI (cfiPicker194) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiPicker194
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine115_0:
          CFI Block cfiCond195 Using cfiCommon0
          CFI Function MT_ZdoNodeDescRequest
          CFI Conditional ??CrossCallReturnLabel_185
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function MT_ZdoPowerDescRequest
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+0
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+0
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function MT_ZdoActiveEpRequest
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+0
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function MT_ZdoComplexDescRequest
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+0
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function MT_ZdoUserDescRequest
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+0
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+0
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+0
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function MT_ZdoMatchDescRequest
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+0
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+0
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker205 Using cfiCommon1
          CFI (cfiPicker205) NoFunction
          CFI (cfiPicker205) Picker
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_193:
        MOV     A,#0x9
        RET
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiPicker205
//  828 
//  829 /***************************************************************************************************
//  830  * @fn      MT_ZdoEndDevAnnce
//  831  *
//  832  * @brief   Handle a End Device Announce Descriptor request.
//  833  *
//  834  * @param   pBuf  - MT message data
//  835  *
//  836  * @return  void
//  837  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  838 void MT_ZdoEndDevAnnce(uint8 *pBuf)
MT_ZdoEndDevAnnce:
          CFI Block cfiBlock206 Using cfiCommon0
          CFI Function MT_ZdoEndDevAnnce
        CODE
//  839 {
        FUNCALL MT_ZdoEndDevAnnce, ZDP_DeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoEndDevAnnce, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LCALL   ?Subroutine25 & 0xFFFF
//  840   uint8 cmdId;
//  841   uint8 retValue;
//  842   uint16 shortAddr;
//  843   uint8 *pIEEEAddr;
//  844 
//  845   /* parse header */
//  846   cmdId = pBuf[MT_RPC_POS_CMD1];
//  847   pBuf += MT_RPC_FRAME_HDR_SZ;
//  848 
//  849   /* network address */
//  850   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_22:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        LCALL   ?Subroutine66 & 0xFFFF
//  851   pBuf += 2;
//  852 
//  853   /* extended address */
//  854   pIEEEAddr = pBuf;
//  855   pBuf += Z_EXTADDR_LEN;
//  856 
//  857   retValue = (uint8)ZDP_DeviceAnnce( shortAddr, pIEEEAddr, *pBuf, 0);
??CrossCallReturnLabel_108:
        ; Setup parameters for call to function ZDP_DeviceAnnce
        MOV     ?V0 + 0,R0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDP_DeviceAnnce?relay
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock206
//  858 
//  859   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  860 }
//  861 
//  862 /***************************************************************************************************
//  863  * @fn      MT_ZdoUserDescSet
//  864  *
//  865  * @brief   Handle a User Descriptor Set.
//  866  *
//  867  * @param   pBuf  - MT message data
//  868  *
//  869  * @return  void
//  870  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  871 void MT_ZdoUserDescSet(uint8 *pBuf)
MT_ZdoUserDescSet:
          CFI Block cfiBlock207 Using cfiCommon0
          CFI Function MT_ZdoUserDescSet
        CODE
//  872 {
        FUNCALL MT_ZdoUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoUserDescSet, ZDP_UserDescSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoUserDescSet, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 27
        MOV     A,#-0x1b
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 39)
//  873   uint8 cmdId;
//  874   uint8 retValue;
//  875   zAddrType_t destAddr;
//  876   uint16 shortAddr;
//  877   UserDescriptorFormat_t userDesc;
//  878 
//  879   /* parse header */
//  880   cmdId = pBuf[MT_RPC_POS_CMD1];
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
//  881   pBuf += MT_RPC_FRAME_HDR_SZ;
        LCALL   ?Subroutine94 & 0xFFFF
//  882 
//  883   /* Dev address */
//  884   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_197:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  885   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_176:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine29 & 0xFFFF
//  886   pBuf += 2;
//  887 
//  888   /* Network address of interest */
//  889   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
//  890   pBuf += 2;
??CrossCallReturnLabel_30:
        LCALL   ?Subroutine52 & 0xFFFF
//  891 
//  892   /* User descriptor */
//  893   userDesc.len = *pBuf++;
??CrossCallReturnLabel_203:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine60 & 0xFFFF
//  894   osal_memcpy( userDesc.desc, pBuf, userDesc.len );
??CrossCallReturnLabel_85:
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 39)
//  895   pBuf += 16;
//  896 
//  897   retValue = (uint8)ZDP_UserDescSet( &destAddr, shortAddr, &userDesc, 0);
        ; Setup parameters for call to function ZDP_UserDescSet
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x0
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_UserDescSet?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 39)
        LCALL   ?Subroutine97 & 0xFFFF
//  898 
//  899   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
??CrossCallReturnLabel_200:
        MOV     R2,?V0 + 3
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
//  900 }
        MOV     A,#0x1b
          CFI EndBlock cfiBlock207
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock208 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 39)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Valid
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock208

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function MT_ZdoUserDescSet
          CFI Conditional ??CrossCallReturnLabel_200
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function MT_ZdoNWKAddressRequest
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_103
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+0
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function MT_ZdoIEEEAddrRequest
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_103
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+0
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function MT_ZdoBindRequest
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_104
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+0
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function MT_ZdoUnbindRequest
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_104
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+0
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker214 Using cfiCommon1
          CFI (cfiPicker214) NoFunction
          CFI (cfiPicker214) Picker
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiPicker214
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine116_0:
          CFI Block cfiCond215 Using cfiCommon0
          CFI Function MT_ZdoEndDevAnnce
          CFI Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function MT_ZdoServiceDiscRequest
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_155
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+0
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function MT_ZdoPowerDescRequest
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+0
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function MT_ZdoActiveEpRequest
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+0
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function MT_ZdoComplexDescRequest
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+0
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function MT_ZdoUserDescRequest
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+0
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function MT_ZdoNodeDescRequest
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+0
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+0
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+0
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+0
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_152
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+0
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function MT_ZdoEndDeviceTimeoutRequest
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_153
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+0
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function MT_ZdoMgmtLqiRequest
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_154
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+0
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_154
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+0
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_154
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+0
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function MT_ZdoUserDescSet
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+0
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function MT_ZdoNWKAddressRequest
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_103
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+0
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function MT_ZdoIEEEAddrRequest
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_103
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+0
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function MT_ZdoBindRequest
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_104
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+0
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function MT_ZdoUnbindRequest
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_104
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+0
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker235 Using cfiCommon1
          CFI (cfiPicker235) NoFunction
          CFI (cfiPicker235) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        RET
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiPicker235

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond236 Using cfiCommon0
          CFI Function MT_ZdoUserDescSet
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+0
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker238 Using cfiCommon1
          CFI (cfiPicker238) NoFunction
          CFI (cfiPicker238) Picker
        MOV     A,R2
        ADD     A,#0x2
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiPicker238
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiCond239 Using cfiCommon0
          CFI Function MT_ZdoMgmtLeaveRequest
          CFI Conditional ??CrossCallReturnLabel_205
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function MT_ZdoUserDescSet
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+0
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+0
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker242 Using cfiCommon1
          CFI (cfiPicker242) NoFunction
          CFI (cfiPicker242) Picker
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_206:
        RET
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiPicker242
//  901 
//  902 /***************************************************************************************************
//  903  * @fn      MT_ZdoServiceDiscRequest
//  904  *
//  905  * @brief   Handle a Server Discovery request.
//  906  *
//  907  * @param   pBuf  - MT message data
//  908  *
//  909  * @return  void
//  910  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  911 void MT_ZdoServiceDiscRequest(uint8 *pBuf)
MT_ZdoServiceDiscRequest:
          CFI Block cfiBlock243 Using cfiCommon0
          CFI Function MT_ZdoServiceDiscRequest
        CODE
//  912 {
        FUNCALL MT_ZdoServiceDiscRequest, ZDP_ServerDiscReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoServiceDiscRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  913   uint8 cmdId;
//  914   uint8 retValue;
//  915   uint16 serviceMask;
//  916 
//  917   /* parse header */
//  918   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine26 & 0xFFFF
//  919   pBuf += MT_RPC_FRAME_HDR_SZ;
//  920 
//  921   /* Service Mask */
//  922   serviceMask = BUILD_UINT16( pBuf[0], pBuf[1]);
//  923   pBuf += 2;
//  924 
//  925   retValue = (uint8)ZDP_ServerDiscReq( serviceMask, 0);
??CrossCallReturnLabel_24:
        ; Setup parameters for call to function ZDP_ServerDiscReq
        MOV     R1,#0x0
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_214:
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
        LCALL   ??ZDP_ServerDiscReq?relay
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock243
//  926 
//  927   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
//  928 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond244 Using cfiCommon0
          CFI Function MT_ZdoServiceDiscRequest
          CFI Conditional ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function MT_ZdoMgmtLqiRequest
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_27
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+0
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_28
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+0
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_29
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+0
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function MT_ZdoUserDescSet
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_30
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+0
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_31
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+0
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker250 Using cfiCommon1
          CFI (cfiPicker250) NoFunction
          CFI (cfiPicker250) Picker
        MOV     DPL,R2
        MOV     DPH,R3
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiPicker250
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiCond251 Using cfiCommon0
          CFI Function MT_ZdoNodeDescRequest
          CFI Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function MT_ZdoPowerDescRequest
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_170
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+0
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_171
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+0
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function MT_ZdoActiveEpRequest
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_172
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+0
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function MT_ZdoMatchDescRequest
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_173
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+0
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function MT_ZdoComplexDescRequest
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_174
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+0
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function MT_ZdoUserDescRequest
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_175
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+0
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function MT_ZdoUserDescSet
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_176
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+0
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_177
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+0
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_178
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+0
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_179
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+0
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_180
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+0
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_182
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond263) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond263) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond263) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+0
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_181
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+0
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function MT_ZdoBeaconIndCB
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_64
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+0
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function MT_ZdoBeaconIndCB
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_65
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+0
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function MT_ZdoHandleExceptions
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+0
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function MT_ZdoHandleExceptions
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+0
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function MT_ZdoServiceDiscRequest
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+0
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function MT_ZdoMgmtLqiRequest
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_27
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+0
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_28
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+0
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_29
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+0
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function MT_ZdoUserDescSet
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_30
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+0
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_31
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+0
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker275 Using cfiCommon1
          CFI (cfiPicker275) NoFunction
          CFI (cfiPicker275) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiPicker275
//  929 
//  930 #if defined ( ZIGBEE_CHILD_AGING )
//  931 /***************************************************************************************************
//  932  * @fn      MT_ZdoEndDeviceTimeoutRequest
//  933  *
//  934  * @brief   Handle an End Device Timeout request.
//  935  *
//  936  * @param   pBuf  - MT message data
//  937  *
//  938  * @return  void
//  939  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  940 void MT_ZdoEndDeviceTimeoutRequest(uint8 *pBuf)
MT_ZdoEndDeviceTimeoutRequest:
          CFI Block cfiBlock276 Using cfiCommon0
          CFI Function MT_ZdoEndDeviceTimeoutRequest
        CODE
//  941 {
        FUNCALL MT_ZdoEndDeviceTimeoutRequest, ZDP_EndDeviceTimeoutReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoEndDeviceTimeoutRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL   ?Subroutine25 & 0xFFFF
//  942   uint8 cmdId;
//  943   uint8 retValue;
//  944   uint16 parentAddr;
//  945   uint16 reqTimeout;
//  946 
//  947   /* parse header */
//  948   cmdId = pBuf[MT_RPC_POS_CMD1];
//  949   pBuf += MT_RPC_FRAME_HDR_SZ;
//  950 
//  951   /* Parent address */
//  952   parentAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_23:
        LCALL   ?Subroutine66 & 0xFFFF
//  953   pBuf += 2;
//  954 
//  955   /* Requested Timeout */
//  956   reqTimeout = BUILD_UINT16( pBuf[0], pBuf[1] );
//  957   pBuf += 2;
//  958 
//  959   retValue = (uint8)ZDP_EndDeviceTimeoutReq( parentAddr, reqTimeout, 0 );
??CrossCallReturnLabel_109:
        ; Setup parameters for call to function ZDP_EndDeviceTimeoutReq
        MOV     R1,#0x0
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,?V0 + 0
        LCALL   ??ZDP_EndDeviceTimeoutReq?relay
        LCALL   ?Subroutine58 & 0xFFFF
//  960 
//  961   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
??CrossCallReturnLabel_153:
        LCALL   ??MT_BuildAndSendZToolResponse?relay
//  962 }
        MOV     A,#0x1
        LJMP    ??Subroutine122_0 & 0xFFFF
          CFI EndBlock cfiBlock276

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond277 Using cfiCommon0
          CFI Function MT_ZdoEndDevAnnce
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function MT_ZdoEndDeviceTimeoutRequest
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+0
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker279 Using cfiCommon1
          CFI (cfiPicker279) NoFunction
          CFI (cfiPicker279) Picker
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x0
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
        RET
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiPicker279

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond280 Using cfiCommon0
          CFI Function MT_ZdoEndDevAnnce
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function MT_ZdoEndDeviceTimeoutRequest
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+0
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker282 Using cfiCommon1
          CFI (cfiPicker282) NoFunction
          CFI (cfiPicker282) Picker
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_131:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_150:
        RET
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiPicker282

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond283 Using cfiCommon0
          CFI Function MT_ZdoEndDevAnnce
          CFI Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function MT_ZdoEndDeviceTimeoutRequest
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_23
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+0
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function MT_ZdoBindRequest
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_58
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+0
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function MT_ZdoUnbindRequest
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_59
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+0
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function MT_ZdoBindRequest
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_32
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+0
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function MT_ZdoUnbindRequest
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_33
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+0
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_34
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+0
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function MT_ZdoSendData
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_128
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+0
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function MT_ZdoBindRequest
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_2
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+0
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function MT_ZdoUnbindRequest
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_3
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+0
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function MT_ZdoSendData
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+0
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function MT_ZdoBeaconIndCB
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+0
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function MT_ZdoSrcRtgCB
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+0
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker296 Using cfiCommon1
          CFI (cfiPicker296) NoFunction
          CFI (cfiPicker296) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiPicker296
//  963 #endif // ZIGBEE_CHILD_AGING
//  964 
//  965 /***************************************************************************************************
//  966  * @fn      MT_ZdoEndDevBindRequest
//  967  *
//  968  * @brief   Handle a End Device Bind request.
//  969  *
//  970  * @param   pBuf  - MT message data
//  971  *
//  972  * @return  void
//  973  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  974 void MT_ZdoEndDevBindRequest(uint8 *pBuf)
MT_ZdoEndDevBindRequest:
          CFI Block cfiBlock297 Using cfiCommon0
          CFI Function MT_ZdoEndDevBindRequest
        CODE
//  975 {
        FUNCALL MT_ZdoEndDevBindRequest, ZDP_EndDeviceBindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 95, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 95, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoEndDevBindRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 70
        MOV     A,#-0x46
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 86)
//  976   uint8 cmdId;
//  977   uint8 retValue = 0;
        LCALL   ?Subroutine10 & 0xFFFF
//  978   uint8 i, epInt, numInClusters, numOutClusters;
//  979   zAddrType_t destAddr;
//  980   uint16 shortAddr;
//  981   uint16 profileID, inClusters[MTZDO_MAX_ED_BIND_CLUSTERS], outClusters[MTZDO_MAX_ED_BIND_CLUSTERS];
//  982 
//  983   /* parse header */
//  984   cmdId = pBuf[MT_RPC_POS_CMD1];
//  985   pBuf += MT_RPC_FRAME_HDR_SZ;
//  986 
//  987   /* Dev address */
//  988   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_184:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
//  989   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_177:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  990   pBuf += 2;
//  991 
//  992   /* Local coordinator of the binding */
//  993   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
//  994   pBuf += 2;
//  995 
//  996   /* For now, skip past the extended address */
//  997   pBuf += Z_EXTADDR_LEN;
??CrossCallReturnLabel_47:
        ADD     A,#0xa
        LCALL   ?Subroutine50 & 0xFFFF
//  998 
//  999   /* Endpoint */
// 1000   epInt = *pBuf++;
??CrossCallReturnLabel_74:
        MOV     R2,DPL
        MOV     R3,DPH
// 1001 
// 1002   /* Profile ID */
// 1003   profileID = BUILD_UINT16( pBuf[0], pBuf[1] );
        LCALL   ?Subroutine15 & 0xFFFF
// 1004   pBuf += 2;
// 1005 
// 1006   /* NumInClusters */
// 1007   numInClusters = *pBuf++;
??CrossCallReturnLabel_5:
        MOV     ?V0 + 4,A
        INC     DPTR
        INC     R2
        MOV     R3,DPH
// 1008   if ( numInClusters <= MTZDO_MAX_ED_BIND_CLUSTERS )
        CLR     C
        SUBB    A,#0x10
        JNC     ??MT_ZdoEndDevBindRequest_0
// 1009   {
// 1010     for ( i = 0; i < numInClusters; i++ )
        MOV     ?V0 + 2,R0
??MT_ZdoEndDevBindRequest_1:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,?V0 + 4
        JNC     ??MT_ZdoEndDevBindRequest_2
// 1011     {
// 1012       inClusters[i] = BUILD_UINT16(pBuf[0], pBuf[1]);
        LCALL   ?Subroutine21 & 0xFFFF
// 1013       pBuf += 2;
// 1014     }
// 1015   }
??CrossCallReturnLabel_13:
        MOV     A,#0x28
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_113:
        LCALL   ??Subroutine111_0 & 0xFFFF
??CrossCallReturnLabel_159:
        SJMP    ??MT_ZdoEndDevBindRequest_1
// 1016   else
// 1017   {
// 1018     retValue = ZDP_INVALID_REQTYPE;
??MT_ZdoEndDevBindRequest_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        MOVX    @DPTR,A
// 1019   }
// 1020 
// 1021   /* NumOutClusters */
// 1022   numOutClusters = *pBuf++;
??MT_ZdoEndDevBindRequest_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
// 1023   if ( numOutClusters <= MTZDO_MAX_ED_BIND_CLUSTERS )
        CLR     C
        SUBB    A,#0x10
        JNC     ??MT_ZdoEndDevBindRequest_3
// 1024   {
// 1025     for ( i = 0; i < numOutClusters; i++ )
        MOV     ?V0 + 2,#0x0
??MT_ZdoEndDevBindRequest_4:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,?V0 + 5
        JNC     ??MT_ZdoEndDevBindRequest_5
// 1026     {
// 1027       outClusters[i] = BUILD_UINT16(pBuf[0], pBuf[1]);
        LCALL   ?Subroutine21 & 0xFFFF
// 1028       pBuf += 2;
// 1029     }
// 1030   }
??CrossCallReturnLabel_14:
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_114:
        LCALL   ??Subroutine111_0 & 0xFFFF
??CrossCallReturnLabel_160:
        SJMP    ??MT_ZdoEndDevBindRequest_4
// 1031   else
// 1032   {
// 1033     retValue = ZDP_INVALID_REQTYPE;
??MT_ZdoEndDevBindRequest_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        SJMP    ??MT_ZdoEndDevBindRequest_6
// 1034   }
// 1035 
// 1036   if ( retValue == 0 )
??MT_ZdoEndDevBindRequest_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JNZ     ??MT_ZdoEndDevBindRequest_7
// 1037   {
// 1038     retValue = (uint8)ZDP_EndDeviceBindReq( &destAddr, shortAddr, epInt, profileID,
// 1039                                           numInClusters, inClusters, numOutClusters, outClusters, 0);
        ; Setup parameters for call to function ZDP_EndDeviceBindReq
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 87)
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,?V0 + 5
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0x2c
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 92)
        MOV     A,?V0 + 4
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 93)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 95)
        MOV     A,R7
        MOV     R1,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_EndDeviceBindReq?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 86)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
??MT_ZdoEndDevBindRequest_6:
        MOVX    @DPTR,A
// 1040   }
// 1041 
// 1042   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
??MT_ZdoEndDevBindRequest_7:
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1043 }
        MOV     A,#0x46
        LJMP    ??Subroutine120_0 & 0xFFFF
          CFI EndBlock cfiBlock297

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond298 Using cfiCommon0
          CFI Function MT_ZdoEndDevBindRequest
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+0
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker300 Using cfiCommon1
          CFI (cfiPicker300) NoFunction
          CFI (cfiPicker300) Picker
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_143:
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 7
        RET
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiPicker300

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond301 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function MT_ZdoMatchDescRequest
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_158
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+0
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_113
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+0
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_114
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+0
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker305 Using cfiCommon1
          CFI (cfiPicker305) NoFunction
          CFI (cfiPicker305) Picker
        MOV     A,DPL
        ADD     A,R0
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,R1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiPicker305

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond306 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+0
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker308 Using cfiCommon1
          CFI (cfiPicker308) NoFunction
          CFI (cfiPicker308) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_220:
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     A,R2
        RET
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiPicker308

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond309 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_47
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+0
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function MT_ZdoRegisterForZDOMsg
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_0
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+0
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function MT_ZdoRemoveRegisteredCB
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_1
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+0
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker313 Using cfiCommon1
          CFI (cfiPicker313) NoFunction
          CFI (cfiPicker313) Picker
        MOV     DPL,R2
        MOV     DPH,R3
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiPicker313
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiCond314 Using cfiCommon0
          CFI Function MT_ZdoIEEEAddrRequest
          CFI Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_63
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+0
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function MT_ZdoMatchDescRequest
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_46
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+0
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_47
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+0
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function MT_ZdoRegisterForZDOMsg
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_0
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+0
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function MT_ZdoRemoveRegisteredCB
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_1
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+0
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker320 Using cfiCommon1
          CFI (cfiPicker320) NoFunction
          CFI (cfiPicker320) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R4
        ADD     A,#0x0
        RET
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiPicker320

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond321 Using cfiCommon0
          CFI Function MT_ZdoEndDevBindRequest
          CFI Conditional ??CrossCallReturnLabel_13
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+0
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker323 Using cfiCommon1
          CFI (cfiPicker323) NoFunction
          CFI (cfiPicker323) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,?V0 + 6
        ADD     A,#0x0
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 7,A
        MOV     A,?V0 + 2
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        RET
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiPicker323

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond324 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond325) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond325) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond325) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+0
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker326 Using cfiCommon1
          CFI (cfiPicker326) NoFunction
          CFI (cfiPicker326) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,?V0 + 0
        ADD     A,#0x0
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
        MOV     A,R2
        ADD     A,#0x2
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_207:
        RET
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiPicker326

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond327 Using cfiCommon0
          CFI Function MT_ZdoUserDescSet
          CFI Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_204
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond328) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond328) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond328) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+0
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_205
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+0
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function MT_ZdoMatchDescRequest
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_4
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+0
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_5
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+0
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_74
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+0
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_75
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+0
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker334 Using cfiCommon1
          CFI (cfiPicker334) NoFunction
          CFI (cfiPicker334) Picker
        MOV     R2,A
        MOV     A,R3
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_209:
        RET
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiPicker334

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond335 Using cfiCommon0
          CFI Function MT_ZdoUserDescSet
          CFI Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_204
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+0
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_205
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+0
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function MT_ZdoMatchDescRequest
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_4
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+0
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_5
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+0
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_74
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+0
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_75
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+0
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function MT_ZdoNWKAddressRequest
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_50
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+0
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function MT_ZdoIEEEAddrRequest
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_51
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+0
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_76
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+0
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_77
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+0
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker346 Using cfiCommon1
          CFI (cfiPicker346) NoFunction
          CFI (cfiPicker346) Picker
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiPicker346
// 1044 
// 1045 /***************************************************************************************************
// 1046  * @fn      MT_ZdoBindRequest
// 1047  *
// 1048  * @brief   Handle a Bind request.
// 1049  *
// 1050  * @param   pBuf  - MT message data
// 1051  *
// 1052  * @return  void
// 1053  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1054 void MT_ZdoBindRequest(uint8 *pBuf)
MT_ZdoBindRequest:
          CFI Block cfiBlock347 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
        CODE
// 1055 {
        FUNCALL MT_ZdoBindRequest, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoBindRequest, ZDP_BindUnbindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoBindRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 19
        MOV     A,#-0x13
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        LCALL   ?Subroutine34 & 0xFFFF
// 1056   uint8 cmdId;
// 1057   uint8 retValue;
// 1058   zAddrType_t destAddr, devAddr;
// 1059   uint8 *pSrcAddr, *ptr;
// 1060   uint8 srcEPInt, dstEPInt;
// 1061   uint16 clusterID;
// 1062 
// 1063   /* parse header */
// 1064   cmdId = pBuf[MT_RPC_POS_CMD1];
// 1065   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1066 
// 1067   /* Dev address */
// 1068   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_40:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
// 1069   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_58:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine14 & 0xFFFF
// 1070   pBuf += 2;
// 1071 
// 1072   /* SrcAddress */
// 1073   pSrcAddr = pBuf;
// 1074   pBuf += Z_EXTADDR_LEN;
// 1075 
// 1076   /* SrcEPInt */
// 1077   srcEPInt = *pBuf++;
// 1078 
// 1079   /* ClusterID */
// 1080   clusterID = BUILD_UINT16( pBuf[0], pBuf[1]);
// 1081   pBuf += 2;
// 1082 
// 1083   /* Destination Address mode */
// 1084   devAddr.addrMode = *pBuf++;
??CrossCallReturnLabel_2:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
// 1085 
// 1086   /* Destination Address */
// 1087   if ( devAddr.addrMode == Addr64Bit )
??CrossCallReturnLabel_99:
        JNZ     ??MT_ZdoBindRequest_0
// 1088   {
// 1089     ptr = pBuf;
// 1090     osal_cpyExtAddr( devAddr.addr.extAddr, ptr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCpy?relay
        SJMP    ??CrossCallReturnLabel_88
// 1091   }
// 1092   else
// 1093   {
// 1094     devAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??MT_ZdoBindRequest_0:
        LCALL   ?Subroutine30 & 0xFFFF
// 1095   }
??CrossCallReturnLabel_32:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1096   /* The short address occupies LSB two bytes */
// 1097   pBuf += Z_EXTADDR_LEN;
// 1098 
// 1099   /* DstEPInt */
// 1100   dstEPInt = *pBuf;
// 1101 
// 1102   retValue = (uint8)ZDP_BindReq( &destAddr, pSrcAddr, srcEPInt, clusterID, &devAddr, dstEPInt, 0);
??CrossCallReturnLabel_88:
        ; Setup parameters for call to function ZDP_BindUnbindReq
        MOV     ?V0 + 4,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     R1,?V0 + 1
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x21
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock347
// 1103 
// 1104   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1105 }
// 1106 
// 1107 /***************************************************************************************************
// 1108  * @fn      MT_ZdoUnbindRequest
// 1109  *
// 1110  * @brief   Handle a Unbind request.
// 1111  *
// 1112  * @param   pBuf  - MT message data
// 1113  *
// 1114  * @return  void
// 1115  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1116 void MT_ZdoUnbindRequest(uint8 *pBuf)
MT_ZdoUnbindRequest:
          CFI Block cfiBlock348 Using cfiCommon0
          CFI Function MT_ZdoUnbindRequest
        CODE
// 1117 {
        FUNCALL MT_ZdoUnbindRequest, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoUnbindRequest, ZDP_BindUnbindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoUnbindRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 19
        MOV     A,#-0x13
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        LCALL   ?Subroutine34 & 0xFFFF
// 1118   uint8 cmdId;
// 1119   uint8 retValue;
// 1120   zAddrType_t destAddr, devAddr;
// 1121   uint8 *pSrcAddr, *ptr;
// 1122   uint8 srcEPInt, dstEPInt;
// 1123   uint16 clusterID;
// 1124 
// 1125   /* parse header */
// 1126   cmdId = pBuf[MT_RPC_POS_CMD1];
// 1127   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1128 
// 1129   /* dev address */
// 1130   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_41:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
// 1131   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_59:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine14 & 0xFFFF
// 1132   pBuf += 2;
// 1133 
// 1134   /* SrcAddress */
// 1135   pSrcAddr = pBuf;
// 1136   pBuf += Z_EXTADDR_LEN;
// 1137 
// 1138   /* SrcEPInt */
// 1139   srcEPInt = *pBuf++;
// 1140 
// 1141   /* ClusterID */
// 1142   clusterID = BUILD_UINT16( pBuf[0], pBuf[1]);
// 1143   pBuf += 2;
// 1144 
// 1145   /* Destination Address mode */
// 1146   devAddr.addrMode = *pBuf++;
??CrossCallReturnLabel_3:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
// 1147 
// 1148   /* Destination Address */
// 1149   if ( devAddr.addrMode == Addr64Bit )
??CrossCallReturnLabel_100:
        JNZ     ??MT_ZdoUnbindRequest_0
// 1150   {
// 1151     ptr = pBuf;
// 1152     osal_cpyExtAddr( devAddr.addr.extAddr, ptr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCpy?relay
        SJMP    ??CrossCallReturnLabel_89
// 1153   }
// 1154   else
// 1155   {
// 1156     devAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??MT_ZdoUnbindRequest_0:
        LCALL   ?Subroutine30 & 0xFFFF
// 1157   }
??CrossCallReturnLabel_33:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1158   /* The short address occupies LSB two bytes */
// 1159   pBuf += Z_EXTADDR_LEN;
// 1160 
// 1161   /* dstEPInt */
// 1162   dstEPInt = *pBuf;
// 1163 
// 1164   retValue = (uint8)ZDP_UnbindReq( &destAddr, pSrcAddr, srcEPInt, clusterID, &devAddr, dstEPInt, 0);
??CrossCallReturnLabel_89:
        ; Setup parameters for call to function ZDP_BindUnbindReq
        MOV     ?V0 + 4,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     R1,?V0 + 1
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x22
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock348
// 1165 
// 1166   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1167 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond349 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function MT_ZdoUnbindRequest
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+0
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker351 Using cfiCommon1
          CFI (cfiPicker351) NoFunction
          CFI (cfiPicker351) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     R6
        MOV     R7,DPH
        MOV     A,#0x3
        XRL     A,R0
        RET
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiPicker351

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond352 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function MT_ZdoUnbindRequest
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+0
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker354 Using cfiCommon1
          CFI (cfiPicker354) NoFunction
          CFI (cfiPicker354) Picker
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_130:
        MOV     A,#0xa
        RET
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiPicker354

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond355 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function MT_ZdoUnbindRequest
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+0
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker357 Using cfiCommon1
          CFI (cfiPicker357) NoFunction
          CFI (cfiPicker357) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_124:
        MOV     A,#0x12
        RET
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiPicker357

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond358 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_32
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function MT_ZdoUnbindRequest
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond359) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+0
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+0
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker361 Using cfiCommon1
          CFI (cfiPicker361) NoFunction
          CFI (cfiPicker361) Picker
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_129:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiPicker361

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond362 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function MT_ZdoUnbindRequest
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_59
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+0
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function MT_ZdoBindRequest
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_32
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+0
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function MT_ZdoUnbindRequest
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_33
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+0
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_34
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+0
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function MT_ZdoSendData
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+0
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker368 Using cfiCommon1
          CFI (cfiPicker368) NoFunction
          CFI (cfiPicker368) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_151:
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        RET
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiPicker368

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond369 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function MT_ZdoUnbindRequest
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+0
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker371 Using cfiCommon1
          CFI (cfiPicker371) NoFunction
          CFI (cfiPicker371) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V0 + 2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     A,?V0 + 2
        ADD     A,#0x8
        MOV     R6,A
        MOV     A,?V0 + 3
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_135:
        MOV     ?V0 + 1,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_149:
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x0
        MOV     ?V0 + 6,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 7,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        MOV     A,R7
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_136:
        MOV     R0,A
        MOV     A,#0x9
        RET
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiPicker371

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond372 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function MT_ZdoUnbindRequest
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_3
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+0
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function MT_ZdoBindRequest
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_2
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+0
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function MT_ZdoUnbindRequest
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_3
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+0
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker376 Using cfiCommon1
          CFI (cfiPicker376) NoFunction
          CFI (cfiPicker376) Picker
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiPicker376
// 1168 
// 1169 #if defined (MT_SYS_KEY_MANAGEMENT)
// 1170 /***************************************************************************************************
// 1171  * @fn      MT_ZdoSetLinkKey
// 1172  *
// 1173  * @brief   Set an application or trust center link key.
// 1174  *
// 1175  * @param   pBuf  - MT message data
// 1176  *
// 1177  * @return  void
// 1178  ***************************************************************************************************/
// 1179 void MT_ZdoSetLinkKey(uint8 *pBuf)
// 1180 {
// 1181   uint8 cmdId;
// 1182   uint8 retValue;
// 1183   uint8 *pExtAddr;
// 1184   uint8 *pKey;
// 1185   uint16 shortAddr;
// 1186 
// 1187   /* parse header */
// 1188   cmdId = pBuf[MT_RPC_POS_CMD1];
// 1189   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1190 
// 1191   /* ShortAddr */
// 1192   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
// 1193   pBuf += 2;
// 1194 
// 1195   /* Extended Addr */
// 1196   pExtAddr = pBuf;
// 1197   pBuf += Z_EXTADDR_LEN;
// 1198 
// 1199   /* Key data */
// 1200   pKey = pBuf;
// 1201 
// 1202   retValue = (uint8)ZDSecMgrAddLinkKey( shortAddr, pExtAddr, pKey);
// 1203 
// 1204   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1205 }
// 1206 
// 1207 /***************************************************************************************************
// 1208  * @fn      MT_ZdoRemoveLinkKey
// 1209  *
// 1210  * @brief   Remove an application or trust center link key.
// 1211  *
// 1212  * @param   pBuf  - MT message data
// 1213  *
// 1214  * @return  void
// 1215  ***************************************************************************************************/
// 1216 void MT_ZdoRemoveLinkKey(uint8 *pBuf)
// 1217 {
// 1218   uint8 cmdId;
// 1219   uint8 retValue;
// 1220   uint8 *pExtAddr;
// 1221 
// 1222   /* parse header */
// 1223   cmdId = pBuf[MT_RPC_POS_CMD1];
// 1224   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1225 
// 1226   /* ShortAddr */
// 1227   pExtAddr = pBuf;
// 1228 
// 1229   retValue = ZDSecMgrDeviceRemoveByExtAddr( pExtAddr );
// 1230 
// 1231   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1232 }
// 1233 
// 1234 /***************************************************************************************************
// 1235  * @fn      MT_ZdoGetLinkKey
// 1236  *
// 1237  * @brief   Get the application link key.
// 1238  *
// 1239  * @param   pBuf  - MT message data
// 1240  *
// 1241  * @return  void
// 1242  ***************************************************************************************************/
// 1243 void MT_ZdoGetLinkKey(uint8 *pBuf)
// 1244 {
// 1245   uint8 cmdId;
// 1246   uint8 retValue;
// 1247   uint8 *pExtAddr;
// 1248   uint8 *retBuf = NULL;
// 1249   uint8 len;
// 1250   APSME_LinkKeyData_t *pApsLinkKey = NULL;
// 1251   uint16 apsLinkKeyNvId;
// 1252 
// 1253   // parse header
// 1254   cmdId = pBuf[MT_RPC_POS_CMD1];
// 1255   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1256 
// 1257   // Extended Address
// 1258   pExtAddr = pBuf;
// 1259 
// 1260   // Fetch the key NV ID
// 1261   retValue = APSME_LinkKeyNVIdGet( pExtAddr, &apsLinkKeyNvId );
// 1262 
// 1263   if (retValue == ZSuccess)
// 1264   {
// 1265     if ((pApsLinkKey = (APSME_LinkKeyData_t *)osal_mem_alloc(sizeof(APSME_LinkKeyData_t))) != NULL)
// 1266     {
// 1267       // retrieve key from NV
// 1268       if (osal_nv_read( apsLinkKeyNvId, 0,
// 1269                        sizeof(APSME_LinkKeyData_t), pApsLinkKey) != SUCCESS)
// 1270       {
// 1271         retValue = ZNwkUnknownDevice;
// 1272       }
// 1273     }
// 1274     else
// 1275     {
// 1276       retValue = ZNwkUnknownDevice;
// 1277     }
// 1278   }
// 1279 
// 1280   // Construct the response message
// 1281   len = MT_ZDO_STATUS_LEN + Z_EXTADDR_LEN + SEC_KEY_LEN; // status + extAddr + key
// 1282   if ((retBuf = (uint8 *)osal_mem_alloc(len)) != NULL)
// 1283   {
// 1284     if (retValue == ZSuccess)
// 1285     {
// 1286       // Extended Address
// 1287       osal_memcpy( &(retBuf[1]), pExtAddr, Z_EXTADDR_LEN );
// 1288 
// 1289       // Key data
// 1290       osal_memcpy( &(retBuf[1 + Z_EXTADDR_LEN]), pApsLinkKey->key, SEC_KEY_LEN );
// 1291     }
// 1292     else
// 1293     {
// 1294       // Failed case - set the rest fields to all FF
// 1295       osal_memset( &(retBuf[1]), 0xFF, Z_EXTADDR_LEN + SEC_KEY_LEN );
// 1296     }
// 1297 
// 1298     retBuf[0] = retValue;  // Status
// 1299 
// 1300     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, len, retBuf);
// 1301 
// 1302     // clear retBuf because it contains key data and free allocated memory
// 1303     osal_memset(retBuf, 0x00, len);
// 1304 
// 1305     osal_mem_free(retBuf);
// 1306   }
// 1307 
// 1308   // clear copy of key in RAM
// 1309   if (pApsLinkKey != NULL)
// 1310   {
// 1311     osal_memset(pApsLinkKey, 0x00, sizeof(APSME_LinkKeyData_t));
// 1312 
// 1313     osal_mem_free(pApsLinkKey);
// 1314   }
// 1315 
// 1316   return;
// 1317 }
// 1318 #endif // MT_SYS_KEY_MANAGEMENT
// 1319 
// 1320 #if defined (MT_ZDO_MGMT)
// 1321 /***************************************************************************************************
// 1322  * @fn      MT_ZdoMgmtNwkDiscRequest
// 1323  *
// 1324  * @brief   Handle a Mgmt Nwk Discovery request.
// 1325  *
// 1326  * @param   pBuf  - MT message data
// 1327  *
// 1328  * @return  void
// 1329  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1330 void MT_ZdoMgmtNwkDiscRequest(uint8 *pBuf)
MT_ZdoMgmtNwkDiscRequest:
          CFI Block cfiBlock377 Using cfiCommon0
          CFI Function MT_ZdoMgmtNwkDiscRequest
        CODE
// 1331 {
        FUNCALL MT_ZdoMgmtNwkDiscRequest, ZDP_MgmtNwkDiscReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtNwkDiscRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 1332   uint8 cmdId;
// 1333   uint8 retValue;
// 1334   zAddrType_t destAddr;
// 1335   uint32 scanChannels;
// 1336   uint8 scanDuration, startIndex;
// 1337 
// 1338   /* parse header */
// 1339   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ??Subroutine115_0 & 0xFFFF
// 1340   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1341 
// 1342   /* Dev address */
// 1343   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_191:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
// 1344   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_178:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1345   pBuf += 2;
??CrossCallReturnLabel_90:
        MOV     A,R2
        LCALL   ?Subroutine53 & 0xFFFF
// 1346 
// 1347   /* Scan Channels */
// 1348   scanChannels = BUILD_UINT32( pBuf[0], pBuf[1], pBuf[2], pBuf[3] );
??CrossCallReturnLabel_167:
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_54:
        INC     DPTR
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_56:
        MOV     A,#0x8
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_ADD
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        CLR     A
        MOV     ?V0 + 5,A
        MOV     A,#0x10
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_ADD
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        CLR     A
        MOV     ?V0 + 6,A
        MOV     A,#0x18
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_ADD
// 1349   pBuf += 4;
        MOV     A,R2
        ADD     A,#0x4
        LCALL   ?Subroutine51 & 0xFFFF
// 1350 
// 1351   /* Scan Duration */
// 1352   scanDuration = *pBuf++;
??CrossCallReturnLabel_76:
        MOV     R2,DPL
        MOV     R3,DPH
// 1353 
// 1354   /* Start Index */
// 1355   startIndex = *pBuf;
// 1356 
// 1357   retValue = (uint8)ZDP_MgmtNwkDiscReq( &destAddr, scanChannels, scanDuration, startIndex, 0);
        ; Setup parameters for call to function ZDP_MgmtNwkDiscReq
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_FOUR
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R5,#0x0
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_MgmtNwkDiscReq?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
          CFI EndBlock cfiBlock377
// 1358 
// 1359   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
// 1360 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock378 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
        MOV     A,#0xa
        SJMP    ??Subroutine120_0
          CFI EndBlock cfiBlock378

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock379 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 43)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R3,#0x0
        LCALL   ??ZDP_BindUnbindReq?relay
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_104:
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
        MOV     A,#0x13
          CFI EndBlock cfiBlock379
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiBlock380 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 86)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock380
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiBlock381 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock381

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond382 Using cfiCommon0
          CFI Function MT_ZdoNWKAddressRequest
          CFI Conditional ??CrossCallReturnLabel_103
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function MT_ZdoIEEEAddrRequest
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+0
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function MT_ZdoBindRequest
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+0
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function MT_ZdoUnbindRequest
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+0
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker386 Using cfiCommon1
          CFI (cfiPicker386) NoFunction
          CFI (cfiPicker386) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     R2,?V0 + 0
        RET
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiPicker386
// 1361 
// 1362 /***************************************************************************************************
// 1363  * @fn      MT_ZdoMgmtLqiRequest
// 1364  *
// 1365  * @brief   Handle a Mgmt Lqi request.
// 1366  *
// 1367  * @param   pBuf  - MT message data
// 1368  *
// 1369  * @return  void
// 1370  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1371 void MT_ZdoMgmtLqiRequest(uint8 *pBuf)
MT_ZdoMgmtLqiRequest:
          CFI Block cfiBlock387 Using cfiCommon0
          CFI Function MT_ZdoMgmtLqiRequest
        CODE
// 1372 {
        FUNCALL MT_ZdoMgmtLqiRequest, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtLqiRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1373   uint8 cmdId;
// 1374   uint8 retValue;
// 1375   zAddrType_t destAddr;
// 1376   uint8 startIndex;
// 1377 
// 1378   /* parse header */
// 1379   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine22 & 0xFFFF
// 1380   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1381 
// 1382   /* Dev address */
// 1383   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_15:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine28 & 0xFFFF
// 1384   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_27:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
// 1385   pBuf += 2;
// 1386 
// 1387   /* Start Index */
// 1388   startIndex = *pBuf;
// 1389 
// 1390   retValue = (uint8)ZDP_MgmtLqiReq( &destAddr, startIndex, 0);
??CrossCallReturnLabel_6:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x31
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock387
// 1391 
// 1392   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1393 }
// 1394 
// 1395 /***************************************************************************************************
// 1396  * @fn      MT_ZdoMgmtRtgRequest
// 1397  *
// 1398  * @brief   Handle a Mgmt Rtg request.
// 1399  *
// 1400  * @param   pBuf  - MT message data
// 1401  *
// 1402  * @return  void
// 1403  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1404 void MT_ZdoMgmtRtgRequest(uint8 *pBuf)
MT_ZdoMgmtRtgRequest:
          CFI Block cfiBlock388 Using cfiCommon0
          CFI Function MT_ZdoMgmtRtgRequest
        CODE
// 1405 {
        FUNCALL MT_ZdoMgmtRtgRequest, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtRtgRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1406   uint8 cmdId;
// 1407   uint8 retValue;
// 1408   zAddrType_t destAddr;
// 1409   uint8 startIndex;
// 1410 
// 1411   /* parse header */
// 1412   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine22 & 0xFFFF
// 1413   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1414 
// 1415   /* Dev Address */
// 1416   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_16:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine28 & 0xFFFF
// 1417   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1]);
??CrossCallReturnLabel_28:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
// 1418   pBuf += 2;
// 1419 
// 1420   /* Start Index */
// 1421   startIndex = *pBuf;
// 1422 
// 1423   retValue = (byte)ZDP_MgmtRtgReq( &destAddr, startIndex, 0);
??CrossCallReturnLabel_7:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x32
        SJMP    ?Subroutine3
          CFI EndBlock cfiBlock388
// 1424 
// 1425   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1426 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond389 Using cfiCommon0
          CFI Function MT_ZdoMgmtLqiRequest
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+0
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+0
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker392 Using cfiCommon1
          CFI (cfiPicker392) NoFunction
          CFI (cfiPicker392) Picker
        MOV     A,#0x2
        MOVX    @DPTR,A
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_215:
        MOV     R1,A
        MOV     A,R4
        MOV     R0,A
        MOV     A,#0x2
        RET
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiPicker392

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond393 Using cfiCommon0
          CFI Function MT_ZdoMgmtLqiRequest
          CFI Conditional ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+0
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+0
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker396 Using cfiCommon1
          CFI (cfiPicker396) NoFunction
          CFI (cfiPicker396) Picker
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_194:
        MOV     A,#0xa
        RET
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiPicker396

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond397 Using cfiCommon0
          CFI Function MT_ZdoMgmtLqiRequest
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+0
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+0
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker400 Using cfiCommon1
          CFI (cfiPicker400) NoFunction
          CFI (cfiPicker400) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_137:
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_121:
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiPicker400
// 1427 
// 1428 /***************************************************************************************************
// 1429  * @fn      MT_ZdoMgmtBindRequest
// 1430  *
// 1431  * @brief   Handle a Mgmt Bind request.
// 1432  *
// 1433  * @param   pBuf  - MT message data
// 1434  *
// 1435  * @return  void
// 1436  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1437 void MT_ZdoMgmtBindRequest(uint8 *pBuf)
MT_ZdoMgmtBindRequest:
          CFI Block cfiBlock401 Using cfiCommon0
          CFI Function MT_ZdoMgmtBindRequest
        CODE
// 1438 {
        FUNCALL MT_ZdoMgmtBindRequest, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtBindRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1439   uint8 cmdId;
// 1440   uint8 retValue;
// 1441   zAddrType_t destAddr;
// 1442   uint8 startIndex;
// 1443 
// 1444   /* parse header */
// 1445   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine22 & 0xFFFF
// 1446   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1447 
// 1448   /* Dev Address */
// 1449   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_17:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine28 & 0xFFFF
// 1450   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_29:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
// 1451   pBuf += 2;
// 1452 
// 1453   /* Start Index */
// 1454   startIndex = *pBuf;
// 1455 
// 1456   retValue = (uint8)ZDP_MgmtBindReq( &destAddr, startIndex, 0);
??CrossCallReturnLabel_8:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x33
          CFI EndBlock cfiBlock401
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
// 1457 
// 1458   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1459 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock402 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R1,#0x1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_154:
        LCALL   ??MT_BuildAndSendZToolResponse?relay
        MOV     A,#0xb
          CFI EndBlock cfiBlock402
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiBlock403 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock403
// 1460 
// 1461 /***************************************************************************************************
// 1462  * @fn      MT_ZdoMgmtLeaveRequest
// 1463  *
// 1464  * @brief   Handle a Mgmt Leave request.
// 1465  *
// 1466  * @param   pBuf  - MT message data
// 1467  *
// 1468  * @return  void
// 1469  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1470 void MT_ZdoMgmtLeaveRequest(uint8 *pBuf)
MT_ZdoMgmtLeaveRequest:
          CFI Block cfiBlock404 Using cfiCommon0
          CFI Function MT_ZdoMgmtLeaveRequest
        CODE
// 1471 {
        FUNCALL MT_ZdoMgmtLeaveRequest, ZDP_MgmtLeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtLeaveRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1472   uint8 cmdId;
// 1473   uint8 retValue;
// 1474   zAddrType_t destAddr;
// 1475   uint8 *pIEEEAddr;
// 1476   uint8 removeChildren;
// 1477   uint8 rejoin;
// 1478 
// 1479   /* parse header */
// 1480   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ??Subroutine115_0 & 0xFFFF
// 1481   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1482 
// 1483   /* Destination Address */
// 1484   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_192:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
// 1485   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_179:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1486   pBuf += 2;
??CrossCallReturnLabel_91:
        LCALL   ?Subroutine67 & 0xFFFF
// 1487 
// 1488   /* IEEE address */
// 1489   pIEEEAddr = pBuf;
??CrossCallReturnLabel_110:
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
// 1490   pBuf += Z_EXTADDR_LEN;
        MOV     A,R2
        ADD     A,#0x8
        LCALL   ??Subroutine117_0 & 0xFFFF
// 1491 
// 1492   /* Rejoin if bit0 is set */
// 1493   rejoin = ( *pBuf & 0x01 ) ? TRUE : FALSE;
// 1494 
// 1495   /* Remove Children if bit1 is set */
// 1496   removeChildren = ( *pBuf & 0x02 ) ? TRUE : FALSE;
// 1497 
// 1498   retValue = (byte)ZDP_MgmtLeaveReq( &destAddr, pIEEEAddr, removeChildren, rejoin, 0);
??CrossCallReturnLabel_205:
        MOV     C,0xE0 /* A   */.1
        JNC     ??MT_ZdoMgmtLeaveRequest_0
        SETB    B.0
        SJMP    ??MT_ZdoMgmtLeaveRequest_1
??MT_ZdoMgmtLeaveRequest_0:
        CLR     B.0
??MT_ZdoMgmtLeaveRequest_1:
        ; Setup parameters for call to function ZDP_MgmtLeaveReq
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_MgmtLeaveReq?relay
        MOV     A,#0x2
        LJMP    ??Subroutine104_0 & 0xFFFF
          CFI EndBlock cfiBlock404
// 1499 
// 1500   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1501 }
// 1502 
// 1503 /***************************************************************************************************
// 1504  * @fn      MT_ZdoMgmtDirectJoinRequest
// 1505  *
// 1506  * @brief   Handle a Mgmt Direct Join request.
// 1507  *
// 1508  * @param   pBuf  - MT message data
// 1509  *
// 1510  * @return  void
// 1511  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1512 void MT_ZdoMgmtDirectJoinRequest(uint8 *pBuf)
MT_ZdoMgmtDirectJoinRequest:
          CFI Block cfiBlock405 Using cfiCommon0
          CFI Function MT_ZdoMgmtDirectJoinRequest
        CODE
// 1513 {
        FUNCALL MT_ZdoMgmtDirectJoinRequest, ZDP_MgmtDirectJoinReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtDirectJoinRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL   ?Subroutine78 & 0xFFFF
// 1514   uint8 cmdId;
// 1515   uint8 retValue;
// 1516   zAddrType_t destAddr;
// 1517   uint8 *deviceAddr;
// 1518   uint8 capInfo;
// 1519 
// 1520   /* parse header */
// 1521   cmdId = pBuf[MT_RPC_POS_CMD1];
// 1522   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1523 
// 1524   /* Destination Address */
// 1525   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_132:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
// 1526   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_34:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1527   pBuf += 2;
??CrossCallReturnLabel_92:
        MOV     A,R4
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
// 1528 
// 1529   /* Device Address */
// 1530   deviceAddr = pBuf;
// 1531   pBuf += Z_EXTADDR_LEN;
// 1532 
// 1533   /* Capability information */
// 1534   capInfo = *pBuf;
// 1535 
// 1536   retValue = (uint8)ZDP_MgmtDirectJoinReq( &destAddr, deviceAddr, capInfo, 0);
        ; Setup parameters for call to function ZDP_MgmtDirectJoinReq
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_MgmtDirectJoinReq?relay
        LJMP    ??Subroutine103_0 & 0xFFFF
          CFI EndBlock cfiBlock405
// 1537 
// 1538   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1539 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond406 Using cfiCommon0
          CFI Function MT_ZdoEndDevAnnce
          CFI Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function MT_ZdoEndDeviceTimeoutRequest
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_23
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+0
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+0
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker409 Using cfiCommon1
          CFI (cfiPicker409) NoFunction
          CFI (cfiPicker409) Picker
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,R4
        ADD     A,#0x3
        MOV     R4,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
        RET
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiPicker409

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond410 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function MT_ZdoUnbindRequest
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+0
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+0
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+0
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function MT_ZdoMgmtDirectJoinRequest
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+0
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+0
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+0
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+0
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function MT_ZdoSendData
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_96
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+0
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function MT_ZdoSendData
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+0
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+0
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker421 Using cfiCommon1
          CFI (cfiPicker421) NoFunction
          CFI (cfiPicker421) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiPicker421
// 1540 
// 1541 /***************************************************************************************************
// 1542  * @fn      MT_ZdoMgmtPermitJoinRequest
// 1543  *
// 1544  * @brief   Handle a Mgmt Permit Join request.
// 1545  *
// 1546  * @param   pBuf  - MT message data
// 1547  *
// 1548  * @return  void
// 1549  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1550 void MT_ZdoMgmtPermitJoinRequest(uint8 *pBuf)
MT_ZdoMgmtPermitJoinRequest:
          CFI Block cfiBlock422 Using cfiCommon0
          CFI Function MT_ZdoMgmtPermitJoinRequest
        CODE
// 1551 {
        FUNCALL MT_ZdoMgmtPermitJoinRequest, ZDP_MgmtPermitJoinReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtPermitJoinRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1552   uint8 cmdId;
// 1553   uint8 retValue;
// 1554   zAddrType_t destAddr;
// 1555   uint8 duration, tcSignificance;
// 1556 
// 1557   /* parse header */
// 1558   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine26 & 0xFFFF
// 1559   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1560 
// 1561   /* Destination Address */
// 1562   destAddr.addrMode = *pBuf++;
??CrossCallReturnLabel_25:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine60 & 0xFFFF
// 1563   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_86:
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_181:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1564   pBuf += 2;
??CrossCallReturnLabel_93:
        MOV     A,R2
        ADD     A,#0x2
        LCALL   ?Subroutine51 & 0xFFFF
// 1565 
// 1566   /* Duration */
// 1567   duration = *pBuf++;
// 1568 
// 1569   /* Trust center significance */
// 1570   tcSignificance = *pBuf;
// 1571 
// 1572   retValue = (byte)ZDP_MgmtPermitJoinReq( &destAddr, duration, tcSignificance, 0);
??CrossCallReturnLabel_77:
        ; Setup parameters for call to function ZDP_MgmtPermitJoinReq
        MOV     R5,#0x0
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_MgmtPermitJoinReq?relay
        LJMP    ??Subroutine105_0 & 0xFFFF
          CFI EndBlock cfiBlock422
// 1573 
// 1574   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
// 1575 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond423 Using cfiCommon0
          CFI Function MT_ZdoUserDescSet
          CFI Conditional ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+0
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+0
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker426 Using cfiCommon1
          CFI (cfiPicker426) NoFunction
          CFI (cfiPicker426) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiPicker426

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond427 Using cfiCommon0
          CFI Function MT_ZdoMgmtNwkDiscRequest
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+0
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        MOV     R2,A
        MOV     A,R3
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_134:
        RET
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function MT_ZdoNWKAddressRequest
          CFI Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function MT_ZdoIEEEAddrRequest
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_51
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+0
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_76
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+0
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_77
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+0
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker434 Using cfiCommon1
          CFI (cfiPicker434) NoFunction
          CFI (cfiPicker434) Picker
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_210:
        MOV     R1,A
        INC     DPTR
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiPicker434

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond435 Using cfiCommon0
          CFI Function MT_ZdoServiceDiscRequest
          CFI Conditional ??CrossCallReturnLabel_24
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+0
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+0
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker438 Using cfiCommon1
          CFI (cfiPicker438) NoFunction
          CFI (cfiPicker438) Picker
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_195:
        RET
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiPicker438

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond439 Using cfiCommon0
          CFI Function MT_ZdoMatchDescRequest
          CFI Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_184
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+0
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function MT_ZdoNodeDescRequest
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_185
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+0
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function MT_ZdoPowerDescRequest
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_186
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+0
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_187
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+0
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function MT_ZdoActiveEpRequest
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_188
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+0
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function MT_ZdoComplexDescRequest
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_189
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+0
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function MT_ZdoUserDescRequest
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_190
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+0
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_191
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+0
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_192
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+0
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function MT_ZdoMgmtLqiRequest
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_15
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+0
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_16
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+0
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_17
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+0
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function MT_ZdoServiceDiscRequest
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_24
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+0
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_25
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+0
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_26
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+0
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function MT_ZdoRegisterForZDOMsg
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_0
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+0
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function MT_ZdoRemoveRegisteredCB
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_1
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+0
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker457 Using cfiCommon1
          CFI (cfiPicker457) NoFunction
          CFI (cfiPicker457) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_199:
        RET
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiPicker457
// 1576 
// 1577 /***************************************************************************************************
// 1578  * @fn      MT_ZdoMgmtNwkUpdateRequest
// 1579  *
// 1580  * @brief   Handle a Mgmt Nwk Update request.
// 1581  *
// 1582  * @param   pBuf  - MT message data
// 1583  *
// 1584  * @return  void
// 1585  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1586 void MT_ZdoMgmtNwkUpdateRequest(uint8 *pBuf)
MT_ZdoMgmtNwkUpdateRequest:
          CFI Block cfiBlock458 Using cfiCommon0
          CFI Function MT_ZdoMgmtNwkUpdateRequest
        CODE
// 1587 {
        FUNCALL MT_ZdoMgmtNwkUpdateRequest, ZDP_MgmtNwkUpdateReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtNwkUpdateRequest, ZDP_MgmtNwkUpdateReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoMgmtNwkUpdateRequest, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 1588   uint8 cmdId;
// 1589   uint8 retValue;
// 1590   zAddrType_t destAddr;
// 1591   uint32 channelMask;
// 1592   uint8 scanDuration, scanCount;
// 1593   uint16 nwkManagerAddr;
// 1594 
// 1595     /* parse header */
// 1596   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine26 & 0xFFFF
// 1597   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1598 
// 1599   /* Destination address */
// 1600   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_26:
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_182:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1601   pBuf += 2;
??CrossCallReturnLabel_94:
        LCALL   ?Subroutine52 & 0xFFFF
// 1602 
// 1603   /* Destination address mode */
// 1604   destAddr.addrMode = *pBuf++;
??CrossCallReturnLabel_204:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine60 & 0xFFFF
// 1605 
// 1606   channelMask = BUILD_UINT32( pBuf[0], pBuf[1], pBuf[2], pBuf[3]);
??CrossCallReturnLabel_87:
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_57:
        INC     DPTR
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_55:
        MOV     A,#0x8
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_ADD
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        CLR     A
        MOV     ?V0 + 1,A
        MOV     A,#0x10
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_ADD
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        CLR     A
        MOV     ?V0 + 2,A
        MOV     A,#0x18
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_ADD
// 1607   pBuf += 4;
        MOV     A,R2
        ADD     A,#0x4
        LCALL   ?Subroutine50 & 0xFFFF
// 1608 
// 1609   /* Scan duration */
// 1610   scanDuration = *pBuf++;
// 1611 
// 1612   /* Scan count */
// 1613   scanCount = *pBuf++;
??CrossCallReturnLabel_75:
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
// 1614 
// 1615   /* NWK manager address */
// 1616   nwkManagerAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_63:
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
// 1617 
// 1618   /* Send the Management Network Update request */
// 1619   retValue = (uint8)ZDP_MgmtNwkUpdateReq( &destAddr, channelMask, scanDuration,
// 1620                                           scanCount, _NIB.nwkUpdateId+1, nwkManagerAddr );
        ; Setup parameters for call to function ZDP_MgmtNwkUpdateReq
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_60:
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_MgmtNwkUpdateReq?relay
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1621 
// 1622   /*
// 1623     Since we don't recevied our own broadcast messages, we should
// 1624     send a unicast copy of the message to ourself.
// 1625   */
// 1626   if ( destAddr.addrMode == AddrBroadcast )
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,#0xf
        JNZ     ??MT_ZdoMgmtNwkUpdateRequest_0
// 1627   {
// 1628     destAddr.addrMode = Addr16Bit;
        LCALL   ?Subroutine63 & 0xFFFF
// 1629     destAddr.addr.shortAddr = _NIB.nwkDevAddress;
??CrossCallReturnLabel_101:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1630     retValue = (uint8) ZDP_MgmtNwkUpdateReq( &destAddr, channelMask, scanDuration,
// 1631                                              scanCount, _NIB.nwkUpdateId+1, nwkManagerAddr );
??CrossCallReturnLabel_95:
        ; Setup parameters for call to function ZDP_MgmtNwkUpdateReq
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL   ?Subroutine44 & 0xFFFF
// 1632   }
??CrossCallReturnLabel_61:
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_MgmtNwkUpdateReq?relay
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1633 
// 1634   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
??MT_ZdoMgmtNwkUpdateRequest_0:
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock458
// 1635 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond459 Using cfiCommon0
          CFI Function MT_ZdoEndDevBindRequest
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+0
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker461 Using cfiCommon1
          CFI (cfiPicker461) NoFunction
          CFI (cfiPicker461) Picker
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_208:
        MOV     R7,A
        INC     DPTR
        RET
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiPicker461

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond462 Using cfiCommon0
          CFI Function MT_ZdoIEEEAddrRequest
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+0
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker464 Using cfiCommon1
          CFI (cfiPicker464) NoFunction
          CFI (cfiPicker464) Picker
        LCALL   ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_218:
        RET
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiPicker464

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond465 Using cfiCommon0
          CFI Function MT_ZdoMgmtNwkUpdateRequest
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+0
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker467 Using cfiCommon1
          CFI (cfiPicker467) NoFunction
          CFI (cfiPicker467) Picker
        MOV     DPTR,#_NIB + 109
        MOVX    A,@DPTR
        INC     A
        MOV     R5,A
        MOV     R4,?V0 + 2
        MOV     A,R7
        MOV     R1,A
        MOV     A,#0x7
        RET
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiPicker467

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond468 Using cfiCommon0
          CFI Function MT_ZdoMgmtNwkDiscRequest
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+0
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker470 Using cfiCommon1
          CFI (cfiPicker470) NoFunction
          CFI (cfiPicker470) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        CLR     A
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        RET
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiPicker470

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond471 Using cfiCommon0
          CFI Function MT_ZdoMgmtNwkDiscRequest
          CFI Conditional ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+0
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker473 Using cfiCommon1
          CFI (cfiPicker473) NoFunction
          CFI (cfiPicker473) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        CLR     A
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        RET
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiPicker473
// 1636 #endif /* MT_ZDO_MGMT */
// 1637 
// 1638 /***************************************************************************************************
// 1639  * @fn      MT_ZdoSendData
// 1640  *
// 1641  * @brief   Handle a ZDO Send Data request.
// 1642  *
// 1643  * @param   pBuf  - MT message data
// 1644  *
// 1645  * @return  void
// 1646  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1647 void MT_ZdoSendData( uint8 *pBuf )
MT_ZdoSendData:
          CFI Block cfiBlock474 Using cfiCommon0
          CFI Function MT_ZdoSendData
        CODE
// 1648 {
        FUNCALL MT_ZdoSendData, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoSendData, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoSendData, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 1649   uint8 cmdId;
// 1650   uint8 retValue;
// 1651   zAddrType_t destAddr;
// 1652   uint8 transSeq;
// 1653   uint8 len;
// 1654   uint16 cmd;
// 1655 
// 1656     /* parse header */
// 1657   cmdId = pBuf[MT_RPC_POS_CMD1];
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
// 1658   pBuf += MT_RPC_FRAME_HDR_SZ;
        MOV     A,R2
        ADD     A,#0x3
        MOV     ?V0 + 0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
// 1659 
// 1660   /* Destination address */
// 1661   destAddr.addrMode = Addr16Bit;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
// 1662   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_128:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1663   pBuf += 2;
??CrossCallReturnLabel_96:
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine55 & 0xFFFF
// 1664 
// 1665   /* Destination address mode */
// 1666   transSeq = *pBuf++;
??CrossCallReturnLabel_78:
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_66:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
// 1667 
// 1668   /* cmd */
// 1669   cmd = BUILD_UINT16( pBuf[0], pBuf[1] );
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        LCALL   ?Subroutine69 & 0xFFFF
// 1670   pBuf += 2;
??CrossCallReturnLabel_115:
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
// 1671   len = *pBuf++;
        MOV     DPL,?V0 + 0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R7,A
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
// 1672 
// 1673   /* Send the Generic ZDO message request */
// 1674   retValue = (uint8)ZDP_SendData( &transSeq, &destAddr, cmd, len, pBuf, 0 );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0 + 4,R0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R7
        MOV     R1,A
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
// 1675   /*
// 1676     Since we don't recevied our own broadcast messages, we should
// 1677     send a unicast copy of the message to ourself.
// 1678   */
// 1679   if ( destAddr.addrMode == AddrBroadcast )
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,#0xf
        JNZ     ??MT_ZdoSendData_0
// 1680   {
// 1681     destAddr.addrMode = Addr16Bit;
        LCALL   ?Subroutine89 & 0xFFFF
// 1682     destAddr.addr.shortAddr = _NIB.nwkDevAddress;
??CrossCallReturnLabel_140:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1683     retValue = (uint8)ZDP_SendData( &transSeq, &destAddr, cmd, len, pBuf, 0 );
??CrossCallReturnLabel_97:
        ; Setup parameters for call to function ZDP_SendData
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R7
        MOV     R1,A
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
// 1684   }
// 1685 
// 1686   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
??MT_ZdoSendData_0:
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1687 }
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock474
// 1688 
// 1689 /***************************************************************************************************
// 1690  * @fn      MT_ZdoNwkAddrOfInterestReq
// 1691  *
// 1692  * @brief   Handle a ZDO Network Address of Interest request.
// 1693  *
// 1694  * @param   pBuf  - MT message data
// 1695  *
// 1696  * @return  void
// 1697  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1698 void MT_ZdoNwkAddrOfInterestReq( uint8 *pBuf )
MT_ZdoNwkAddrOfInterestReq:
          CFI Block cfiBlock475 Using cfiCommon0
          CFI Function MT_ZdoNwkAddrOfInterestReq
        CODE
// 1699 {
        FUNCALL MT_ZdoNwkAddrOfInterestReq, ZDP_NWKAddrOfInterestReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNwkAddrOfInterestReq, ZDP_NWKAddrOfInterestReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNwkAddrOfInterestReq, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1700   uint8 cmdId;
// 1701   uint8 retValue;
// 1702   zAddrType_t destAddr;
// 1703   uint16 nwkAddr;
// 1704   uint8 cmd;
// 1705 
// 1706     /* parse header */
// 1707   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine38 & 0xFFFF
// 1708   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1709 
// 1710   /* Destination address */
// 1711   destAddr.addrMode = Addr16Bit;
??CrossCallReturnLabel_49:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
// 1712   destAddr.addr.shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
??CrossCallReturnLabel_180:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine29 & 0xFFFF
// 1713   pBuf += 2;
// 1714 
// 1715   /* Network Address of Interest */
// 1716   nwkAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
// 1717   pBuf += 2;
// 1718 
// 1719   cmd = *pBuf++;
??CrossCallReturnLabel_31:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
// 1720 
// 1721   /* Send the Generic ZDO message request */
// 1722   retValue = (uint8)ZDP_NWKAddrOfInterestReq( &destAddr, nwkAddr, cmd, 0 );
        ; Setup parameters for call to function ZDP_NWKAddrOfInterestReq
        MOV     ?V0 + 1,R0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R1,?V0 + 2
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_NWKAddrOfInterestReq?relay
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1723 
// 1724 
// 1725   /*
// 1726     Since we don't recevied our own broadcast messages, we should
// 1727     send a unicast copy of the message to ourself.
// 1728   */
// 1729   if ( destAddr.addrMode == AddrBroadcast )
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,#0xf
        JNZ     ??MT_ZdoNwkAddrOfInterestReq_0
// 1730   {
// 1731     destAddr.addrMode = Addr16Bit;
        LCALL   ?Subroutine63 & 0xFFFF
// 1732     destAddr.addr.shortAddr = _NIB.nwkDevAddress;
??CrossCallReturnLabel_102:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1733     retValue = (uint8)ZDP_NWKAddrOfInterestReq( &destAddr, nwkAddr, cmd, 0 );
??CrossCallReturnLabel_98:
        ; Setup parameters for call to function ZDP_NWKAddrOfInterestReq
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R1,?V0 + 2
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_NWKAddrOfInterestReq?relay
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1734   }
// 1735 
// 1736   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue);
??MT_ZdoNwkAddrOfInterestReq_0:
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     R2,?V0 + 0
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1737 }
        MOV     A,#0xa
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock475

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond476 Using cfiCommon0
          CFI Function MT_ZdoMgmtNwkUpdateRequest
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+0
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker478 Using cfiCommon1
          CFI (cfiPicker478) NoFunction
          CFI (cfiPicker478) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_141:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiPicker478

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond479 Using cfiCommon0
          CFI Function MT_ZdoSendData
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_101
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+0
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_102
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+0
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker482 Using cfiCommon1
          CFI (cfiPicker482) NoFunction
          CFI (cfiPicker482) Picker
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     DPTR,#_NIB + 20
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiPicker482

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond483 Using cfiCommon0
          CFI Function MT_ZdoIEEEAddrRequest
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+0
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker485 Using cfiCommon1
          CFI (cfiPicker485) NoFunction
          CFI (cfiPicker485) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_198:
        RET
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiPicker485

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond486 Using cfiCommon0
          CFI Function MT_ZdoUserDescSet
          CFI Conditional ??CrossCallReturnLabel_197
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function MT_ZdoMatchDescRequest
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_183
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+0
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function MT_ZdoEndDevBindRequest
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_184
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+0
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function MT_ZdoNodeDescRequest
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_185
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+0
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function MT_ZdoPowerDescRequest
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_186
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+0
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function MT_ZdoSimpleDescRequest
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_187
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+0
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function MT_ZdoActiveEpRequest
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_188
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+0
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function MT_ZdoComplexDescRequest
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_189
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+0
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function MT_ZdoUserDescRequest
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_190
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+0
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function MT_ZdoMgmtNwkDiscRequest
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_191
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+0
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function MT_ZdoMgmtLeaveRequest
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_192
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+0
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function MT_ZdoMgmtLqiRequest
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_15
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+0
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_16
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+0
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_17
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+0
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function MT_ZdoServiceDiscRequest
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_24
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+0
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function MT_ZdoMgmtPermitJoinRequest
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_25
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+0
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function MT_ZdoMgmtNwkUpdateRequest
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_26
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+0
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function MT_ZdoRegisterForZDOMsg
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_0
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+0
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function MT_ZdoRemoveRegisteredCB
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_1
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+0
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function MT_ZdoIEEEAddrRequest
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_48
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+0
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_49
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+0
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker507 Using cfiCommon1
          CFI (cfiPicker507) NoFunction
          CFI (cfiPicker507) Picker
        MOV     A,R2
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiPicker507

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond508 Using cfiCommon0
          CFI Function MT_ZdoUserDescSet
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function MT_ZdoNwkAddrOfInterestReq
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+0
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker510 Using cfiCommon1
          CFI (cfiPicker510) NoFunction
          CFI (cfiPicker510) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_163:
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_216:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R4
        ADD     A,#0x0
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
        RET
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiPicker510
// 1738 
// 1739 /***************************************************************************************************
// 1740  * @fn      MT_ZdoStartupFromApp
// 1741  *
// 1742  * @brief   Handle a Startup from App request.
// 1743  *
// 1744  * @param   pBuf  - MT message data
// 1745  *
// 1746  * @return  void
// 1747  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1748 void MT_ZdoStartupFromApp(uint8 *pBuf)
MT_ZdoStartupFromApp:
          CFI Block cfiBlock511 Using cfiCommon0
          CFI Function MT_ZdoStartupFromApp
        CODE
// 1749 {
        FUNCALL MT_ZdoStartupFromApp, ZDOInitDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoStartupFromApp, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1750   uint8 cmd0, cmd1, retValue;
// 1751 
// 1752   /* parse header */
// 1753   cmd0 = pBuf[MT_RPC_POS_CMD0];
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
// 1754   cmd1 = pBuf[MT_RPC_POS_CMD1];
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
// 1755   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1756 
// 1757   retValue = ZDOInitDevice(100);
        ; Setup parameters for call to function ZDOInitDevice
        MOV     R2,#0x64
        MOV     R3,#0x0
        LCALL   ??ZDOInitDevice?relay
        LCALL   ?Subroutine65 & 0xFFFF
// 1758 
// 1759   if (MT_RPC_CMD_SREQ == (cmd0 & MT_RPC_CMD_TYPE_MASK))
??CrossCallReturnLabel_105:
        JNZ     ??MT_ZdoStartupFromApp_0
// 1760   {
// 1761     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP|(uint8)MT_RPC_SYS_ZDO), cmd1,1, &retValue);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1762   }
// 1763 }
??MT_ZdoStartupFromApp_0:
        LJMP    ??Subroutine101_0 & 0xFFFF
          CFI EndBlock cfiBlock511
// 1764 
// 1765 
// 1766 /***************************************************************************************************
// 1767  * @fn      MT_ZdoNetworkDiscoveryReq
// 1768  *
// 1769  * @brief   Handle a ZDO Network Discovery request.
// 1770  *
// 1771  * @param   pBuf  - MT message data
// 1772  *
// 1773  * @return  void
// 1774  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1775 void MT_ZdoNetworkDiscoveryReq(uint8 *pBuf)
MT_ZdoNetworkDiscoveryReq:
          CFI Block cfiBlock512 Using cfiCommon0
          CFI Function MT_ZdoNetworkDiscoveryReq
        CODE
// 1776 {
        FUNCALL MT_ZdoNetworkDiscoveryReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNetworkDiscoveryReq, ZDApp_NetworkDiscoveryReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNetworkDiscoveryReq, ZDO_RegisterForZdoCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNetworkDiscoveryReq, ZDO_RegisterForZdoCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNetworkDiscoveryReq, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1777   uint8  retValue = ZFailure;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        LCALL   ?Subroutine88 & 0xFFFF
// 1778   uint8  cmdId;
// 1779   uint32 scanChannels;
// 1780 
// 1781   /* parse header */
// 1782   cmdId = pBuf[MT_RPC_POS_CMD1];
??CrossCallReturnLabel_138:
        MOVX    A,@DPTR
        MOV     R7,A
// 1783   pBuf += MT_RPC_FRAME_HDR_SZ;
        MOV     A,R2
        ADD     A,#0x3
        LCALL   ??Subroutine112_0 & 0xFFFF
// 1784 
// 1785   /* Packet format */
// 1786   /* scan channels (4) | scan duration (1) */
// 1787 
// 1788   /* Scan channels */
// 1789   scanChannels = osal_build_uint32(pBuf, 4);
// 1790   pBuf += 4;
// 1791 
// 1792   retValue = ZDApp_NetworkDiscoveryReq(scanChannels, *pBuf);
??CrossCallReturnLabel_168:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        LCALL   ??osal_build_uint32?relay
        MOV     A,R6
        MOV     R1,A
        LCALL   ??ZDApp_NetworkDiscoveryReq?relay
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1793 
// 1794   // Register ZDO callback for MT to handle the network discovery confirm
// 1795   // and beacon notification confirm
// 1796   ZDO_RegisterForZdoCB( ZDO_NWK_DISCOVERY_CNF_CBID, &MT_ZdoNwkDiscoveryCnfCB );
        ; Setup parameters for call to function ZDO_RegisterForZdoCB
        MOV     R2,#??MT_ZdoNwkDiscoveryCnfCB?relay & 0xff
        MOV     R3,#(??MT_ZdoNwkDiscoveryCnfCB?relay >> 8) & 0xff
        MOV     R1,#0x2
        LCALL   ??ZDO_RegisterForZdoCB?relay
// 1797   ZDO_RegisterForZdoCB( ZDO_BEACON_NOTIFY_IND_CBID, &MT_ZdoBeaconIndCB );
        ; Setup parameters for call to function ZDO_RegisterForZdoCB
        MOV     R2,#??MT_ZdoBeaconIndCB?relay & 0xff
        MOV     R3,#(??MT_ZdoBeaconIndCB?relay >> 8) & 0xff
        MOV     R1,#0x3
        LCALL   ??ZDO_RegisterForZdoCB?relay
// 1798 
// 1799   /* Build and send back the response */
// 1800   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue );
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R7
        LJMP    ??Subroutine99_0 & 0xFFFF
          CFI EndBlock cfiBlock512
// 1801 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond513 Using cfiCommon0
          CFI Function MT_ZdoMgmtLqiRequest
          CFI Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_7
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+0
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_8
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+0
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function MT_ZdoNetworkDiscoveryReq
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+0
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function MT_ZdoConcentratorIndCB
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+0
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker518 Using cfiCommon1
          CFI (cfiPicker518) NoFunction
          CFI (cfiPicker518) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiPicker518
// 1802 
// 1803 
// 1804 /***************************************************************************************************
// 1805  * @fn      MT_ZdoJoinReq
// 1806  *
// 1807  * @brief   Handle a ZDO Join request.
// 1808  *
// 1809  * @param   pBuf  - MT message data
// 1810  *
// 1811  * @return  void
// 1812  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1813 void MT_ZdoJoinReq(uint8 *pBuf)
MT_ZdoJoinReq:
          CFI Block cfiBlock519 Using cfiCommon0
          CFI Function MT_ZdoJoinReq
        CODE
// 1814 {
        FUNCALL MT_ZdoJoinReq, ZDApp_JoinReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoJoinReq, ZDO_RegisterForZdoCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoJoinReq, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1815   uint8  retValue = ZFailure;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1816   uint8  cmdId;
// 1817   uint16 panId;
// 1818   uint16 chosenParent;
// 1819 
// 1820   /* parse header */
// 1821   cmdId = pBuf[MT_RPC_POS_CMD1];
        LCALL   ?Subroutine75 & 0xFFFF
// 1822   pBuf += MT_RPC_FRAME_HDR_SZ;
// 1823 
// 1824   /* Packet format */
// 1825   /* channel     (1) | panID (2) | extendedPanID (8) | chosenParent (2) |
// 1826    * parentDepth (1) | stackProfile  (1)
// 1827    */
// 1828 
// 1829   panId        = BUILD_UINT16(pBuf[1], pBuf[2]);
// 1830   chosenParent = BUILD_UINT16(pBuf[11], pBuf[12]);
// 1831 
// 1832   retValue = ZDApp_JoinReq(pBuf[0], panId, &(pBuf[3]), chosenParent, pBuf[13], pBuf[14]);
??CrossCallReturnLabel_125:
        ; Setup parameters for call to function ZDApp_JoinReq
        MOV     A,R6
        ADD     A,#0xe
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_80:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R6
        ADD     A,#0xd
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_81:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_227:
        MOV     R2,A
        MOV     A,R6
        ADD     A,#0xc
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_224:
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_116:
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R6
        ADD     A,#0x3
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x0
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDApp_JoinReq?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1833 
// 1834   /* Register for MT to receive Join Confirm */
// 1835   ZDO_RegisterForZdoCB( ZDO_JOIN_CNF_CBID, &MT_ZdoJoinCnfCB );
        ; Setup parameters for call to function ZDO_RegisterForZdoCB
        MOV     R2,#??MT_ZdoJoinCnfCB?relay & 0xff
        MOV     R3,#(??MT_ZdoJoinCnfCB?relay >> 8) & 0xff
        MOV     R1,#0x4
        LCALL   ??ZDO_RegisterForZdoCB?relay
// 1836 
// 1837   /* Build and send back the response */
// 1838   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP | (uint8)MT_RPC_SYS_ZDO), cmdId, 1, &retValue );
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     R2,?V0 + 0
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1839 
// 1840 }
        MOV     A,#0x1
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock519

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond520 Using cfiCommon0
          CFI Function MT_ZdoBindRequest
          CFI Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function MT_ZdoUnbindRequest
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_41
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+0
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function MT_ZdoJoinReq
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+0
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker523 Using cfiCommon1
          CFI (cfiPicker523) NoFunction
          CFI (cfiPicker523) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        RET
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiPicker523

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond524 Using cfiCommon0
          CFI Function MT_ZdoSendData
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function MT_ZdoJoinReq
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+0
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker526 Using cfiCommon1
          CFI (cfiPicker526) NoFunction
          CFI (cfiPicker526) Picker
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x0
        MOV     ?V0 + 2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 3,A
        RET
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiPicker526

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond527 Using cfiCommon0
          CFI Function MT_ZdoJoinReq
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function MT_ZdoLeaveInd
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+0
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker529 Using cfiCommon1
          CFI (cfiPicker529) NoFunction
          CFI (cfiPicker529) Picker
        MOV     A,R6
        ADD     A,#0xb
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiPicker529
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiCond530 Using cfiCommon0
          CFI Function MT_ZdoJoinReq
          CFI Conditional ??CrossCallReturnLabel_224
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function MT_ZdoDirectCB
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+0
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function MT_ZdoLeaveInd
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+0
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function MT_ZdoJoinReq
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+0
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function MT_ZdoLeaveInd
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+0
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker535 Using cfiCommon1
          CFI (cfiPicker535) NoFunction
          CFI (cfiPicker535) Picker
        MOV     DPL,A
        MOV     A,R7
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiPicker535
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine124_0:
          CFI Block cfiCond536 Using cfiCommon0
          CFI Function MT_ZdoAddrRspCB
          CFI Conditional ??CrossCallReturnLabel_221
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function MT_ZdoAddrRspCB
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+0
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function MT_ZdoSendMsgCB
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+0
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function MT_ZdoJoinReq
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+0
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function MT_ZdoDirectCB
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+0
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function MT_ZdoLeaveInd
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+0
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function MT_ZdoJoinReq
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+0
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function MT_ZdoLeaveInd
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+0
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker544 Using cfiCommon1
          CFI (cfiPicker544) NoFunction
          CFI (cfiPicker544) Picker
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_253:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiPicker544

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond545 Using cfiCommon0
          CFI Function MT_ZdoJoinReq
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function MT_ZdoJoinReq
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+0
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker547 Using cfiCommon1
          CFI (cfiPicker547) NoFunction
          CFI (cfiPicker547) Picker
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_249:
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        RET
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiPicker547
// 1841 
// 1842 
// 1843 /***************************************************************************************************
// 1844  * @fn          MT_ZdoNwkDiscoveryCnfCB
// 1845  *
// 1846  * @brief       Send an indication to inform host device the completion of
// 1847  *              network discovery scan
// 1848  *
// 1849  * @param       pStr - pointer to a parameter and a structure of parameters
// 1850  *
// 1851  * @return      void
// 1852  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1853 void *MT_ZdoNwkDiscoveryCnfCB ( void *pStr )
MT_ZdoNwkDiscoveryCnfCB:
          CFI Block cfiBlock548 Using cfiCommon0
          CFI Function MT_ZdoNwkDiscoveryCnfCB
        CODE
// 1854 {
        FUNCALL MT_ZdoNwkDiscoveryCnfCB, ZDO_DeregisterForZdoCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNwkDiscoveryCnfCB, ZDO_DeregisterForZdoCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNwkDiscoveryCnfCB, MT_ZdoBeaconIndCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoNwkDiscoveryCnfCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1855   /* pStr: status (uint8) */
// 1856   /* Packet Format */
// 1857   /* Status (1) */
// 1858 
// 1859   // Scan completed. De-register the callback with ZDO
// 1860   ZDO_DeregisterForZdoCB( ZDO_NWK_DISCOVERY_CNF_CBID );
        ; Setup parameters for call to function ZDO_DeregisterForZdoCB
        MOV     R1,#0x2
        LCALL   ??ZDO_DeregisterForZdoCB?relay
// 1861   ZDO_DeregisterForZdoCB( ZDO_BEACON_NOTIFY_IND_CBID );
        ; Setup parameters for call to function ZDO_DeregisterForZdoCB
        MOV     R1,#0x3
        LCALL   ??ZDO_DeregisterForZdoCB?relay
// 1862 
// 1863   // Send the buffered beacon indication
// 1864   MT_ZdoBeaconIndCB ( NULL );
        ; Setup parameters for call to function MT_ZdoBeaconIndCB
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   ??MT_ZdoBeaconIndCB?relay
// 1865 
// 1866   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 1867                                          MT_ZDO_NWK_DISCOVERY_CNF, 1, pStr);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R3,#0x1
        MOV     R2,#-0x39
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1868   return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??Subroutine107_0 & 0xFFFF
          CFI EndBlock cfiBlock548
// 1869 }
// 1870 
// 1871 /***************************************************************************************************
// 1872  * @fn          MT_ZdoBeaconIndCB
// 1873  *
// 1874  * @brief       Send an indication to host device of a beacon notification
// 1875  *
// 1876  * @param       pStr -  pointer to a parameter and a structure of parameters
// 1877  *
// 1878  * @return      void
// 1879  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1880 void *MT_ZdoBeaconIndCB ( void *pStr )
MT_ZdoBeaconIndCB:
          CFI Block cfiBlock549 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
        CODE
// 1881 {
        FUNCALL MT_ZdoBeaconIndCB, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoBeaconIndCB, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoBeaconIndCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoBeaconIndCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoBeaconIndCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1882   zdoBeaconInd_t *pBeacon = pStr;
// 1883   uint8 *pTmp;
// 1884 
// 1885   /* Packet Format */
// 1886   /* devCnt (1) | device #1 (21) | device #2 (21) |... | device #n (21) */
// 1887 
// 1888   if( pStr != NULL)
        MOV     A,R6
        ORL     A,R7
        MOV     DPTR,#pBeaconIndBuf
        JNZ     $+5
        LJMP    ??MT_ZdoBeaconIndCB_0 & 0xFFFF
// 1889   {
// 1890     if( pBeaconIndBuf == NULL )
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_240:
        JNZ     ??MT_ZdoBeaconIndCB_1
// 1891     {
// 1892       // If pBeaconIndBuf has not been allocated yet
// 1893       // allocate memory now with MAX_UART_TX_BUFF
// 1894       if( NULL == (pBeaconIndBuf = (uint8 *)osal_mem_alloc(MT_ZDO_BEACON_IND_PACK_LEN)))
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x7b
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     DPTR,#pBeaconIndBuf
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_242:
        JNZ     $+5
        LJMP    ??MT_ZdoBeaconIndCB_2 & 0xFFFF
// 1895       {
// 1896         // Memory failure
// 1897         return NULL;
// 1898       }
// 1899       pBeaconIndBuf[0] = 0; // First byte is devCnt. Initialize to 0.
        LCALL   ??Subroutine126_0 & 0xFFFF
// 1900     }
??CrossCallReturnLabel_236:
        CLR     A
        MOVX    @DPTR,A
// 1901 
// 1902     // Fill in the buffer with the beacon indication
// 1903     pTmp = pBeaconIndBuf + (1 + pBeaconIndBuf[0] * MT_ZDO_BEACON_IND_LEN);
??MT_ZdoBeaconIndCB_1:
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_35:
        MOV     B,#0x15
        MUL     AB
        MOV     R0,A
        MOV     R1,B
        MOV     DPTR,#pBeaconIndBuf
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R2
        MOV     DPH,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
// 1904     *pTmp++ = LO_UINT16(pBeacon->sourceAddr);
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine33 & 0xFFFF
// 1905     *pTmp++ = HI_UINT16(pBeacon->sourceAddr);
??CrossCallReturnLabel_38:
        LCALL   ??Subroutine128_0 & 0xFFFF
// 1906     *pTmp++ = LO_UINT16(pBeacon->panID);
??CrossCallReturnLabel_246:
        ADD     A,#0x2
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_230:
        INC     DPTR
        INC     R2
        MOV     R3,DPH
// 1907     *pTmp++ = HI_UINT16(pBeacon->panID);
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ?Subroutine33 & 0xFFFF
// 1908     *pTmp++ = pBeacon->logicalChannel;
??CrossCallReturnLabel_39:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine24 & 0xFFFF
// 1909     *pTmp++ = pBeacon->permitJoining;
??CrossCallReturnLabel_20:
        LCALL   ?Subroutine24 & 0xFFFF
// 1910     *pTmp++ = pBeacon->routerCapacity;
??CrossCallReturnLabel_21:
        INC     DPTR
        LCALL   ?Subroutine23 & 0xFFFF
// 1911     *pTmp++ = pBeacon->deviceCapacity;
??CrossCallReturnLabel_18:
        LCALL   ?Subroutine23 & 0xFFFF
// 1912     *pTmp++ = pBeacon->protocolVersion;
??CrossCallReturnLabel_19:
        INC     DPTR
        LCALL   ?Subroutine19 & 0xFFFF
// 1913     *pTmp++ = pBeacon->stackProfile;
??CrossCallReturnLabel_9:
        LCALL   ?Subroutine19 & 0xFFFF
// 1914     *pTmp++ = pBeacon->LQI;
??CrossCallReturnLabel_10:
        INC     DPTR
        LCALL   ??Subroutine128_0 & 0xFFFF
// 1915     *pTmp++ = pBeacon->depth;
??CrossCallReturnLabel_247:
        ADD     A,#0xb
        LCALL   ?Subroutine16 & 0xFFFF
// 1916     *pTmp++ = pBeacon->updateID;
??CrossCallReturnLabel_244:
        ADD     A,#0xc
        LCALL   ?Subroutine16 & 0xFFFF
// 1917     osal_memcpy( pTmp, pBeacon->extendedPanID, Z_EXTADDR_LEN);
??CrossCallReturnLabel_245:
        ADD     A,#0xd
        MOV     ?V0 + 0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#0x8
        MOV     R5,#0x0
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1918 
// 1919     pBeaconIndBuf[0] += 1; // Increment the devCnt
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_36:
        INC     A
        MOVX    @DPTR,A
// 1920 
// 1921     // Check if the buffer can fit in another beacon
// 1922     if( ((pBeaconIndBuf[0] + 1) * MT_ZDO_BEACON_IND_LEN + 1) > MT_ZDO_BEACON_IND_PACK_LEN )
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_37:
        MOV     R3,A
        MOV     B,#0x15
        MUL     AB
        ADD     A,#0x16
        MOV     R0,A
        MOV     A,B
        ADDC    A,#0x0
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x7c
        MOV     A,R1
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??MT_ZdoBeaconIndCB_2
// 1923     {
// 1924       // Packet full, send the packet over MT
// 1925       MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 1926                                    MT_ZDO_BEACON_NOTIFY_IND,
// 1927                                    (pBeaconIndBuf[0] * MT_ZDO_BEACON_IND_LEN + 1), pBeaconIndBuf);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_64:
        MOV     A,R3
        MUL     AB
        INC     A
        MOV     R3,A
        MOV     R2,#-0x3b
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1928       pBeaconIndBuf[0] = 0; // Reset the devCnt back to zero
        LCALL   ?Subroutine81 & 0xFFFF
// 1929     }
// 1930   }
??CrossCallReturnLabel_238:
        CLR     A
        SJMP    ??MT_ZdoBeaconIndCB_3
// 1931   else
// 1932   {
// 1933     if( (pBeaconIndBuf != NULL) && (pBeaconIndBuf[0] != 0) )
??MT_ZdoBeaconIndCB_0:
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_241:
        JZ      ??MT_ZdoBeaconIndCB_2
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_237:
        MOVX    A,@DPTR
        MOV     R0,A
        JZ      ??MT_ZdoBeaconIndCB_4
// 1934     {
// 1935       // End of beacon indication, send the packet over MT
// 1936       MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 1937                                    MT_ZDO_BEACON_NOTIFY_IND,
// 1938                                    (pBeaconIndBuf[0] * MT_ZDO_BEACON_IND_LEN + 1), pBeaconIndBuf);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        LCALL   ?Subroutine47 & 0xFFFF
// 1939     }
??CrossCallReturnLabel_65:
        MOV     A,R0
        MUL     AB
        INC     A
        MOV     R3,A
        MOV     R2,#-0x3b
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1940     // Free the allocated memory
// 1941     if(pBeaconIndBuf != NULL)
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_243:
        JZ      ??MT_ZdoBeaconIndCB_2
// 1942     {
// 1943       osal_mem_free(pBeaconIndBuf);
??MT_ZdoBeaconIndCB_4:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#pBeaconIndBuf
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_147:
        MOV     R3,A
        LCALL   ??osal_mem_free?relay
// 1944       pBeaconIndBuf = NULL;
        MOV     DPTR,#pBeaconIndBuf
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
??MT_ZdoBeaconIndCB_3:
        MOVX    @DPTR,A
// 1945     }
// 1946   }
// 1947 
// 1948   return NULL;
??MT_ZdoBeaconIndCB_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??Subroutine132_0 & 0xFFFF
          CFI EndBlock cfiBlock549
// 1949 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond550 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function MT_ZdoBeaconIndCB
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+0
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker552 Using cfiCommon1
          CFI (cfiPicker552) NoFunction
          CFI (cfiPicker552) Picker
        MOV     DPTR,#pBeaconIndBuf
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_213:
        MOV     R5,A
        MOV     B,#0x15
        RET
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiPicker552

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond553 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_230
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function MT_ZdoDirectCB
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+0
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker555 Using cfiCommon1
          CFI (cfiPicker555) NoFunction
          CFI (cfiPicker555) Picker
        MOV     R0,A
        MOV     A,R7
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiPicker555
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiCond556 Using cfiCommon0
          CFI Function MT_ZdoSendMsgCB
          CFI Conditional ??CrossCallReturnLabel_229
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function MT_ZdoBeaconIndCB
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+0
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function MT_ZdoDirectCB
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+0
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker559 Using cfiCommon1
          CFI (cfiPicker559) NoFunction
          CFI (cfiPicker559) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_233:
        RET
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiPicker559

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond560 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_230
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function MT_ZdoDirectCB
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_231
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+0
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function MT_ZdoSendMsgCB
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_229
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+0
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function MT_ZdoSendMsgCB
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_261
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+0
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function MT_ZdoSendMsgCB
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_262
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+0
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker565 Using cfiCommon1
          CFI (cfiPicker565) NoFunction
          CFI (cfiPicker565) Picker
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_235:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiPicker565

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond566 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function MT_ZdoBeaconIndCB
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+0
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker568 Using cfiCommon1
          CFI (cfiPicker568) NoFunction
          CFI (cfiPicker568) Picker
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_119:
        RET
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiPicker568

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond569 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function MT_ZdoBeaconIndCB
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_39
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+0
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function MT_ZdoBeaconIndCB
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_20
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+0
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function MT_ZdoBeaconIndCB
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_21
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+0
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker573 Using cfiCommon1
          CFI (cfiPicker573) NoFunction
          CFI (cfiPicker573) Picker
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_144:
        RET
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiPicker573

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond574 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function MT_ZdoBeaconIndCB
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_39
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+0
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function MT_ZdoBeaconIndCB
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_20
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+0
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function MT_ZdoBeaconIndCB
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_21
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+0
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function MT_ZdoBeaconIndCB
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_18
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+0
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function MT_ZdoBeaconIndCB
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_19
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+0
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function MT_ZdoBeaconIndCB
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_9
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+0
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function MT_ZdoBeaconIndCB
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_10
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+0
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker582 Using cfiCommon1
          CFI (cfiPicker582) NoFunction
          CFI (cfiPicker582) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_269:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiPicker582

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond583 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function MT_ZdoBeaconIndCB
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+0
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function MT_ZdoBeaconIndCB
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+0
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker586 Using cfiCommon1
          CFI (cfiPicker586) NoFunction
          CFI (cfiPicker586) Picker
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_239:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiPicker586

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond587 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_238
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function MT_ZdoBeaconIndCB
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_35
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+0
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function MT_ZdoBeaconIndCB
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_36
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+0
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function MT_ZdoBeaconIndCB
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_37
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+0
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker591 Using cfiCommon1
          CFI (cfiPicker591) NoFunction
          CFI (cfiPicker591) Picker
        MOV     DPTR,#pBeaconIndBuf
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiPicker591
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine126_0:
          CFI Block cfiCond592 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_236
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function MT_ZdoBeaconIndCB
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+0
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function MT_ZdoBeaconIndCB
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+0
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function MT_ZdoBeaconIndCB
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_35
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+0
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function MT_ZdoBeaconIndCB
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_36
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+0
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function MT_ZdoBeaconIndCB
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_37
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+0
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker598 Using cfiCommon1
          CFI (cfiPicker598) NoFunction
          CFI (cfiPicker598) Picker
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiPicker598

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond599 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_242
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function MT_ZdoBeaconIndCB
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+0
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker601 Using cfiCommon1
          CFI (cfiPicker601) NoFunction
          CFI (cfiPicker601) Picker
        MOV     DPTR,#pBeaconIndBuf
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiPicker601
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine127_0:
          CFI Block cfiCond602 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_240
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function MT_ZdoBeaconIndCB
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+0
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function MT_ZdoBeaconIndCB
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+0
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function MT_ZdoBeaconIndCB
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+0
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker606 Using cfiCommon1
          CFI (cfiPicker606) NoFunction
          CFI (cfiPicker606) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiPicker606

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond607 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_20
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function MT_ZdoBeaconIndCB
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+0
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker609 Using cfiCommon1
          CFI (cfiPicker609) NoFunction
          CFI (cfiPicker609) Picker
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_120:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiPicker609

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond610 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function MT_ZdoBeaconIndCB
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+0
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker612 Using cfiCommon1
          CFI (cfiPicker612) NoFunction
          CFI (cfiPicker612) Picker
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_117:
        RET
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiPicker612

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond613 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function MT_ZdoBeaconIndCB
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_19
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+0
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function MT_ZdoBeaconIndCB
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_9
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+0
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function MT_ZdoBeaconIndCB
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_10
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+0
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker617 Using cfiCommon1
          CFI (cfiPicker617) NoFunction
          CFI (cfiPicker617) Picker
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_145:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiPicker617

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond618 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_9
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function MT_ZdoBeaconIndCB
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+0
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker620 Using cfiCommon1
          CFI (cfiPicker620) NoFunction
          CFI (cfiPicker620) Picker
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_118:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiPicker620

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond621 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_244
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function MT_ZdoBeaconIndCB
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond622) CFA_SP SP+0
          CFI (cfiCond622) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker623 Using cfiCommon1
          CFI (cfiPicker623) NoFunction
          CFI (cfiPicker623) Picker
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine129_0 & 0xFFFF
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiPicker623
??CrossCallReturnLabel_248:
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine128_0:
          CFI Block cfiCond624 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_246
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function MT_ZdoBeaconIndCB
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+0
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function MT_ZdoBeaconIndCB
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+0
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function MT_ZdoBeaconIndCB
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+0
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker628 Using cfiCommon1
          CFI (cfiPicker628) NoFunction
          CFI (cfiPicker628) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_267:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,R6
        RET
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiPicker628

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond629 Using cfiCommon0
          CFI Function MT_ZdoSendMsgCB
          CFI Conditional ??CrossCallReturnLabel_250
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function MT_ZdoSendMsgCB
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+0
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function MT_ZdoSendMsgCB
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+0
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker632 Using cfiCommon1
          CFI (cfiPicker632) NoFunction
          CFI (cfiPicker632) Picker
        MOV     DPL,A
        MOV     A,?V0 + 1
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiPicker632
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine129_0:
          CFI Block cfiCond633 Using cfiCommon0
          CFI Function MT_ZdoJoinReq
          CFI Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function MT_ZdoLeaveInd
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_228
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+0
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function MT_ZdoJoinReq
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_224
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+0
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function MT_ZdoDirectCB
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_225
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+0
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function MT_ZdoLeaveInd
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_226
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+0
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function MT_ZdoAddrRspCB
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_221
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+0
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function MT_ZdoAddrRspCB
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_222
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+0
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function MT_ZdoSendMsgCB
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_223
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+0
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function MT_ZdoJoinReq
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_80
          CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond641) CFA_SP SP+0
          CFI (cfiCond641) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function MT_ZdoJoinReq
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_81
          CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond642) CFA_SP SP+0
          CFI (cfiCond642) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function MT_ZdoBeaconIndCB
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_244
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+0
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function MT_ZdoBeaconIndCB
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_245
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+0
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function MT_ZdoSendMsgCB
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+0
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function MT_ZdoSendMsgCB
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+0
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function MT_ZdoSendMsgCB
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+0
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker648 Using cfiCommon1
          CFI (cfiPicker648) NoFunction
          CFI (cfiPicker648) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiPicker648
// 1950 
// 1951 
// 1952 
// 1953 /***************************************************************************************************
// 1954  * @fn          MT_ZdoJoinCnfCB
// 1955  *
// 1956  * @brief       Handle the ZDO Join Confirm from ZDO
// 1957  *
// 1958  * @param       pStr - pointer to a parameter and a structure of parameters
// 1959  *
// 1960  * @return      void
// 1961  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1962 void *MT_ZdoJoinCnfCB ( void *pStr )
MT_ZdoJoinCnfCB:
          CFI Block cfiBlock649 Using cfiCommon0
          CFI Function MT_ZdoJoinCnfCB
        CODE
// 1963 {
        FUNCALL MT_ZdoJoinCnfCB, ZDO_DeregisterForZdoCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoJoinCnfCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1964   /* pStr: zdoJoinCnf_t* */
// 1965   /* Packet Format */
// 1966   /* Status (1) | device addr (2) | parent addr (2) */
// 1967 
// 1968   uint8 buf[MT_ZDO_JOIN_CNF_LEN];
// 1969   zdoJoinCnf_t *joinCnf = pStr;
// 1970 
// 1971   /* Join Complete. De-register the callback with ZDO */
// 1972   ZDO_DeregisterForZdoCB( ZDO_JOIN_CNF_CBID );
        ; Setup parameters for call to function ZDO_DeregisterForZdoCB
        MOV     R1,#0x4
        LCALL   ??ZDO_DeregisterForZdoCB?relay
// 1973 
// 1974   buf[0] = joinCnf->status;
        LCALL   ?Subroutine36 & 0xFFFF
// 1975   buf[1] = LO_UINT16( joinCnf->deviceAddr );
??CrossCallReturnLabel_44:
        MOV     R0,DPL
        MOV     R1,DPH
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1976   buf[2] = HI_UINT16( joinCnf->deviceAddr );
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1977   buf[3] = LO_UINT16( joinCnf->parentAddr );
        MOV     A,R6
        ADD     A,#0x3
        MOV     R0,A
        MOV     A,R7
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_234:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1978   buf[4] = HI_UINT16( joinCnf->parentAddr );
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine59 & 0xFFFF
// 1979 
// 1980   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 1981                                MT_ZDO_JOIN_CNF, MT_ZDO_JOIN_CNF_LEN, buf);
??CrossCallReturnLabel_82:
        MOV     R3,#0x5
        MOV     R2,#-0x3a
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 1982 
// 1983   return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     A,#0x5
        LJMP    ??Subroutine106_0 & 0xFFFF
          CFI EndBlock cfiBlock649
// 1984 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond650 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_230
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function MT_ZdoDirectCB
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_231
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+0
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function MT_ZdoSendMsgCB
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_229
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+0
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function MT_ZdoSendMsgCB
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_261
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+0
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function MT_ZdoSendMsgCB
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_262
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+0
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function MT_ZdoJoinCnfCB
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+0
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker656 Using cfiCommon1
          CFI (cfiPicker656) NoFunction
          CFI (cfiPicker656) Picker
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiPicker656
// 1985 
// 1986 /*************************************************************************************************
// 1987  * @fn      MT_ZdoRegisterForZDOMsg(pBuf);
// 1988  *
// 1989  * @brief   MT proxy for ZDO_RegisterForZDOMsg.
// 1990  *
// 1991  * @param   pBuf  - MT message data
// 1992  *
// 1993  * @return  void
// 1994  *************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1995 void MT_ZdoRegisterForZDOMsg(uint8 *pBuf)
MT_ZdoRegisterForZDOMsg:
          CFI Block cfiBlock657 Using cfiCommon0
          CFI Function MT_ZdoRegisterForZDOMsg
        CODE
// 1996 {
        FUNCALL MT_ZdoRegisterForZDOMsg, ZDO_RegisterForZDOMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoRegisterForZDOMsg, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1997   uint8 cmd0, cmd1, tmp;
// 1998   uint16 cId;
// 1999 
// 2000   /* parse header */
// 2001   cmd0 = pBuf[MT_RPC_POS_CMD0];
        LCALL   ?Subroutine13 & 0xFFFF
// 2002   cmd1 = pBuf[MT_RPC_POS_CMD1];
// 2003   pBuf += MT_RPC_FRAME_HDR_SZ;
// 2004 
// 2005   cId = BUILD_UINT16(pBuf[0], pBuf[1]);
// 2006   tmp = ZDO_RegisterForZDOMsg(MT_TaskID, cId);
??CrossCallReturnLabel_0:
        LCALL   ??ZDO_RegisterForZDOMsg?relay
        LCALL   ?Subroutine65 & 0xFFFF
// 2007 
// 2008   if (MT_RPC_CMD_SREQ == (cmd0 & MT_RPC_CMD_TYPE_MASK))
??CrossCallReturnLabel_106:
        JNZ     ??MT_ZdoRegisterForZDOMsg_0
// 2009   {
// 2010     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP|(uint8)MT_RPC_SYS_ZDO), cmd1, 1, &tmp);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2011   }
// 2012 }
??MT_ZdoRegisterForZDOMsg_0:
        LJMP    ??Subroutine101_0 & 0xFFFF
          CFI EndBlock cfiBlock657

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond658 Using cfiCommon0
          CFI Function MT_ZdoStartupFromApp
          CFI Conditional ??CrossCallReturnLabel_105
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function MT_ZdoRegisterForZDOMsg
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+0
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function MT_ZdoRemoveRegisteredCB
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+0
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker661 Using cfiCommon1
          CFI (cfiPicker661) NoFunction
          CFI (cfiPicker661) Picker
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#-0x20
        ANL     A,R7
        XRL     A,#0x20
        RET
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiPicker661
// 2013 
// 2014 /*************************************************************************************************
// 2015  * @fn      MT_ZdoRemoveRegisteredCB(pBuf);
// 2016  *
// 2017  * @brief   MT proxy for ZDO_RemoveRegisteredCB.
// 2018  *
// 2019  * @param   pBuf  - MT message data
// 2020  *
// 2021  * @return  void
// 2022  *************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2023 void MT_ZdoRemoveRegisteredCB(uint8 *pBuf)
MT_ZdoRemoveRegisteredCB:
          CFI Block cfiBlock662 Using cfiCommon0
          CFI Function MT_ZdoRemoveRegisteredCB
        CODE
// 2024 {
        FUNCALL MT_ZdoRemoveRegisteredCB, ZDO_RemoveRegisteredCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoRemoveRegisteredCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 2025   uint8 cmd0, cmd1, tmp;
// 2026   uint16 cId;
// 2027 
// 2028   /* parse header */
// 2029   cmd0 = pBuf[MT_RPC_POS_CMD0];
        LCALL   ?Subroutine13 & 0xFFFF
// 2030   cmd1 = pBuf[MT_RPC_POS_CMD1];
// 2031   pBuf += MT_RPC_FRAME_HDR_SZ;
// 2032 
// 2033   cId = BUILD_UINT16(pBuf[0], pBuf[1]);
// 2034   tmp = ZDO_RemoveRegisteredCB(MT_TaskID, cId);
??CrossCallReturnLabel_1:
        LCALL   ??ZDO_RemoveRegisteredCB?relay
        LCALL   ?Subroutine65 & 0xFFFF
// 2035 
// 2036   if (MT_RPC_CMD_SREQ == (cmd0 & MT_RPC_CMD_TYPE_MASK))
??CrossCallReturnLabel_107:
        JNZ     ??MT_ZdoRemoveRegisteredCB_0
// 2037   {
// 2038     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_SRSP|(uint8)MT_RPC_SYS_ZDO), cmd1, 1, &tmp);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     R1,#0x65
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2039   }
// 2040 }
??MT_ZdoRemoveRegisteredCB_0:
        LJMP    ??Subroutine101_0 & 0xFFFF
          CFI EndBlock cfiBlock662

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond663 Using cfiCommon0
          CFI Function MT_ZdoRegisterForZDOMsg
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function MT_ZdoRemoveRegisteredCB
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+0
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker665 Using cfiCommon1
          CFI (cfiPicker665) NoFunction
          CFI (cfiPicker665) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_196:
        ; Setup parameters for call to function ZDO_RegisterForZDOMsg
        ; Setup parameters for call to function ZDO_RemoveRegisteredCB
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_219:
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     DPTR,#MT_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiPicker665
// 2041 
// 2042 #endif /* MT_ZDO_FUNC */
// 2043 
// 2044 
// 2045 /***************************************************************************************************
// 2046  * Callback handling function
// 2047  ***************************************************************************************************/
// 2048 
// 2049 #if defined (MT_ZDO_CB_FUNC)
// 2050 
// 2051 /***************************************************************************************************
// 2052  * @fn      MT_ZdoStateChangeCB
// 2053  *
// 2054  * @brief   Handle state change OSAL message from ZDO.
// 2055  *
// 2056  * @param   pMsg  - Message data
// 2057  *
// 2058  * @return  void
// 2059  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2060 void MT_ZdoStateChangeCB(osal_event_hdr_t *pMsg)
MT_ZdoStateChangeCB:
          CFI Block cfiBlock666 Using cfiCommon0
          CFI Function MT_ZdoStateChangeCB
        CODE
// 2061 {
        FUNCALL MT_ZdoStateChangeCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2062   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2063                                        MT_ZDO_STATE_CHANGE_IND, 1, &pMsg->status);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     R2,#-0x40
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2064 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock666
// 2065 
// 2066 /***************************************************************************************************
// 2067  * @fn     MT_ZdoDirectCB()
// 2068  *
// 2069  * @brief  ZDO direct callback.  Build an MT message directly from the
// 2070  *         over-the-air ZDO message.
// 2071  *
// 2072  * @param  pData - Incoming AF frame.
// 2073  *
// 2074  * @return  none
// 2075  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2076 void MT_ZdoDirectCB( afIncomingMSGPacket_t *pData, zdoIncomingMsg_t *inMsg )
MT_ZdoDirectCB:
          CFI Block cfiBlock667 Using cfiCommon0
          CFI Function MT_ZdoDirectCB
        CODE
// 2077 {
        FUNCALL MT_ZdoDirectCB, MT_ZdoHandleExceptions
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoDirectCB, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoDirectCB, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoDirectCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoDirectCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x13
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
        ; Saved register size: 19
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2078   uint8 len, *pBuf;
// 2079   uint16 origClusterId;
// 2080 
// 2081   // save original value because MT_ZdoHandleExceptions() function could modify pData->clusterId
// 2082   origClusterId = pData->clusterId;
        MOV     A,R6
        ADD     A,#0x4
        MOV     ?V0 + 2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
// 2083 
// 2084   // Is the message an exception or not a response?
// 2085   if ( MT_ZdoHandleExceptions( pData, inMsg ) || ( (origClusterId & ZDO_RESPONSE_BIT) == 0 ) )
        ; Setup parameters for call to function MT_ZdoHandleExceptions
        LCALL   ??MT_ZdoHandleExceptions?relay
        MOV     A,R1
        JZ      $+5
        LJMP    ??MT_ZdoDirectCB_0 & 0xFFFF
        MOV     A,?V0 + 1
        ANL     A,#0x80
        JNZ     $+5
        LJMP    ??MT_ZdoDirectCB_0 & 0xFFFF
// 2086   {
// 2087     return;  // Handled somewhere else or not needed.
// 2088   }
// 2089 
// 2090   /* ZDO data starts after one-byte sequence number and the msg buffer length includes
// 2091    * two bytes for srcAddr.
// 2092    */
// 2093   len = pData->cmd.DataLength - 1 + sizeof(uint16);
        MOV     A,R6
        ADD     A,#0x20
        MOV     ?V0 + 6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 7,A
        MOV     DPL,?V0 + 6
        MOV     DPH,A
        MOVX    A,@DPTR
        INC     A
        MOV     ?V0 + 4,A
// 2094 
// 2095   if (NULL != (pBuf = (uint8 *)osal_mem_alloc(len)))
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??MT_ZdoDirectCB_0
// 2096   {
// 2097     uint8 id = MT_ZDO_CID_TO_AREQ_ID(pData->clusterId);
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        ORL     A,#0x80
        MOV     ?V0 + 2,A
// 2098 
// 2099     pBuf[0] = LO_UINT16(pData->srcAddr.addr.shortAddr);
        MOV     A,R6
        ADD     A,#0x6
        LCALL   ?Subroutine45 & 0xFFFF
// 2100     pBuf[1] = HI_UINT16(pData->srcAddr.addr.shortAddr);
??CrossCallReturnLabel_231:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    @DPTR,A
// 2101 
// 2102     /* copy ZDO data, skipping one-byte sequence number */
// 2103     osal_memcpy(pBuf+2, (pData->cmd.Data + 1), pData->cmd.DataLength-1);
        ; Setup parameters for call to function osal_memcpy
        MOV     A,R6
        ADD     A,#0x22
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_225:
        ADD     A,#0x1
        MOV     ?V0 + 8,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V0 + 9,A
        MOV     ?V0 + 10,#0x0
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     R5,A
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_111:
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 2104 
// 2105     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO), id, len, pBuf);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     R3,?V0 + 4
        MOV     R2,?V0 + 2
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2106     osal_mem_free(pBuf);
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_mem_free?relay
          CFI EndBlock cfiBlock667
// 2107   }
??MT_ZdoDirectCB_0:
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 2108 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock668 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xb
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock668

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond669 Using cfiCommon0
          CFI Function MT_ZdoMgmtLeaveRequest
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function MT_ZdoDirectCB
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+0
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function MT_ZdoSrcRtgCB
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond671) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond671) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+0
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker672 Using cfiCommon1
          CFI (cfiPicker672) NoFunction
          CFI (cfiPicker672) Picker
        LCALL   ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_165:
        RET
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiPicker672
// 2109 
// 2110 /***************************************************************************************************
// 2111  * @fn     MT_ZdoHandleExceptions()
// 2112  *
// 2113  * @brief  Handles all messages that are an exception to the generic MT ZDO Response.
// 2114  *
// 2115  * @param  pData - Incoming AF frame.
// 2116  *
// 2117  * @return  TRUE if handled by this function, FALSE if not
// 2118  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2119 uint8 MT_ZdoHandleExceptions( afIncomingMSGPacket_t *pData, zdoIncomingMsg_t *inMsg )
MT_ZdoHandleExceptions:
          CFI Block cfiBlock673 Using cfiCommon0
          CFI Function MT_ZdoHandleExceptions
        CODE
// 2120 {
        FUNCALL MT_ZdoHandleExceptions, ZDO_ParseAddrRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoHandleExceptions, MT_ZdoAddrRspCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoHandleExceptions, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoHandleExceptions, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoHandleExceptions, MT_ZdoEndDevAnnceCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2121   uint8 ret = TRUE;
        MOV     ?V0 + 2,#0x1
// 2122   ZDO_NwkIEEEAddrResp_t *nwkRsp;
// 2123   ZDO_DeviceAnnce_t devAnnce;
// 2124   uint8 doDefault = FALSE;
// 2125 
// 2126   switch ( inMsg->clusterID )
        MOV     A,R6
        ADD     A,#0xc
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?US_SWITCH_SPARSE
`?<Jumptable for MT_ZdoHandleExceptions>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        1
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        32768
        DATA
        DATA16
        DATA
        DATA16
        DW        32769
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??MT_ZdoHandleExceptions_0
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        2
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        19
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??MT_ZdoHandleExceptions_1
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        32772
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??MT_ZdoHandleExceptions_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??MT_ZdoHandleExceptions_3
        CODE
// 2127   {
// 2128     case NWK_addr_rsp:
// 2129     case IEEE_addr_rsp:
// 2130       if ( NULL != (nwkRsp = ZDO_ParseAddrRsp(inMsg)) )
??MT_ZdoHandleExceptions_0:
        ; Setup parameters for call to function ZDO_ParseAddrRsp
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ZDO_ParseAddrRsp?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R6,?V0 + 4
        MOV     R7,?V0 + 5
        MOV     A,R6
        ORL     A,R7
        JZ      ??MT_ZdoHandleExceptions_4
// 2131       {
// 2132         if ( nwkRsp->status == ZDO_SUCCESS )
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        JNZ     ??MT_ZdoHandleExceptions_5
// 2133         {
// 2134           MT_ZdoAddrRspCB( nwkRsp, inMsg->clusterID );
        ; Setup parameters for call to function MT_ZdoAddrRspCB
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine118_0 & 0xFFFF
// 2135         }
??CrossCallReturnLabel_211:
        MOV     R5,A
        LCALL   ??MT_ZdoAddrRspCB?relay
// 2136         osal_mem_free( nwkRsp );
??MT_ZdoHandleExceptions_5:
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_mem_free?relay
        SJMP    ??MT_ZdoHandleExceptions_4
// 2137       }
// 2138       break;
// 2139 
// 2140     case Device_annce:
// 2141       ZDO_ParseDeviceAnnce( inMsg, &devAnnce );
??MT_ZdoHandleExceptions_1:
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ZDO_ParseDeviceAnnce?relay
// 2142       MT_ZdoEndDevAnnceCB( &devAnnce, inMsg->srcAddr.addr.shortAddr );
        ; Setup parameters for call to function MT_ZdoEndDevAnnceCB
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV     R5,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??MT_ZdoEndDevAnnceCB?relay
// 2143       break;
        SJMP    ??MT_ZdoHandleExceptions_4
// 2144 
// 2145     case Simple_Desc_rsp:
// 2146       if ( pData->cmd.DataLength > 5 )
??MT_ZdoHandleExceptions_2:
        MOV     A,R2
        ADD     A,#0x20
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#0x6
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        JNC     ??MT_ZdoHandleExceptions_3
// 2147       {
// 2148         ret = FALSE;
// 2149       }
// 2150       else
// 2151       {
// 2152         doDefault = TRUE;
// 2153       }
// 2154       break;
// 2155 
// 2156     default:
// 2157       ret = FALSE;
// 2158       break;
// 2159   }
// 2160 
// 2161   if ( doDefault )
// 2162   {
// 2163     ret = FALSE;
        MOV     ?V0 + 2,#0x0
// 2164     pData->clusterId = MtZdoDef_rsp;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x40
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 2165     pData->cmd.DataLength = 2;
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x2
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        SJMP    ??MT_ZdoHandleExceptions_4
// 2166   }
??MT_ZdoHandleExceptions_3:
        MOV     ?V0 + 2,#0x0
// 2167 
// 2168   return ( ret );
??MT_ZdoHandleExceptions_4:
        MOV     R1,?V0 + 2
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock673
// 2169 }
// 2170 
// 2171 /***************************************************************************************************
// 2172  * @fn      MT_ZdoAddrRspCB
// 2173  *
// 2174  * @brief   Handle IEEE or nwk address response OSAL message from ZDO.
// 2175  *
// 2176  * @param   pMsg  - Message data
// 2177  *
// 2178  * @return  void
// 2179  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2180 void MT_ZdoAddrRspCB( ZDO_NwkIEEEAddrResp_t *pMsg, uint16 clusterID )
MT_ZdoAddrRspCB:
          CFI Block cfiBlock674 Using cfiCommon0
          CFI Function MT_ZdoAddrRspCB
        CODE
// 2181 {
        FUNCALL MT_ZdoAddrRspCB, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoAddrRspCB, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoAddrRspCB, MT_Word2Buf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoAddrRspCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoAddrRspCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
// 2182   uint8   listLen, len, *pBuf;
// 2183 
// 2184   /* both ZDO_NwkAddrResp_t and ZDO_IEEEAddrResp_t must be the same */
// 2185 
// 2186   /* get length, sanity check length */
// 2187   listLen = pMsg->numAssocDevs;
        MOV     A,R2
        ADD     A,#0xb
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_221:
        MOV     ?V0 + 4,A
// 2188 
// 2189   /* calculate msg length */
// 2190   len = MT_ZDO_ADDR_RSP_LEN + (listLen * sizeof(uint16));
        CLR     C
        RLC     A
        ADD     A,#0xd
        MOV     ?V0 + 5,A
// 2191 
// 2192   /* get buffer */
// 2193   if (NULL != (pBuf = (uint8 *)osal_mem_alloc(len)))
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        JNZ     $+5
        LJMP    ??MT_ZdoAddrRspCB_0 & 0xFFFF
// 2194   {
// 2195     uint8 id = MT_ZDO_CID_TO_AREQ_ID(clusterID);
// 2196     uint8 *pTmp = pBuf;
        MOV     R6,?V0 + 6
        MOV     R7,?V0 + 7
// 2197 
// 2198     *pTmp++ = pMsg->status;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2199 
// 2200     osal_cpyExtAddr(pTmp, pMsg->extAddr);
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V0 + 0
        ADD     A,#0x3
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 2201     pTmp += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 2202 
// 2203     *pTmp++ = LO_UINT16(pMsg->nwkAddr);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ??Subroutine130_0 & 0xFFFF
// 2204     *pTmp++ = HI_UINT16(pMsg->nwkAddr);
??CrossCallReturnLabel_254:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine17 & 0xFFFF
// 2205 
// 2206     *pTmp++ = pMsg->startIndex;
??CrossCallReturnLabel_256:
        MOV     A,?V0 + 0
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_222:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
// 2207     *pTmp++ = listLen;
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
// 2208 
// 2209     MT_Word2Buf(pTmp, pMsg->devList, listLen);
        ; Setup parameters for call to function MT_Word2Buf
        MOV     R1,A
        MOV     A,?V0 + 0
        ADD     A,#0xd
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R5,A
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??MT_Word2Buf?relay
// 2210 
// 2211     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO), id, len, pBuf);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        MOV     R3,?V0 + 5
        MOV     A,?V0 + 2
        ORL     A,#0x80
        MOV     R2,A
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2212     osal_mem_free(pBuf);
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 6
        MOV     R3,?V0 + 7
        LCALL   ??osal_mem_free?relay
// 2213   }
// 2214 }
??MT_ZdoAddrRspCB_0:
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock674
// 2215 
// 2216 /***************************************************************************************************
// 2217  * @fn      MT_ZdoEndDevAnnceCB
// 2218  *
// 2219  * @brief   Handle end device announce OSAL message from ZDO.
// 2220  *
// 2221  * @param   pMsg  - Message data
// 2222  *
// 2223  * @return  void
// 2224  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2225 void MT_ZdoEndDevAnnceCB( ZDO_DeviceAnnce_t *pMsg, uint16 srcAddr )
MT_ZdoEndDevAnnceCB:
          CFI Block cfiBlock675 Using cfiCommon0
          CFI Function MT_ZdoEndDevAnnceCB
        CODE
// 2226 {
        FUNCALL MT_ZdoEndDevAnnceCB, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoEndDevAnnceCB, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoEndDevAnnceCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoEndDevAnnceCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
// 2227   uint8 *pBuf;
// 2228 
// 2229   if (NULL != (pBuf = (uint8 *)osal_mem_alloc(MT_ZDO_END_DEVICE_ANNCE_IND_LEN)))
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0xd
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??MT_ZdoEndDevAnnceCB_0
// 2230   {
// 2231     uint8 *pTmp = pBuf;
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
// 2232 
// 2233     *pTmp++ = LO_UINT16(srcAddr);
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
// 2234     *pTmp++ = HI_UINT16(srcAddr);
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2235 
// 2236     *pTmp++ = LO_UINT16(pMsg->nwkAddr);
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine130_0 & 0xFFFF
// 2237     *pTmp++ = HI_UINT16(pMsg->nwkAddr);
??CrossCallReturnLabel_255:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ?Subroutine17 & 0xFFFF
// 2238 
// 2239     osal_cpyExtAddr(pTmp, pMsg->extAddr);
??CrossCallReturnLabel_257:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V0 + 2
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 2240     pTmp += Z_EXTADDR_LEN;
// 2241 
// 2242     *pTmp = pMsg->capabilities;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 2243 
// 2244     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2245                                          MT_ZDO_END_DEVICE_ANNCE_IND,
// 2246                                          MT_ZDO_END_DEVICE_ANNCE_IND_LEN, pBuf);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     R3,#0xd
        MOV     R2,#-0x3f
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2247     osal_mem_free(pBuf);
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_mem_free?relay
// 2248   }
// 2249 }
??MT_ZdoEndDevAnnceCB_0:
        LJMP    ??Subroutine121_0 & 0xFFFF
          CFI EndBlock cfiBlock675

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond676 Using cfiCommon0
          CFI Function MT_ZdoAddrRspCB
          CFI Conditional ??CrossCallReturnLabel_256
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function MT_ZdoEndDevAnnceCB
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+0
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker678 Using cfiCommon1
          CFI (cfiPicker678) NoFunction
          CFI (cfiPicker678) Picker
        INC     DPTR
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiPicker678
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine130_0:
          CFI Block cfiCond679 Using cfiCommon0
          CFI Function MT_ZdoAddrRspCB
          CFI Conditional ??CrossCallReturnLabel_254
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function MT_ZdoEndDevAnnceCB
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+0
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function MT_ZdoAddrRspCB
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+0
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function MT_ZdoEndDevAnnceCB
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+0
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker683 Using cfiCommon1
          CFI (cfiPicker683) NoFunction
          CFI (cfiPicker683) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiPicker683
// 2250 
// 2251 /***************************************************************************************************
// 2252  * @fn      MT_ZdoSrcRtgCB
// 2253  *
// 2254  * @brief   Handle Src Route from ZDO.
// 2255  *
// 2256  * @param   pStr  - pointer to the data structure for the src route
// 2257  *
// 2258  * @return  void*
// 2259  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2260 void* MT_ZdoSrcRtgCB( void *pStr )
MT_ZdoSrcRtgCB:
          CFI Block cfiBlock684 Using cfiCommon0
          CFI Function MT_ZdoSrcRtgCB
        CODE
// 2261 {
        FUNCALL MT_ZdoSrcRtgCB, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoSrcRtgCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoSrcRtgCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2262   uint8 len, *pBuf;
// 2263   zdoSrcRtg_t *pSrcRtg = pStr;
// 2264 
// 2265   // srcAddr (2) + relayCnt (1) + relayList( relaycnt * 2 )
// 2266   len = 2 + 1 + pSrcRtg->relayCnt * sizeof(uint16);
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V0 + 0,A
        MOV     A,R7
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_79:
        MOVX    A,@DPTR
        CLR     C
        RLC     A
        ADD     A,#0x3
        MOV     ?V0 + 4,A
// 2267 
// 2268   if (NULL != (pBuf = (uint8 *)osal_mem_alloc(len)))
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??MT_ZdoSrcRtgCB_0
// 2269   {
// 2270     uint8 idx, *pTmp = pBuf;
        MOV     R0,?V0 + 2
        MOV     R1,?V0 + 3
// 2271     uint16 *pRelay;
// 2272 
// 2273     // Packet payload
// 2274     *pTmp++ = LO_UINT16(pSrcRtg->srcAddr);
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine40 & 0xFFFF
// 2275     *pTmp++ = HI_UINT16(pSrcRtg->srcAddr);
??CrossCallReturnLabel_52:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine27 & 0xFFFF
// 2276     *pTmp++ = pSrcRtg->relayCnt;
??CrossCallReturnLabel_259:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine131_0 & 0xFFFF
// 2277 
// 2278     // Relay List
// 2279     if( ( pRelay = pSrcRtg->pRelayList ) != NULL )
??CrossCallReturnLabel_258:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_148:
        MOV     R3,A
        MOV     A,R2
        ORL     A,R3
        JZ      ??MT_ZdoSrcRtgCB_1
// 2280     {
// 2281       for( idx = 0; idx < pSrcRtg->relayCnt; idx ++ )
        MOV     R6,#0x0
        SJMP    ??MT_ZdoSrcRtgCB_2
// 2282       {
// 2283         *pTmp++ = LO_UINT16(*pRelay);
??MT_ZdoSrcRtgCB_3:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine40 & 0xFFFF
// 2284         *pTmp++ = HI_UINT16(*pRelay);
??CrossCallReturnLabel_53:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine27 & 0xFFFF
// 2285         pRelay++;
??CrossCallReturnLabel_260:
        LCALL   ?Subroutine67 & 0xFFFF
// 2286       }
??CrossCallReturnLabel_112:
        INC     R6
??MT_ZdoSrcRtgCB_2:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R6
        CLR     C
        SUBB    A,R4
        JC      ??MT_ZdoSrcRtgCB_3
// 2287     }
// 2288     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2289                                          MT_ZDO_SRC_RTG_IND, len, pBuf);
??MT_ZdoSrcRtgCB_1:
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R3,?V0 + 4
        MOV     R2,#-0x3c
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2290     osal_mem_free(pBuf);
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??osal_mem_free?relay
// 2291   }
// 2292 
// 2293   return NULL;
??MT_ZdoSrcRtgCB_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??Subroutine121_0 & 0xFFFF
          CFI EndBlock cfiBlock684
// 2294 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond685 Using cfiCommon0
          CFI Function MT_ZdoSendData
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function MT_ZdoSrcRtgCB
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+0
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker687 Using cfiCommon1
          CFI (cfiPicker687) NoFunction
          CFI (cfiPicker687) Picker
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     DPL,?V0 + 0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiPicker687

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond688 Using cfiCommon0
          CFI Function MT_ZdoSrcRtgCB
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function MT_ZdoSrcRtgCB
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+0
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker690 Using cfiCommon1
          CFI (cfiPicker690) NoFunction
          CFI (cfiPicker690) Picker
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        RET
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiPicker690

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond691 Using cfiCommon0
          CFI Function MT_ZdoSrcRtgCB
          CFI Conditional ??CrossCallReturnLabel_259
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function MT_ZdoSrcRtgCB
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond692) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond692) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond692) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond692) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond692) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond692) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond692) CFA_SP SP+0
          CFI (cfiCond692) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker693 Using cfiCommon1
          CFI (cfiPicker693) NoFunction
          CFI (cfiPicker693) Picker
        INC     DPTR
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiPicker693
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine131_0:
          CFI Block cfiCond694 Using cfiCommon0
          CFI Function MT_ZdoSrcRtgCB
          CFI Conditional ??CrossCallReturnLabel_258
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function MT_ZdoSrcRtgCB
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond695) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+0
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function MT_ZdoSrcRtgCB
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+0
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker697 Using cfiCommon1
          CFI (cfiPicker697) NoFunction
          CFI (cfiPicker697) Picker
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        RET
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiPicker697
// 2295 
// 2296 /***************************************************************************************************
// 2297  * @fn          MT_ZdoConcentratorIndCB
// 2298  *
// 2299  * @brief       Handle the ZDO Concentrator Indication callback from the ZDO.
// 2300  *
// 2301  * @param       pStr - pointer to a parameter and a structure of parameters
// 2302  *
// 2303  * @return      NULL
// 2304  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2305 static void *MT_ZdoConcentratorIndCB(void *pStr)
MT_ZdoConcentratorIndCB:
          CFI Block cfiBlock698 Using cfiCommon0
          CFI Function MT_ZdoConcentratorIndCB
        CODE
// 2306 {
        FUNCALL MT_ZdoConcentratorIndCB, osal_memcpy
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoConcentratorIndCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
// 2307   uint8 buf[MT_ZDO_CONCENTRATOR_IND_LEN], *pTmp = buf;
// 2308   zdoConcentratorInd_t *pInd = (zdoConcentratorInd_t *)pStr;
// 2309 
// 2310   *pTmp++ = LO_UINT16(pInd->nwkAddr);
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine48 & 0xFFFF
// 2311   *pTmp++ = HI_UINT16(pInd->nwkAddr);
??CrossCallReturnLabel_67:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine88 & 0xFFFF
// 2312   pTmp = osal_memcpy(pTmp, pInd->extAddr, Z_EXTADDR_LEN);
// 2313   *pTmp = pInd->pktCost;
??CrossCallReturnLabel_139:
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     DPL,R2
        MOV     DPH,R3
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine59 & 0xFFFF
// 2314 
// 2315   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2316                                     MT_ZDO_CONCENTRATOR_IND_CB, MT_ZDO_CONCENTRATOR_IND_LEN, buf);
??CrossCallReturnLabel_83:
        MOV     R3,#0xb
        MOV     R2,#-0x38
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2317   return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     A,#0xb
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock698
// 2318 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond699 Using cfiCommon0
          CFI Function MT_ZdoJoinCnfCB
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function MT_ZdoConcentratorIndCB
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+0
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function MT_ZdoLeaveInd
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+0
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker702 Using cfiCommon1
          CFI (cfiPicker702) NoFunction
          CFI (cfiPicker702) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        RET
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiPicker702

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond703 Using cfiCommon0
          CFI Function MT_ZdoSendData
          CFI Conditional ??CrossCallReturnLabel_66
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function MT_ZdoConcentratorIndCB
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+0
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker705 Using cfiCommon1
          CFI (cfiPicker705) NoFunction
          CFI (cfiPicker705) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_123:
        RET
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiPicker705

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond706 Using cfiCommon0
          CFI Function MT_ZdoMgmtLqiRequest
          CFI Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function MT_ZdoMgmtRtgRequest
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_7
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+0
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function MT_ZdoMgmtBindRequest
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_8
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+0
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function MT_ZdoSendData
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_66
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+0
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function MT_ZdoConcentratorIndCB
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_67
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+0
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function MT_ZdoJoinCnfCB
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_44
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+0
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function MT_ZdoLeaveInd
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_45
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+0
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker713 Using cfiCommon1
          CFI (cfiPicker713) NoFunction
          CFI (cfiPicker713) Picker
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiPicker713
// 2319 
// 2320 /***************************************************************************************************
// 2321  * @fn          MT_ZdoLeaveInd
// 2322  *
// 2323  * @brief       Handle the ZDO Leave Indication callback from the ZDO.
// 2324  *
// 2325  * @param       vPtr - Pointer to the received Leave Indication message.
// 2326  *
// 2327  * @return      NULL
// 2328  ***************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2329 static void *MT_ZdoLeaveInd(void *vPtr)
MT_ZdoLeaveInd:
          CFI Block cfiBlock714 Using cfiCommon0
          CFI Function MT_ZdoLeaveInd
        CODE
// 2330 {
        FUNCALL MT_ZdoLeaveInd, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoLeaveInd, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2331   NLME_LeaveInd_t *pInd = (NLME_LeaveInd_t *)vPtr;
// 2332   uint8 buf[sizeof(NLME_LeaveInd_t)];
// 2333 
// 2334   buf[0] = LO_UINT16(pInd->srcAddr);
        LCALL   ?Subroutine36 & 0xFFFF
// 2335   buf[1] = HI_UINT16(pInd->srcAddr);
??CrossCallReturnLabel_45:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2336   (void)osal_memcpy(buf+2, pInd->extAddr, Z_EXTADDR_LEN);
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R2
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 2337   buf[2+Z_EXTADDR_LEN] = pInd->request;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2338   buf[3+Z_EXTADDR_LEN] = pInd->removeChildren;
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_228:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2339   buf[4+Z_EXTADDR_LEN] = pInd->rejoin;
        MOV     A,R6
        ADD     A,#0xc
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_226:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine59 & 0xFFFF
// 2340 
// 2341   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2342                                        MT_ZDO_LEAVE_IND, 5+Z_EXTADDR_LEN, buf);
??CrossCallReturnLabel_84:
        MOV     R3,#0xd
        MOV     R2,#-0x37
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2343   return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     A,#0xd
          CFI EndBlock cfiBlock714
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 2344 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock715 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock715
        REQUIRE ??Subroutine132_0
        ; // Fall through to label ??Subroutine132_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine132_0:
          CFI Block cfiBlock716 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock716

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond717 Using cfiCommon0
          CFI Function MT_ZdoJoinCnfCB
          CFI Conditional ??CrossCallReturnLabel_44
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function MT_ZdoLeaveInd
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+0
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker719 Using cfiCommon1
          CFI (cfiPicker719) NoFunction
          CFI (cfiPicker719) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_122:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiPicker719
// 2345 #endif // MT_ZDO_CB_FUNC
// 2346 
// 2347 /***************************************************************************************************
// 2348  * @fn      MT_ZdoSendMsgCB
// 2349  *
// 2350  * @brief   Proxy the ZDO_SendMsgCBs one message at a time.
// 2351  *
// 2352  * @param   pMsg  - Message data
// 2353  *
// 2354  * @return  void
// 2355  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2356 void MT_ZdoSendMsgCB(zdoIncomingMsg_t *pMsg)
MT_ZdoSendMsgCB:
          CFI Block cfiBlock720 Using cfiCommon0
          CFI Function MT_ZdoSendMsgCB
        CODE
// 2357 {
        FUNCALL MT_ZdoSendMsgCB, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoSendMsgCB, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoSendMsgCB, MT_BuildAndSendZToolResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MT_ZdoSendMsgCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x13
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
        ; Saved register size: 19
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 2358   uint8 len = pMsg->asduLen + 9;
        MOV     A,R2
        ADD     A,#0x10
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,#0x9
        MOV     ?V0 + 4,A
// 2359   uint8 *pBuf = (uint8 *)osal_mem_alloc(len);
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R6,?V0 + 6
        MOV     R7,?V0 + 7
// 2360 
// 2361   if (pBuf != NULL)
        MOV     A,R6
        ORL     A,R7
        JZ      ??MT_ZdoSendMsgCB_0
// 2362   {
// 2363     uint8 *pTmp = pBuf;
// 2364 
// 2365     // Assuming exclusive use of network short addresses.
// 2366     *pTmp++ = LO_UINT16(pMsg->srcAddr.addr.shortAddr);
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     R0,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_229:
        INC     DPTR
        MOV     R2,DPL
        LCALL   ??Subroutine133_0 & 0xFFFF
// 2367     *pTmp++ = HI_UINT16(pMsg->srcAddr.addr.shortAddr);
// 2368     *pTmp++ = pMsg->wasBroadcast;
??CrossCallReturnLabel_263:
        ADD     A,#0xb
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_250:
        LCALL   ??Subroutine134_0 & 0xFFFF
// 2369     *pTmp++ = LO_UINT16(pMsg->clusterID);
??CrossCallReturnLabel_264:
        ADD     A,#0xc
        LCALL   ?Subroutine12 & 0xFFFF
// 2370     *pTmp++ = HI_UINT16(pMsg->clusterID);
// 2371     *pTmp++ = pMsg->SecurityUse;
??CrossCallReturnLabel_261:
        ADD     A,#0xe
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_251:
        LCALL   ??Subroutine134_0 & 0xFFFF
// 2372     *pTmp++ = pMsg->TransSeq;
??CrossCallReturnLabel_265:
        ADD     A,#0xf
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_252:
        LCALL   ??Subroutine134_0 & 0xFFFF
// 2373     // Skipping asduLen since it can be deduced from the RPC packet length.
// 2374     *pTmp++ = LO_UINT16(pMsg->macDestAddr);
??CrossCallReturnLabel_266:
        ADD     A,#0x11
        LCALL   ?Subroutine12 & 0xFFFF
// 2375     *pTmp++ = HI_UINT16(pMsg->macDestAddr);
// 2376     (void)osal_memcpy(pTmp, pMsg->asdu, pMsg->asduLen);
??CrossCallReturnLabel_262:
        ADD     A,#0x13
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_223:
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 8,?V0 + 0
        MOV     ?V0 + 9,A
        MOV     ?V0 + 10,#0x0
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 2377 
// 2378     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2379                                          MT_ZDO_MSG_CB_INCOMING, len, pBuf);
        ; Setup parameters for call to function MT_BuildAndSendZToolResponse
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R3,?V0 + 4
        MOV     R2,#-0x1
        MOV     R1,#0x45
        LCALL   ??MT_BuildAndSendZToolResponse?relay
// 2380 
// 2381     osal_mem_free(pBuf);
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_mem_free?relay
// 2382   }
// 2383 }
??MT_ZdoSendMsgCB_0:
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock720

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond721 Using cfiCommon0
          CFI Function MT_ZdoSendMsgCB
          CFI Conditional ??CrossCallReturnLabel_261
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function MT_ZdoSendMsgCB
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond722) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_SP SP+0
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker723 Using cfiCommon1
          CFI (cfiPicker723) NoFunction
          CFI (cfiPicker723) Picker
        MOV     R0,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_232:
        INC     DPTR
        INC     R2
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiPicker723
        REQUIRE ??Subroutine133_0
        ; // Fall through to label ??Subroutine133_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine133_0:
          CFI Block cfiCond724 Using cfiCommon0
          CFI Function MT_ZdoSendMsgCB
          CFI Conditional ??CrossCallReturnLabel_263
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function MT_ZdoSendMsgCB
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+0
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function MT_ZdoSendMsgCB
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+0
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker727 Using cfiCommon1
          CFI (cfiPicker727) NoFunction
          CFI (cfiPicker727) Picker
        MOV     R3,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiPicker727
        REQUIRE ??Subroutine134_0
        ; // Fall through to label ??Subroutine134_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine134_0:
          CFI Block cfiCond728 Using cfiCommon0
          CFI Function MT_ZdoSendMsgCB
          CFI Conditional ??CrossCallReturnLabel_264
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function MT_ZdoSendMsgCB
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+0
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function MT_ZdoSendMsgCB
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond730) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond730) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond730) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond730) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_SP SP+0
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function MT_ZdoSendMsgCB
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond731) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond731) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+0
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function MT_ZdoSendMsgCB
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond732) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond732) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond732) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond732) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond732) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond732) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+0
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function MT_ZdoSendMsgCB
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+0
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker734 Using cfiCommon1
          CFI (cfiPicker734) NoFunction
          CFI (cfiPicker734) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_268:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0 + 0
        RET
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiPicker734

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond735 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_244
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function MT_ZdoBeaconIndCB
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_245
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+0
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function MT_ZdoBeaconIndCB
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_246
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+0
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function MT_ZdoBeaconIndCB
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_247
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+0
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function MT_ZdoSendMsgCB
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_261
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+0
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function MT_ZdoSendMsgCB
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_262
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+0
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function MT_ZdoSendMsgCB
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_263
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+0
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function MT_ZdoSendMsgCB
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_264
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+0
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function MT_ZdoSendMsgCB
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_265
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+0
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function MT_ZdoSendMsgCB
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_266
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+0
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker745 Using cfiCommon1
          CFI (cfiPicker745) NoFunction
          CFI (cfiPicker745) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_270:
        RET
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiPicker745

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond746 Using cfiCommon0
          CFI Function MT_ZdoBeaconIndCB
          CFI Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function MT_ZdoBeaconIndCB
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_39
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+0
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function MT_ZdoBeaconIndCB
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_20
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+0
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function MT_ZdoBeaconIndCB
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_21
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+0
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function MT_ZdoBeaconIndCB
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_18
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+0
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function MT_ZdoBeaconIndCB
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_19
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+0
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function MT_ZdoBeaconIndCB
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_9
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+0
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function MT_ZdoBeaconIndCB
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_10
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+0
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function MT_ZdoBeaconIndCB
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_244
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+0
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function MT_ZdoBeaconIndCB
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_245
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+0
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function MT_ZdoBeaconIndCB
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_246
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+0
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function MT_ZdoBeaconIndCB
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_247
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+0
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function MT_ZdoSendMsgCB
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_261
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond758) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond758) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+0
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function MT_ZdoSendMsgCB
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_262
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond759) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+0
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function MT_ZdoSendMsgCB
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_263
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+0
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function MT_ZdoSendMsgCB
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_264
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+0
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function MT_ZdoSendMsgCB
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_265
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+0
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function MT_ZdoSendMsgCB
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_266
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond763) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond763) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond763) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond763) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+0
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker764 Using cfiCommon1
          CFI (cfiPicker764) NoFunction
          CFI (cfiPicker764) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        INC     R2
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiPicker764

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoInit?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoCommandProcessing?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoCommandProcessing

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoNWKAddressRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoNWKAddressRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoIEEEAddrRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoIEEEAddrRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoNodeDescRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoNodeDescRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoPowerDescRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoPowerDescRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoSimpleDescRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoSimpleDescRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoActiveEpRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoActiveEpRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMatchDescRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMatchDescRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoComplexDescRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoComplexDescRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoUserDescRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoUserDescRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoEndDevAnnce?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoEndDevAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoUserDescSet?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoServiceDiscRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoServiceDiscRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoEndDeviceTimeoutRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoEndDeviceTimeoutRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoEndDevBindRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoEndDevBindRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoBindRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoBindRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoUnbindRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoUnbindRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMgmtNwkDiscRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMgmtNwkDiscRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMgmtLqiRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMgmtLqiRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMgmtRtgRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMgmtRtgRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMgmtBindRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMgmtBindRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMgmtLeaveRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMgmtLeaveRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMgmtDirectJoinRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMgmtDirectJoinRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMgmtPermitJoinRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMgmtPermitJoinRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoMgmtNwkUpdateRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoMgmtNwkUpdateRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoSendData?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoSendData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoNwkAddrOfInterestReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoNwkAddrOfInterestReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoStartupFromApp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoStartupFromApp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoNetworkDiscoveryReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoNetworkDiscoveryReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoJoinReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoNwkDiscoveryCnfCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoNwkDiscoveryCnfCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoBeaconIndCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoBeaconIndCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoJoinCnfCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoJoinCnfCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoRegisterForZDOMsg?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoRegisterForZDOMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoRemoveRegisteredCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoRemoveRegisteredCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoStateChangeCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoStateChangeCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoDirectCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoDirectCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoHandleExceptions?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoHandleExceptions

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoAddrRspCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoAddrRspCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoEndDevAnnceCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoEndDevAnnceCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoSrcRtgCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoSrcRtgCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoConcentratorIndCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoConcentratorIndCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoLeaveInd?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoLeaveInd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MT_ZdoSendMsgCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    MT_ZdoSendMsgCB

        END
// 2384 
// 2385 #if defined ( MT_ZDO_EXTENSIONS )
// 2386 /***************************************************************************************************
// 2387  * @fn          MT_ZdoSecAddLinkKey
// 2388  *
// 2389  * @brief       Handle the ZDO Security Add Link Key extension message
// 2390  *
// 2391  * @param       pBuf - Pointer to the received message data.
// 2392  *
// 2393  * @return      NULL
// 2394  ***************************************************************************************************/
// 2395 static void MT_ZdoSecAddLinkKey( uint8 *pBuf )
// 2396 {
// 2397   uint16 shortAddr;
// 2398   uint8 *pExtAddr;
// 2399   uint8 status;
// 2400 
// 2401   shortAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
// 2402   pBuf += 2;
// 2403   pExtAddr = pBuf;
// 2404   pBuf += Z_EXTADDR_LEN;
// 2405 
// 2406   status = ZDSecMgrAddLinkKey( shortAddr, pExtAddr, pBuf );
// 2407 
// 2408   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2409                                        MT_ZDO_SEC_ADD_LINK_KEY, 1, &status );
// 2410 }
// 2411 
// 2412 /***************************************************************************************************
// 2413  * @fn          MT_ZdoSecEntryLookupExt
// 2414  *
// 2415  * @brief       Handle the ZDO Security Entry Lookup Extended extension message
// 2416  *
// 2417  * @param       pBuf - Pointer to the received message data.
// 2418  *
// 2419  * @return      NULL
// 2420  ***************************************************************************************************/
// 2421 static void MT_ZdoSecEntryLookupExt( uint8 *pBuf )
// 2422 {
// 2423   ZDSecMgrEntry_t *pEntry = NULL;
// 2424   uint8 buf[6] = {0};
// 2425 
// 2426   // lookup entry index for specified EXT address
// 2427   buf[0] = ZDSecMgrEntryLookupExt( pBuf, &pEntry );
// 2428   if ( pEntry )
// 2429   {
// 2430     buf[1] = LO_UINT16( pEntry->ami );
// 2431     buf[2] = HI_UINT16( pEntry->ami );
// 2432     buf[3] = LO_UINT16( pEntry->keyNvId );
// 2433     buf[4] = HI_UINT16( pEntry->keyNvId );
// 2434     buf[5] = (uint8)pEntry->authenticateOption;
// 2435   }
// 2436 
// 2437   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2438                                        MT_ZDO_SEC_ENTRY_LOOKUP_EXT, 6, buf );
// 2439 }
// 2440 
// 2441 /***************************************************************************************************
// 2442  * @fn          MT_ZdoSecDeviceRemove
// 2443  *
// 2444  * @brief       Handle the ZDO Security Remove Device extension message
// 2445  *
// 2446  * @param       pBuf - Pointer to the received message data.
// 2447  *
// 2448  * @return      NULL
// 2449  ***************************************************************************************************/
// 2450 static void MT_ZdoSecDeviceRemove( uint8 *pBuf )
// 2451 {
// 2452   ZStatus_t status;
// 2453 
// 2454   // lookup entry index for specified EXT address
// 2455   status = ZDSecMgrDeviceRemoveByExtAddr( pBuf );
// 2456 
// 2457   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2458                                        MT_ZDO_SEC_DEVICE_REMOVE, 1, &status );
// 2459 }
// 2460 
// 2461 /***************************************************************************************************
// 2462  * @fn          MT_ZdoExtRouteDisc
// 2463  *
// 2464  * @brief       Handle the ZDO Route Discovery extension message
// 2465  *
// 2466  * @param       pBuf - Pointer to the received message data.
// 2467  *
// 2468  * @return      NULL
// 2469  ***************************************************************************************************/
// 2470 static void MT_ZdoExtRouteDisc( uint8 *pBuf )
// 2471 {
// 2472   ZStatus_t status;
// 2473   uint16 dstAddr;
// 2474 
// 2475   dstAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
// 2476 
// 2477   // lookup entry index for specified EXT address
// 2478   status = NLME_RouteDiscoveryRequest( dstAddr, pBuf[2], pBuf[3] );
// 2479 
// 2480 
// 2481   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2482                                        MT_ZDO_EXT_ROUTE_DISC, 1, &status );
// 2483 }
// 2484 
// 2485 /***************************************************************************************************
// 2486  * @fn          MT_ZdoExtRouteCheck
// 2487  *
// 2488  * @brief       Handle the ZDO Route Check extension message
// 2489  *
// 2490  * @param       pBuf - Pointer to the received message data.
// 2491  *
// 2492  * @return      NULL
// 2493  ***************************************************************************************************/
// 2494 static void MT_ZdoExtRouteCheck( uint8 *pBuf )
// 2495 {
// 2496   ZStatus_t status;
// 2497   uint16 dstAddr;
// 2498 
// 2499   dstAddr = BUILD_UINT16( pBuf[0], pBuf[1] );
// 2500 
// 2501   // lookup entry index for specified EXT address
// 2502   status = RTG_CheckRtStatus( dstAddr, pBuf[2], pBuf[3] );
// 2503 
// 2504   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2505                                        MT_ZDO_EXT_ROUTE_CHECK, 1, &status );
// 2506 }
// 2507 
// 2508 /***************************************************************************************************
// 2509  * @fn          MT_ZdoExtRemoveGroup
// 2510  *
// 2511  * @brief       Handle the ZDO extension Remove Group message
// 2512  *
// 2513  * @param       pBuf - Pointer to the received message data.
// 2514  *
// 2515  * @return      NULL
// 2516  ***************************************************************************************************/
// 2517 static void MT_ZdoExtRemoveGroup( uint8 *pBuf )
// 2518 {
// 2519   ZStatus_t status;
// 2520   uint8 endpoint;
// 2521   uint16 groupID;
// 2522 
// 2523   endpoint = *pBuf++;
// 2524   groupID = BUILD_UINT16( pBuf[0], pBuf[1] );
// 2525 
// 2526   if ( aps_RemoveGroup( endpoint, groupID ) )
// 2527   {
// 2528     status = ZSuccess;
// 2529   }
// 2530   else
// 2531   {
// 2532     status = ZFailure;
// 2533   }
// 2534 
// 2535   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2536                                        MT_ZDO_EXT_REMOVE_GROUP, 1, &status );
// 2537 }
// 2538 
// 2539 /***************************************************************************************************
// 2540  * @fn          MT_ZdoExtRemoveAllGroup
// 2541  *
// 2542  * @brief       Handle the ZDO extension Remove All Groups message
// 2543  *
// 2544  * @param       pBuf - Pointer to the received message data.
// 2545  *
// 2546  * @return      NULL
// 2547  ***************************************************************************************************/
// 2548 static void MT_ZdoExtRemoveAllGroup( uint8 *pBuf )
// 2549 {
// 2550   ZStatus_t status = ZSuccess;
// 2551 
// 2552   aps_RemoveAllGroup( *pBuf );
// 2553 
// 2554   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2555                                        MT_ZDO_EXT_REMOVE_GROUP, 1, &status );
// 2556 }
// 2557 
// 2558 /***************************************************************************************************
// 2559  * @fn          MT_ZdoExtFindAllGroupsEndpoint
// 2560  *
// 2561  * @brief       Handle the ZDO extension Find All Groups for Endpoint message
// 2562  *
// 2563  * @param       pBuf - Pointer to the received message data.
// 2564  *
// 2565  * @return      NULL
// 2566  ***************************************************************************************************/
// 2567 static void MT_ZdoExtFindAllGroupsEndpoint( uint8 *pBuf )
// 2568 {
// 2569   uint16 groupList[ APS_MAX_GROUPS ];
// 2570   uint8 groups;
// 2571   uint8 msgLen;
// 2572   uint8 *pMsg;
// 2573 
// 2574   groups = aps_FindAllGroupsForEndpoint( *pBuf, groupList );
// 2575 
// 2576   msgLen = 1 + (2 * groups);
// 2577   pMsg = osal_mem_alloc( msgLen );
// 2578   if ( pMsg )
// 2579   {
// 2580     uint8 x;
// 2581     uint8 *pBuf = pMsg;
// 2582 
// 2583     *pBuf++ = groups;
// 2584     for ( x = 0; x < groups; x++ )
// 2585     {
// 2586       *pBuf++ = LO_UINT16( groupList[x] );
// 2587       *pBuf++ = HI_UINT16( groupList[x] );
// 2588     }
// 2589 
// 2590     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2591                                        MT_ZDO_EXT_FIND_ALL_GROUPS_ENDPOINT, msgLen, pMsg );
// 2592     osal_mem_free( pMsg );
// 2593   }
// 2594   else
// 2595   {
// 2596     groups = 0;
// 2597     MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2598                                        MT_ZDO_EXT_FIND_ALL_GROUPS_ENDPOINT, 1, &groups );
// 2599   }
// 2600 }
// 2601 
// 2602 /***************************************************************************************************
// 2603  * @fn          MT_ZdoExtFindGroup
// 2604  *
// 2605  * @brief       Handle the ZDO extension Find Group message
// 2606  *
// 2607  * @param       pBuf - Pointer to the received message data.
// 2608  *
// 2609  * @return      NULL
// 2610  ***************************************************************************************************/
// 2611 static void MT_ZdoExtFindGroup( uint8 *pBuf )
// 2612 {
// 2613   uint8 endpoint;
// 2614   uint16 groupID;
// 2615   aps_Group_t *pGroup;
// 2616   uint8 buf[1+2+APS_GROUP_NAME_LEN] = {0};
// 2617 
// 2618   endpoint = *pBuf++;
// 2619   groupID = BUILD_UINT16( pBuf[0], pBuf[1] );
// 2620 
// 2621   pGroup = aps_FindGroup( endpoint, groupID );
// 2622   if ( pGroup  )
// 2623   {
// 2624     buf[0] = ZSuccess;
// 2625     buf[1] = LO_UINT16( pGroup->ID );
// 2626     buf[2] = HI_UINT16( pGroup->ID );
// 2627     buf[3] = pGroup->name[0];
// 2628     osal_memcpy( &buf[4], &pGroup->name[1], buf[3] );
// 2629   }
// 2630   else
// 2631   {
// 2632     buf[0] = ZFailure;
// 2633   }
// 2634 
// 2635   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2636                       MT_ZDO_EXT_FIND_GROUP, (1+2+APS_GROUP_NAME_LEN), buf );
// 2637 }
// 2638 
// 2639 /***************************************************************************************************
// 2640  * @fn          MT_ZdoExtAddGroup
// 2641  *
// 2642  * @brief       Handle the ZDO extension Add Group message
// 2643  *
// 2644  * @param       pBuf - Pointer to the received message data.
// 2645  *
// 2646  * @return      NULL
// 2647  ***************************************************************************************************/
// 2648 static void MT_ZdoExtAddGroup( uint8 *pBuf )
// 2649 {
// 2650   ZStatus_t status = ZSuccess;
// 2651   aps_Group_t group = {0};
// 2652   uint8 endpoint;
// 2653 
// 2654   endpoint = *pBuf++;
// 2655   group.ID = BUILD_UINT16( pBuf[0], pBuf[1] );
// 2656   group.name[0] = pBuf[2];
// 2657   if ( group.name[0] > (APS_GROUP_NAME_LEN-1) )
// 2658   {
// 2659     group.name[0] = (APS_GROUP_NAME_LEN-1);
// 2660   }
// 2661 
// 2662   if (group.name[0] > 0 )
// 2663   {
// 2664     osal_memcpy( &group.name[1], &pBuf[3], group.name[0] );
// 2665   }
// 2666 
// 2667   status = aps_AddGroup( endpoint, &group );
// 2668 
// 2669   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2670                                        MT_ZDO_EXT_ADD_GROUP, 1, &status );
// 2671 }
// 2672 
// 2673 /***************************************************************************************************
// 2674  * @fn          MT_ZdoExtCountAllGroups
// 2675  *
// 2676  * @brief       Handle the ZDO extension Count All Groups message
// 2677  *
// 2678  * @param       pBuf - Pointer to the received message data.
// 2679  *
// 2680  * @return      NULL
// 2681  ***************************************************************************************************/
// 2682 static void MT_ZdoExtCountAllGroups( uint8 *pBuf )
// 2683 {
// 2684   ZStatus_t status = 0;
// 2685 
// 2686   status = (ZStatus_t)aps_CountAllGroups();
// 2687 
// 2688   MT_BuildAndSendZToolResponse(((uint8)MT_RPC_CMD_AREQ | (uint8)MT_RPC_SYS_ZDO),
// 2689                                        MT_ZDO_EXT_COUNT_ALL_GROUPS, 1, &status );
// 2690 }
// 2691 
// 2692 
// 2693 #endif // MT_ZDO_EXTENSIONS
// 2694 
// 2695 #endif   /*ZDO Command Processing in MT*/
// 2696 /***************************************************************************************************
// 2697 ***************************************************************************************************/
// 
// 6 179 bytes in segment BANKED_CODE
//   270 bytes in segment BANK_RELAYS
//     6 bytes in segment XDATA_Z
// 
// 6 449 bytes of CODE  memory
//     6 bytes of XDATA memory
//
//Errors: none
//Warnings: none
