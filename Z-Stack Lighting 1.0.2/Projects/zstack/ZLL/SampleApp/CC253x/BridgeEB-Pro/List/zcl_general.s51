///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            29/May/2014  14:59:41 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\Texas Instruments\Z-Stack Lighting             /
//                          1.0.2\Components\stack\zcl\zcl_general.c          /
//    Command line       =  -f "D:\Texas Instruments\Z-Stack Lighting         /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wRouter.cfg" (-DCPU32MHZ      /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f "D:\Texas        /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO     /
//                          -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f "D:\Texas              /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wZCL.cfg" "D:\Texas           /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Components\stack\zcl\zcl_general.c" -D      /
//                          FEATURE_GREEN_POWER -D SECURE=1 -D                /
//                          TC_LINKKEY_JOIN -D ZDSECMGR_TC_DEVICE_MAX=2 -D    /
//                          NV_RESTORE -D HOLD_AUTO_START -D INTER_PAN -D     /
//                          ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D             /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D MT_ZDO_CB_FUNC -D   /
//                          MT_UTIL_FUNC -D MT_ZDO_MGMT -D LCD_SUPPORTED -D   /
//                          HAL_LCD=FALSE -D HAL_KEY=FALSE -D ZCL_BASIC -D    /
//                          ZCL_READ -D ZCL_WRITE -D ZCL_IDENTIFY -D          /
//                          ZCL_ON_OFF -D ZCL_SCENES -D ZCL_GROUPS -D         /
//                          ZCL_LIGHT_LINK_ENHANCE -D ZCL_LEVEL_CTRL -D       /
//                          ZCL_COLOR_CTRL -D xMAX_CHANNELS_24GHZ=0x02108800  /
//                          -lC "D:\Texas Instruments\Z-Stack Lighting        /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Bridge /
//                          EB-Pro\List\" -lA "D:\Texas Instruments\Z-Stack   /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\BridgeEB-Pro\List\" --diag_suppress            /
//                          Pe001,Pa010 -o "D:\Texas Instruments\Z-Stack      /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\BridgeEB-Pro\Obj\" -e --debug --core=plain     /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I "D:\Texas                 /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\" -I   /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\Sou /
//                          rce\" -I "D:\Texas Instruments\Z-Stack Lighting   /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          Source\" -I "D:\Texas Instruments\Z-Stack         /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\..\..\..\HomeAutomation\Source\" -I "D:\Texas  /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\HomeAutomation\SampleLight\Source\" -I         /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\ZMain\TI2530DB\" -I "D:\Texas                  /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\hal\include\" -I "D:\Texas    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\hal\target\CC2530EB\" -I      /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\include\" -I "D:\Texas    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\high_level\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\" -I      /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\single_ch /
//                          ip\" -I "D:\Texas Instruments\Z-Stack Lighting    /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mt\" -I "D:\Texas             /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\osal\include\" -I "D:\Texas   /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\services\saddr\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\services\sdata\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\af\" -I "D:\Texas       /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\nwk\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sapi\" -I "D:\Texas     /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sec\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sys\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\zcl\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\zdo\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\zmac\" -I "D:\Texas           /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\zmac\f8w\" -Ohz               /
//                          --require_prototypes                              /
//    List file          =  D:\Texas Instruments\Z-Stack Lighting             /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Bridge /
//                          EB-Pro\List\zcl_general.s51                       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_general

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?US_DIV_MOD
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        FUNCTION ??zclGeneral_AddGroup?relay,0203H
        PUBLIC ??zclGeneral_AddScene?relay
        FUNCTION ??zclGeneral_AddScene?relay,0203H
        PUBLIC ??zclGeneral_CountAllScenes?relay
        FUNCTION ??zclGeneral_CountAllScenes?relay,0203H
        PUBLIC ??zclGeneral_CountScenes?relay
        FUNCTION ??zclGeneral_CountScenes?relay,0203H
        PUBLIC ??zclGeneral_FindAllScenesForGroup?relay
        FUNCTION ??zclGeneral_FindAllScenesForGroup?relay,0203H
        FUNCTION ??zclGeneral_FindCallbacks?relay,0203H
        PUBLIC ??zclGeneral_FindScene?relay
        FUNCTION ??zclGeneral_FindScene?relay,0203H
        FUNCTION ??zclGeneral_HdlInSpecificCommands?relay,0203H
        FUNCTION ??zclGeneral_HdlIncoming?relay,0203H
        FUNCTION ??zclGeneral_ProcessInGroupsClient?relay,0203H
        FUNCTION ??zclGeneral_ProcessInGroupsServer?relay,0203H
        FUNCTION ??zclGeneral_ProcessInIdentity?relay,0203H
        FUNCTION ??zclGeneral_ProcessInLevelControl?relay,0203H
        FUNCTION ??zclGeneral_ProcessInOnOff?relay,0203H
        FUNCTION ??zclGeneral_ProcessInScenesClient?relay,0203H
        FUNCTION ??zclGeneral_ProcessInScenesServer?relay,0203H
        PUBLIC ??zclGeneral_ReadSceneCountCB?relay
        FUNCTION ??zclGeneral_ReadSceneCountCB?relay,0203H
        PUBLIC ??zclGeneral_RegisterCmdCallbacks?relay
        FUNCTION ??zclGeneral_RegisterCmdCallbacks?relay,0203H
        PUBLIC ??zclGeneral_RemoveAllScenes?relay
        FUNCTION ??zclGeneral_RemoveAllScenes?relay,0203H
        PUBLIC ??zclGeneral_RemoveScene?relay
        FUNCTION ??zclGeneral_RemoveScene?relay,0203H
        PUBLIC ??zclGeneral_ScenesInit?relay
        FUNCTION ??zclGeneral_ScenesInit?relay,0203H
        FUNCTION ??zclGeneral_ScenesRestoreFromNV?relay,0203H
        PUBLIC ??zclGeneral_ScenesSave?relay
        FUNCTION ??zclGeneral_ScenesSave?relay,0203H
        FUNCTION ??zclGeneral_ScenesWriteNV?relay,0203H
        PUBLIC ??zclGeneral_SendAddGroupRequest?relay
        FUNCTION ??zclGeneral_SendAddGroupRequest?relay,0203H
        PUBLIC ??zclGeneral_SendAddSceneRequest?relay
        FUNCTION ??zclGeneral_SendAddSceneRequest?relay,0203H
        PUBLIC ??zclGeneral_SendGroupGetMembershipRequest?rela
        FUNCTION ??zclGeneral_SendGroupGetMembershipRequest?rela,0203H
        PUBLIC ??zclGeneral_SendGroupRequest?relay
        FUNCTION ??zclGeneral_SendGroupRequest?relay,0203H
        PUBLIC ??zclGeneral_SendGroupResponse?relay
        FUNCTION ??zclGeneral_SendGroupResponse?relay,0203H
        PUBLIC ??zclGeneral_SendGroupViewResponse?relay
        FUNCTION ??zclGeneral_SendGroupViewResponse?relay,0203H
        PUBLIC ??zclGeneral_SendIdentify?relay
        FUNCTION ??zclGeneral_SendIdentify?relay,0203H
        PUBLIC ??zclGeneral_SendIdentifyEZModeInvoke?relay
        FUNCTION ??zclGeneral_SendIdentifyEZModeInvoke?relay,0203H
        PUBLIC ??zclGeneral_SendIdentifyQueryResponse?relay
        FUNCTION ??zclGeneral_SendIdentifyQueryResponse?relay,0203H
        PUBLIC ??zclGeneral_SendIdentifyTriggerEffect?relay
        FUNCTION ??zclGeneral_SendIdentifyTriggerEffect?relay,0203H
        PUBLIC ??zclGeneral_SendIdentifyUpdateCommState?relay
        FUNCTION ??zclGeneral_SendIdentifyUpdateCommState?relay,0203H
        PUBLIC ??zclGeneral_SendLevelControlMoveRequest?relay
        FUNCTION ??zclGeneral_SendLevelControlMoveRequest?relay,0203H
        PUBLIC ??zclGeneral_SendLevelControlMoveToLevelRequest
        FUNCTION ??zclGeneral_SendLevelControlMoveToLevelRequest,0203H
        PUBLIC ??zclGeneral_SendLevelControlStepRequest?relay
        FUNCTION ??zclGeneral_SendLevelControlStepRequest?relay,0203H
        PUBLIC ??zclGeneral_SendLevelControlStopRequest?relay
        FUNCTION ??zclGeneral_SendLevelControlStopRequest?relay,0203H
        PUBLIC ??zclGeneral_SendOnOff_CmdOffWithEffect?relay
        FUNCTION ??zclGeneral_SendOnOff_CmdOffWithEffect?relay,0203H
        PUBLIC ??zclGeneral_SendOnOff_CmdOnWithTimedOff?relay
        FUNCTION ??zclGeneral_SendOnOff_CmdOnWithTimedOff?relay,0203H
        PUBLIC ??zclGeneral_SendSceneCopy?relay
        FUNCTION ??zclGeneral_SendSceneCopy?relay,0203H
        PUBLIC ??zclGeneral_SendSceneCopyResponse?relay
        FUNCTION ??zclGeneral_SendSceneCopyResponse?relay,0203H
        PUBLIC ??zclGeneral_SendSceneGetMembershipResponse?rel
        FUNCTION ??zclGeneral_SendSceneGetMembershipResponse?rel,0203H
        PUBLIC ??zclGeneral_SendSceneRequest?relay
        FUNCTION ??zclGeneral_SendSceneRequest?relay,0203H
        PUBLIC ??zclGeneral_SendSceneResponse?relay
        FUNCTION ??zclGeneral_SendSceneResponse?relay,0203H
        PUBLIC ??zclGeneral_SendSceneViewRsp?relay
        FUNCTION ??zclGeneral_SendSceneViewRsp?relay,0203H
        FUNCTION zclGeneral_AddGroup,021203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclGeneral_AddScene
        FUNCTION zclGeneral_AddScene,021203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC zclGeneral_CountAllScenes
        FUNCTION zclGeneral_CountAllScenes,0203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_CountScenes
        FUNCTION zclGeneral_CountScenes,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_FindAllScenesForGroup
        FUNCTION zclGeneral_FindAllScenesForGroup,0203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        FUNCTION zclGeneral_FindCallbacks,0203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_FindScene
        FUNCTION zclGeneral_FindScene,0203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION zclGeneral_HdlInSpecificCommands,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION zclGeneral_HdlIncoming,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        FUNCTION zclGeneral_ProcessInGroupsClient,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 53, STACK
        FUNCTION zclGeneral_ProcessInGroupsServer,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 49, STACK
        FUNCTION zclGeneral_ProcessInIdentity,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclGeneral_ProcessInLevelControl,0203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        FUNCTION zclGeneral_ProcessInOnOff,0203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        FUNCTION zclGeneral_ProcessInScenesClient,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 90, STACK
        FUNCTION zclGeneral_ProcessInScenesServer,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 94, STACK
        PUBLIC zclGeneral_ReadSceneCountCB
        FUNCTION zclGeneral_ReadSceneCountCB,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC zclGeneral_RegisterCmdCallbacks
        FUNCTION zclGeneral_RegisterCmdCallbacks,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC zclGeneral_RemoveAllScenes
        FUNCTION zclGeneral_RemoveAllScenes,021203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 13, STACK
        PUBLIC zclGeneral_RemoveScene
        FUNCTION zclGeneral_RemoveScene,021203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC zclGeneral_ScenesInit
        FUNCTION zclGeneral_ScenesInit,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        FUNCTION zclGeneral_ScenesRestoreFromNV,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 74, STACK
        PUBLIC zclGeneral_ScenesSave
        FUNCTION zclGeneral_ScenesSave,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclGeneral_ScenesWriteNV,021203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 73, STACK
        PUBLIC zclGeneral_SendAddGroupRequest
        FUNCTION zclGeneral_SendAddGroupRequest,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC zclGeneral_SendAddSceneRequest
        FUNCTION zclGeneral_SendAddSceneRequest,021203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC zclGeneral_SendGroupGetMembershipRequest
        FUNCTION zclGeneral_SendGroupGetMembershipRequest,021203H
        ARGFRAME XSTACK, 49, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclGeneral_SendGroupRequest
        FUNCTION zclGeneral_SendGroupRequest,021203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendGroupResponse
        FUNCTION zclGeneral_SendGroupResponse,021203H
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendGroupViewResponse
        FUNCTION zclGeneral_SendGroupViewResponse,021203H
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC zclGeneral_SendIdentify
        FUNCTION zclGeneral_SendIdentify,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyEZModeInvoke
        FUNCTION zclGeneral_SendIdentifyEZModeInvoke,021203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyQueryResponse
        FUNCTION zclGeneral_SendIdentifyQueryResponse,021203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyTriggerEffect
        FUNCTION zclGeneral_SendIdentifyTriggerEffect,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclGeneral_SendIdentifyUpdateCommState
        FUNCTION zclGeneral_SendIdentifyUpdateCommState,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclGeneral_SendLevelControlMoveRequest
        FUNCTION zclGeneral_SendLevelControlMoveRequest,021203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclGeneral_SendLevelControlMoveToLevelRequest
        FUNCTION zclGeneral_SendLevelControlMoveToLevelRequest,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendLevelControlStepRequest
        FUNCTION zclGeneral_SendLevelControlStepRequest,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclGeneral_SendLevelControlStopRequest
        FUNCTION zclGeneral_SendLevelControlStopRequest,021203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendOnOff_CmdOffWithEffect
        FUNCTION zclGeneral_SendOnOff_CmdOffWithEffect,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclGeneral_SendOnOff_CmdOnWithTimedOff
        FUNCTION zclGeneral_SendOnOff_CmdOnWithTimedOff,021203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclGeneral_SendSceneCopy
        FUNCTION zclGeneral_SendSceneCopy,021203H
        ARGFRAME XSTACK, 7, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC zclGeneral_SendSceneCopyResponse
        FUNCTION zclGeneral_SendSceneCopyResponse,021203H
        ARGFRAME XSTACK, 91, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclGeneral_SendSceneGetMembershipResponse
        FUNCTION zclGeneral_SendSceneGetMembershipResponse,021203H
        ARGFRAME XSTACK, 94, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclGeneral_SendSceneRequest
        FUNCTION zclGeneral_SendSceneRequest,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendSceneResponse
        FUNCTION zclGeneral_SendSceneResponse,021203H
        ARGFRAME XSTACK, 92, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC zclGeneral_SendSceneViewRsp
        FUNCTION zclGeneral_SendSceneViewRsp,021203H
        ARGFRAME XSTACK, 91, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 38, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
StubAPS_InterPan    SYMBOL "StubAPS_InterPan"
??StubAPS_InterPan?relay SYMBOL "?relay", StubAPS_InterPan
aps_AddGroup        SYMBOL "aps_AddGroup"
??aps_AddGroup?relay SYMBOL "?relay", aps_AddGroup
aps_CountAllGroups  SYMBOL "aps_CountAllGroups"
??aps_CountAllGroups?relay SYMBOL "?relay", aps_CountAllGroups
aps_FindAllGroupsForEndpoint SYMBOL "aps_FindAllGroupsForEndpoint"
??aps_FindAllGroupsForEndpoint?relay SYMBOL "?relay", aps_FindAllGroupsForEndpoint
aps_FindGroup       SYMBOL "aps_FindGroup"
??aps_FindGroup?relay SYMBOL "?relay", aps_FindGroup
aps_RemoveAllGroup  SYMBOL "aps_RemoveAllGroup"
??aps_RemoveAllGroup?relay SYMBOL "?relay", aps_RemoveAllGroup
aps_RemoveGroup     SYMBOL "aps_RemoveGroup"
??aps_RemoveGroup?relay SYMBOL "?relay", aps_RemoveGroup
osal_mem_alloc      SYMBOL "osal_mem_alloc"
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
??osal_memset?relay SYMBOL "?relay", osal_memset
osal_nv_item_init   SYMBOL "osal_nv_item_init"
??osal_nv_item_init?relay SYMBOL "?relay", osal_nv_item_init
osal_nv_read        SYMBOL "osal_nv_read"
??osal_nv_read?relay SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
??osal_nv_write?relay SYMBOL "?relay", osal_nv_write
zcl_ReadAttrData    SYMBOL "zcl_ReadAttrData"
??zcl_ReadAttrData?relay SYMBOL "?relay", zcl_ReadAttrData
zcl_SendCommand     SYMBOL "zcl_SendCommand"
??zcl_SendCommand?relay SYMBOL "?relay", zcl_SendCommand
zcl_SendDefaultRspCmd SYMBOL "zcl_SendDefaultRspCmd"
??zcl_SendDefaultRspCmd?relay SYMBOL "?relay", zcl_SendDefaultRspCmd
zcl_registerPlugin  SYMBOL "zcl_registerPlugin"
??zcl_registerPlugin?relay SYMBOL "?relay", zcl_registerPlugin
zclGeneral_AddScene SYMBOL "zclGeneral_AddScene"
??zclGeneral_AddScene?relay SYMBOL "?relay", zclGeneral_AddScene
zclGeneral_CountAllScenes SYMBOL "zclGeneral_CountAllScenes"
??zclGeneral_CountAllScenes?relay SYMBOL "?relay", zclGeneral_CountAllScenes
zclGeneral_CountScenes SYMBOL "zclGeneral_CountScenes"
??zclGeneral_CountScenes?relay SYMBOL "?relay", zclGeneral_CountScenes
zclGeneral_FindAllScenesForGroup SYMBOL "zclGeneral_FindAllScenesForGroup"
??zclGeneral_FindAllScenesForGroup?relay SYMBOL "?relay", zclGeneral_FindAllScenesForGroup
zclGeneral_FindScene SYMBOL "zclGeneral_FindScene"
??zclGeneral_FindScene?relay SYMBOL "?relay", zclGeneral_FindScene
zclGeneral_ReadSceneCountCB SYMBOL "zclGeneral_ReadSceneCountCB"
??zclGeneral_ReadSceneCountCB?relay SYMBOL "?relay", zclGeneral_ReadSceneCountCB
zclGeneral_RegisterCmdCallbacks SYMBOL "zclGeneral_RegisterCmdCallbacks"
??zclGeneral_RegisterCmdCallbacks?relay SYMBOL "?relay", zclGeneral_RegisterCmdCallbacks
zclGeneral_RemoveAllScenes SYMBOL "zclGeneral_RemoveAllScenes"
??zclGeneral_RemoveAllScenes?relay SYMBOL "?relay", zclGeneral_RemoveAllScenes
zclGeneral_RemoveScene SYMBOL "zclGeneral_RemoveScene"
??zclGeneral_RemoveScene?relay SYMBOL "?relay", zclGeneral_RemoveScene
zclGeneral_ScenesInit SYMBOL "zclGeneral_ScenesInit"
??zclGeneral_ScenesInit?relay SYMBOL "?relay", zclGeneral_ScenesInit
zclGeneral_ScenesSave SYMBOL "zclGeneral_ScenesSave"
??zclGeneral_ScenesSave?relay SYMBOL "?relay", zclGeneral_ScenesSave
zclGeneral_SendAddGroupRequest SYMBOL "zclGeneral_SendAddGroupRequest"
??zclGeneral_SendAddGroupRequest?relay SYMBOL "?relay", zclGeneral_SendAddGroupRequest
zclGeneral_SendAddSceneRequest SYMBOL "zclGeneral_SendAddSceneRequest"
??zclGeneral_SendAddSceneRequest?relay SYMBOL "?relay", zclGeneral_SendAddSceneRequest
zclGeneral_SendGroupGetMembershipRequest SYMBOL "zclGeneral_SendGroupGetMembershipRequest"
??zclGeneral_SendGroupGetMembershipRequest?rela SYMBOL "?relay", zclGeneral_SendGroupGetMembershipRequest
zclGeneral_SendGroupRequest SYMBOL "zclGeneral_SendGroupRequest"
??zclGeneral_SendGroupRequest?relay SYMBOL "?relay", zclGeneral_SendGroupRequest
zclGeneral_SendGroupResponse SYMBOL "zclGeneral_SendGroupResponse"
??zclGeneral_SendGroupResponse?relay SYMBOL "?relay", zclGeneral_SendGroupResponse
zclGeneral_SendGroupViewResponse SYMBOL "zclGeneral_SendGroupViewResponse"
??zclGeneral_SendGroupViewResponse?relay SYMBOL "?relay", zclGeneral_SendGroupViewResponse
zclGeneral_SendIdentify SYMBOL "zclGeneral_SendIdentify"
??zclGeneral_SendIdentify?relay SYMBOL "?relay", zclGeneral_SendIdentify
zclGeneral_SendIdentifyEZModeInvoke SYMBOL "zclGeneral_SendIdentifyEZModeInvoke"
??zclGeneral_SendIdentifyEZModeInvoke?relay SYMBOL "?relay", zclGeneral_SendIdentifyEZModeInvoke
zclGeneral_SendIdentifyQueryResponse SYMBOL "zclGeneral_SendIdentifyQueryResponse"
??zclGeneral_SendIdentifyQueryResponse?relay SYMBOL "?relay", zclGeneral_SendIdentifyQueryResponse
zclGeneral_SendIdentifyTriggerEffect SYMBOL "zclGeneral_SendIdentifyTriggerEffect"
??zclGeneral_SendIdentifyTriggerEffect?relay SYMBOL "?relay", zclGeneral_SendIdentifyTriggerEffect
zclGeneral_SendIdentifyUpdateCommState SYMBOL "zclGeneral_SendIdentifyUpdateCommState"
??zclGeneral_SendIdentifyUpdateCommState?relay SYMBOL "?relay", zclGeneral_SendIdentifyUpdateCommState
zclGeneral_SendLevelControlMoveRequest SYMBOL "zclGeneral_SendLevelControlMoveRequest"
??zclGeneral_SendLevelControlMoveRequest?relay SYMBOL "?relay", zclGeneral_SendLevelControlMoveRequest
zclGeneral_SendLevelControlMoveToLevelRequest SYMBOL "zclGeneral_SendLevelControlMoveToLevelRequest"
??zclGeneral_SendLevelControlMoveToLevelRequest SYMBOL "?relay", zclGeneral_SendLevelControlMoveToLevelRequest
zclGeneral_SendLevelControlStepRequest SYMBOL "zclGeneral_SendLevelControlStepRequest"
??zclGeneral_SendLevelControlStepRequest?relay SYMBOL "?relay", zclGeneral_SendLevelControlStepRequest
zclGeneral_SendLevelControlStopRequest SYMBOL "zclGeneral_SendLevelControlStopRequest"
??zclGeneral_SendLevelControlStopRequest?relay SYMBOL "?relay", zclGeneral_SendLevelControlStopRequest
zclGeneral_SendOnOff_CmdOffWithEffect SYMBOL "zclGeneral_SendOnOff_CmdOffWithEffect"
??zclGeneral_SendOnOff_CmdOffWithEffect?relay SYMBOL "?relay", zclGeneral_SendOnOff_CmdOffWithEffect
zclGeneral_SendOnOff_CmdOnWithTimedOff SYMBOL "zclGeneral_SendOnOff_CmdOnWithTimedOff"
??zclGeneral_SendOnOff_CmdOnWithTimedOff?relay SYMBOL "?relay", zclGeneral_SendOnOff_CmdOnWithTimedOff
zclGeneral_SendSceneCopy SYMBOL "zclGeneral_SendSceneCopy"
??zclGeneral_SendSceneCopy?relay SYMBOL "?relay", zclGeneral_SendSceneCopy
zclGeneral_SendSceneCopyResponse SYMBOL "zclGeneral_SendSceneCopyResponse"
??zclGeneral_SendSceneCopyResponse?relay SYMBOL "?relay", zclGeneral_SendSceneCopyResponse
zclGeneral_SendSceneGetMembershipResponse SYMBOL "zclGeneral_SendSceneGetMembershipResponse"
??zclGeneral_SendSceneGetMembershipResponse?rel SYMBOL "?relay", zclGeneral_SendSceneGetMembershipResponse
zclGeneral_SendSceneRequest SYMBOL "zclGeneral_SendSceneRequest"
??zclGeneral_SendSceneRequest?relay SYMBOL "?relay", zclGeneral_SendSceneRequest
zclGeneral_SendSceneResponse SYMBOL "zclGeneral_SendSceneResponse"
??zclGeneral_SendSceneResponse?relay SYMBOL "?relay", zclGeneral_SendSceneResponse
zclGeneral_SendSceneViewRsp SYMBOL "zclGeneral_SendSceneViewRsp"
??zclGeneral_SendSceneViewRsp?relay SYMBOL "?relay", zclGeneral_SendSceneViewRsp

        EXTERN ??StubAPS_InterPan?relay
        FUNCTION ??StubAPS_InterPan?relay,00H
        EXTERN ??aps_AddGroup?relay
        FUNCTION ??aps_AddGroup?relay,00H
        EXTERN ??aps_CountAllGroups?relay
        FUNCTION ??aps_CountAllGroups?relay,00H
        EXTERN ??aps_FindAllGroupsForEndpoint?relay
        FUNCTION ??aps_FindAllGroupsForEndpoint?relay,00H
        EXTERN ??aps_FindGroup?relay
        FUNCTION ??aps_FindGroup?relay,00H
        EXTERN ??aps_RemoveAllGroup?relay
        FUNCTION ??aps_RemoveAllGroup?relay,00H
        EXTERN ??aps_RemoveGroup?relay
        FUNCTION ??aps_RemoveGroup?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_nv_item_init?relay
        FUNCTION ??osal_nv_item_init?relay,00H
        EXTERN ??osal_nv_read?relay
        FUNCTION ??osal_nv_read?relay,00H
        EXTERN ??osal_nv_write?relay
        FUNCTION ??osal_nv_write?relay,00H
        EXTERN ??zcl_ReadAttrData?relay
        FUNCTION ??zcl_ReadAttrData?relay,00H
        EXTERN ??zcl_SendCommand?relay
        FUNCTION ??zcl_SendCommand?relay,00H
        EXTERN ??zcl_SendDefaultRspCmd?relay
        FUNCTION ??zcl_SendDefaultRspCmd?relay,00H
        EXTERN ??zcl_registerPlugin?relay
        FUNCTION ??zcl_registerPlugin?relay,00H
        EXTERN StubAPS_InterPan
        FUNCTION StubAPS_InterPan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_AddGroup
        FUNCTION aps_AddGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_CountAllGroups
        FUNCTION aps_CountAllGroups,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_FindAllGroupsForEndpoint
        FUNCTION aps_FindAllGroupsForEndpoint,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_FindGroup
        FUNCTION aps_FindGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_RemoveAllGroup
        FUNCTION aps_RemoveAllGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_RemoveGroup
        FUNCTION aps_RemoveGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_item_init
        FUNCTION osal_nv_item_init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 74, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_ReadAttrData
        FUNCTION zcl_ReadAttrData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 91, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendCommand
        FUNCTION zcl_SendCommand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendDefaultRspCmd
        FUNCTION zcl_SendDefaultRspCmd,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 49, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerPlugin
        FUNCTION zcl_registerPlugin,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\Texas Instruments\Z-Stack Lighting 1.0.2\Components\stack\zcl\zcl_general.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_general.c
//    3   Revised:        $Date: 2013-10-16 16:08:27 -0700 (Wed, 16 Oct 2013) $
//    4   Revision:       $Revision: 35699 $
//    5 
//    6   Description:    Zigbee Cluster Library - General.  This application receives all
//    7                   ZCL messages and initially parses them before passing to application.
//    8 
//    9 
//   10   Copyright 2006-2013 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License").  You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product.  Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "zcl.h"
//   46 #include "zcl_general.h"
//   47 //#include "ZDApp.h"
//   48 #include "zcl_ezmode.h"
//   49 
//   50 #if defined ( INTER_PAN )
//   51   #include "stub_aps.h"
//   52 #endif
//   53 
//   54 #include "dali_thread.h"
//   55 
//   56 /*********************************************************************
//   57  * MACROS
//   58  */
//   59 #define locationTypeAbsolute( a )          ( (a) & LOCATION_TYPE_ABSOLUTE )
//   60 #define locationType2D( a )                ( (a) & LOCATION_TYPE_2_D )
//   61 #define locationTypeCoordinateSystem( a )  ( (a) & LOCATION_TYPE_COORDINATE_SYSTEM )
//   62 
//   63 #ifdef ZCL_SCENES
//   64 #define zclGeneral_ScenesRemaingCapacity() ( ZCL_GEN_MAX_SCENES - zclGeneral_CountAllScenes() )
//   65 #endif // ZCL_SCENES
//   66 
//   67 /*********************************************************************
//   68  * CONSTANTS
//   69  */
//   70 
//   71 /*********************************************************************
//   72  * TYPEDEFS
//   73  */
//   74 typedef struct zclGenCBRec
//   75 {
//   76   struct zclGenCBRec        *next;
//   77   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   78   zclGeneral_AppCallbacks_t *CBs;     // Pointer to Callback function
//   79 } zclGenCBRec_t;
//   80 
//   81 typedef struct zclGenSceneItem
//   82 {
//   83   struct zclGenSceneItem    *next;
//   84   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   85   zclGeneral_Scene_t        scene;    // Scene info
//   86 } zclGenSceneItem_t;
//   87 
//   88 typedef struct zclGenAlarmItem
//   89 {
//   90   struct zclGenAlarmItem    *next;
//   91   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   92   zclGeneral_Alarm_t        alarm;    // Alarm info
//   93 } zclGenAlarmItem_t;
//   94 
//   95 // Scene NV types
//   96 typedef struct
//   97 {
//   98   uint16                    numRecs;
//   99 } nvGenScenesHdr_t;
//  100 
//  101 typedef struct zclGenSceneNVItem
//  102 {
//  103   uint8                     endpoint;
//  104   zclGeneral_Scene_t        scene;
//  105 } zclGenSceneNVItem_t;
//  106 
//  107 /*********************************************************************
//  108  * GLOBAL VARIABLES
//  109  */
//  110 
//  111 /*********************************************************************
//  112  * GLOBAL FUNCTIONS
//  113  */
//  114 
//  115 /*********************************************************************
//  116  * LOCAL VARIABLES
//  117  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  118 static zclGenCBRec_t *zclGenCBs = (zclGenCBRec_t *)NULL;
zclGenCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  119 static uint8 zclGenPluginRegisted = FALSE;
zclGenPluginRegisted:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  120 
//  121 #if defined( ZCL_SCENES )
//  122   #if !defined ( ZCL_STANDALONE )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  123     static zclGenSceneItem_t *zclGenSceneTable = (zclGenSceneItem_t *)NULL;
zclGenSceneTable:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  124   #endif
//  125 #endif // ZCL_SCENES
//  126 
//  127 #ifdef ZCL_ALARMS
//  128 static zclGenAlarmItem_t *zclGenAlarmTable = (zclGenAlarmItem_t *)NULL;
//  129 #endif // ZCL_ALARMS
//  130 
//  131 /*********************************************************************
//  132  * LOCAL FUNCTIONS
//  133  */
//  134 static ZStatus_t zclGeneral_HdlIncoming( zclIncoming_t *pInMsg );
//  135 static ZStatus_t zclGeneral_HdlInSpecificCommands( zclIncoming_t *pInMsg );
//  136 static ZStatus_t zclGeneral_HdlInManuSpecificCommands( zclIncoming_t *pInMsg );//add my own function
//  137 static zclGeneral_AppCallbacks_t *zclGeneral_FindCallbacks( uint8 endpoint );
//  138 
//  139 // Device Configuration and Installation clusters
//  140 #ifdef ZCL_BASIC
//  141 static ZStatus_t zclGeneral_ProcessInBasic( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  142 #endif // ZCL_BASIC
//  143 
//  144 #ifdef ZCL_IDENTIFY
//  145 static ZStatus_t zclGeneral_ProcessInIdentity( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  146 #endif // ZCL_IDENTIFY
//  147 
//  148 // Groups and Scenes clusters
//  149 #ifdef ZCL_GROUPS
//  150 static ZStatus_t zclGeneral_ProcessInGroupsServer( zclIncoming_t *pInMsg );
//  151 static ZStatus_t zclGeneral_ProcessInGroupsClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  152 static ZStatus_t zclGeneral_AddGroup( uint8 endPoint, aps_Group_t *group, uint8 *pData );
//  153 #endif // ZCL_GROUPS
//  154 
//  155 #ifdef ZCL_SCENES
//  156 static ZStatus_t zclGeneral_ProcessInScenesServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  157 static ZStatus_t zclGeneral_ProcessInScenesClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  158 #endif // ZCL_SCENES
//  159 
//  160 // On/Off and Level Control Configuration clusters
//  161 #ifdef ZCL_ON_OFF
//  162 static ZStatus_t zclGeneral_ProcessInOnOff( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  163 static ZStatus_t zclGeneral_ProcessInManuOnOff( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  164 #endif // ZCL_ONOFF
//  165 
//  166 #ifdef ZCL_LEVEL_CTRL
//  167 static ZStatus_t zclGeneral_ProcessInLevelControl( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  168 static ZStatus_t zclGeneral_ProcessInManuLevelControl( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  169 #endif // ZCL_LEVEL_CTRL
//  170 
//  171 // Alarms cluster
//  172 #ifdef ZCL_ALARMS
//  173 static ZStatus_t zclGeneral_ProcessInAlarmsServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  174 static ZStatus_t zclGeneral_ProcessInAlarmsClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  175 #endif // ZCL_ALARMS
//  176 
//  177 // Location cluster
//  178 #ifdef ZCL_LOCATION
//  179 static ZStatus_t zclGeneral_ProcessInLocationServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  180 static ZStatus_t zclGeneral_ProcessInLocationClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  181 #endif // ZCL_LOCATION
//  182 
//  183 #ifdef ZCL_SCENES
//  184   #if !defined ( ZCL_STANDALONE )
//  185     static uint8 zclGeneral_ScenesInitNV( void );
//  186     static void zclGeneral_ScenesSetDefaultNV( void );
//  187     static void zclGeneral_ScenesWriteNV( void );
//  188     static uint16 zclGeneral_ScenesRestoreFromNV( void );
//  189   #endif
//  190 #endif // ZCL_SCENES
//  191 
//  192 /*********************************************************************
//  193  * @fn      zclGeneral_RegisterCmdCallbacks
//  194  *
//  195  * @brief   Register an applications command callbacks
//  196  *
//  197  * @param   endpoint - application's endpoint
//  198  * @param   callbacks - pointer to the callback record.
//  199  *
//  200  * @return  ZMemError if not able to allocate
//  201  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  202 ZStatus_t zclGeneral_RegisterCmdCallbacks( uint8 endpoint, zclGeneral_AppCallbacks_t *callbacks )
zclGeneral_RegisterCmdCallbacks:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
        CODE
//  203 {
        FUNCALL zclGeneral_RegisterCmdCallbacks, zcl_registerPlugin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RegisterCmdCallbacks, zclGeneral_ScenesInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RegisterCmdCallbacks, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R1
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  204   zclGenCBRec_t *pNewItem;
//  205   zclGenCBRec_t *pLoop;
//  206 
//  207   // Register as a ZCL Plugin
//  208   if ( zclGenPluginRegisted == FALSE )
        MOV     DPTR,#zclGenPluginRegisted
        MOVX    A,@DPTR
        JNZ     ??zclGeneral_RegisterCmdCallbacks_0
//  209   {
//  210     zcl_registerPlugin( ZCL_CLUSTER_ID_GEN_BASIC,
//  211                         ZCL_CLUSTER_ID_GEN_MULTISTATE_VALUE_BASIC,
//  212                         zclGeneral_HdlIncoming );
        ; Setup parameters for call to function zcl_registerPlugin
        MOV     ?V0 + 2,#??zclGeneral_HdlIncoming?relay & 0xff
        MOV     ?V0 + 3,#(??zclGeneral_HdlIncoming?relay >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#0x14
        MOV     R5,#0x0
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   ??zcl_registerPlugin?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  213 
//  214 #ifdef ZCL_SCENES
//  215     // Initialize the Scenes Table
//  216     zclGeneral_ScenesInit();
        ; Setup parameters for call to function zclGeneral_ScenesInit
        LCALL   ??zclGeneral_ScenesInit?relay
//  217 #endif // ZCL_SCENES
//  218 
//  219     zclGenPluginRegisted = TRUE;
        MOV     DPTR,#zclGenPluginRegisted
        MOV     A,#0x1
        MOVX    @DPTR,A
//  220   }
//  221 
//  222   // Fill in the new profile list
//  223   pNewItem = zcl_mem_alloc( sizeof( zclGenCBRec_t ) );
??zclGeneral_RegisterCmdCallbacks_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,?V0 + 2
        MOV     R1,?V0 + 3
//  224   if ( pNewItem == NULL )
        MOV     A,R0
        ORL     A,R1
        JNZ     ??zclGeneral_RegisterCmdCallbacks_1
//  225     return (ZMemError);
        MOV     R1,#0x10
        SJMP    ??zclGeneral_RegisterCmdCallbacks_2
//  226 
//  227   pNewItem->next = (zclGenCBRec_t *)NULL;
??zclGeneral_RegisterCmdCallbacks_1:
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine58 & 0xFFFF
//  228   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_90:
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        LCALL   ?Subroutine58 & 0xFFFF
//  229   pNewItem->CBs = callbacks;
??CrossCallReturnLabel_91:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  230 
//  231   // Find spot in list
//  232   if (  zclGenCBs == NULL )
        MOV     DPTR,#zclGenCBs
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_309:
        MOV     DPTR,#zclGenCBs
        JZ      ??zclGeneral_RegisterCmdCallbacks_3
//  233   {
//  234     zclGenCBs = pNewItem;
//  235   }
//  236   else
//  237   {
//  238     // Look for end of list
//  239     pLoop = zclGenCBs;
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??zclGeneral_RegisterCmdCallbacks_4
//  240     while ( pLoop->next != NULL )
//  241       pLoop = pLoop->next;
??zclGeneral_RegisterCmdCallbacks_5:
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
??zclGeneral_RegisterCmdCallbacks_4:
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_306:
        JNZ     ??zclGeneral_RegisterCmdCallbacks_5
//  242 
//  243     // Put new item at end of list
//  244     pLoop->next = pNewItem;
        MOV     DPL,R4
        MOV     DPH,R5
//  245   }
??zclGeneral_RegisterCmdCallbacks_3:
        LCALL   ?Subroutine64 & 0xFFFF
//  246 
//  247   return ( ZSuccess );
??CrossCallReturnLabel_255:
        MOV     R1,#0x0
??zclGeneral_RegisterCmdCallbacks_2:
        LJMP    ??Subroutine109_0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  248 }
//  249 
//  250 #ifdef ZCL_IDENTIFY
//  251 /*********************************************************************
//  252  * @fn      zclGeneral_SendIdentify
//  253  *
//  254  * @brief   Call to send out an Identify Command
//  255  *
//  256  * @param   srcEP - Sending application's endpoint
//  257  * @param   dstAddr - where you want the message to go
//  258  * @param   identifyTime - how long the device will continue to identify itself (in seconds)
//  259  * @param   seqNum - identification number for the transaction
//  260  *
//  261  * @return  ZStatus_t
//  262  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  263 ZStatus_t zclGeneral_SendIdentify( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentify:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
        CODE
//  264                                    uint16 identifyTime, uint8 disableDefaultRsp, uint8 seqNum )
//  265 {
        FUNCALL zclGeneral_SendIdentify, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  266   uint8 buf[2];
//  267 
//  268   buf[0] = LO_UINT16( identifyTime );
//  269   buf[1] = HI_UINT16( identifyTime );
??CrossCallReturnLabel_45:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine52 & 0xFFFF
//  270 
//  271   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  272                           COMMAND_IDENTIFY, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  273                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_155:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x1
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock1
//  274 }
//  275 
//  276 /*********************************************************************
//  277  * @fn      zclGeneral_SendIdentifyEZModeInvoke
//  278  *
//  279  * @brief   Call to send out an Identify EZ-Mode Invoke Command
//  280  *
//  281  * @param   srcEP - Sending application's endpoint
//  282  * @param   dstAddr - where you want the message to go
//  283  * @param   action - describes the EZ-Mode action to be performed
//  284  * @param   seqNum - identification number for the transaction
//  285  *
//  286  * @return  ZStatus_t
//  287  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  288 ZStatus_t zclGeneral_SendIdentifyEZModeInvoke( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyEZModeInvoke:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
        CODE
//  289                                                uint8 action, uint8 disableDefaultRsp, uint8 seqNum )
//  290 {
        FUNCALL zclGeneral_SendIdentifyEZModeInvoke, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
//  291   uint8 buf[1];
//  292 
//  293   buf[0] = action;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R4
        MOVX    @DPTR,A
//  294 
//  295   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  296                           COMMAND_IDENTIFY_EZMODE_INVOKE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  297                           disableDefaultRsp, 0, seqNum, 1, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R4,#0x3
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LJMP    ??Subroutine107_0 & 0xFFFF
          CFI EndBlock cfiBlock2
//  298 }
//  299 
//  300 /*********************************************************************
//  301  * @fn      zclGeneral_SendIdentifyUpdateCommState
//  302  *
//  303  * @brief   Call to send out an Identify Update Commission State Command
//  304  *
//  305  * @param   srcEP - Sending application's endpoint
//  306  * @param   dstAddr - where you want the message to go
//  307  * @param   action - describes the EZ-Mode action to be performed
//  308  * @param   commissionStateMask - updates the device's commission state
//  309  * @param   seqNum - identification number for the transaction
//  310  *
//  311  * @return  ZStatus_t
//  312  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  313 ZStatus_t zclGeneral_SendIdentifyUpdateCommState( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyUpdateCommState:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyUpdateCommState
        CODE
//  314                                                   uint8 action, uint8 commissionStateMask,
//  315                                                   uint8 disableDefaultRsp, uint8 seqNum )
//  316 {
        FUNCALL zclGeneral_SendIdentifyUpdateCommState, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
//  317   uint8 buf[2];
//  318 
//  319   buf[0] = action;
//  320   buf[1] = commissionStateMask;
??CrossCallReturnLabel_19:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine52 & 0xFFFF
//  321 
//  322   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  323                           COMMAND_IDENTIFY_UPDATE_COMMISSION_STATE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  324                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_156:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#0x3
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond4 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond5 Using cfiCommon0
          CFI (cfiCond5) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond5) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond5) CFA_SP SP+0
          CFI (cfiCond5) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function zclGeneral_SendIdentifyTriggerEffect
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+0
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+0
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function zclGeneral_SendOnOff_CmdOffWithEffect
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond8) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond8) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond8) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond8) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond8) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond8) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond8) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond8) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond8) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond8) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond8) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond8) CFA_SP SP+0
          CFI (cfiCond8) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        MOV     A,R5
          CFI EndBlock cfiCond4
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiPicker9
        REQUIRE ??Subroutine102_0
        ; // Fall through to label ??Subroutine102_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine102_0:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function zclGeneral_SendOnOff_CmdOnWithTimedOff
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+0
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function zclGeneral_ScenesInit
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+0
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function zclGeneral_SendIdentify
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond13) CFA_SP SP+0
          CFI (cfiCond13) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond14 Using cfiCommon0
          CFI (cfiCond14) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond14) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond14) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond14) CFA_SP SP+0
          CFI (cfiCond14) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function zclGeneral_SendIdentifyTriggerEffect
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+0
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+0
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function zclGeneral_SendOnOff_CmdOffWithEffect
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+0
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker18 Using cfiCommon1
          CFI (cfiPicker18) NoFunction
          CFI (cfiPicker18) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_169:
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiPicker18
//  325 }
//  326 
//  327 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  328 /*********************************************************************
//  329  * @fn      zclGeneral_SendIdentifyTriggerEffect
//  330  *
//  331  * @brief   Call to send out a Trigger Effect Command
//  332  *
//  333  * @param   srcEP - Sending application's endpoint
//  334  * @param   dstAddr - where you want the message to go
//  335  * @param   effectId - identify effect to use
//  336  * @param   effectVariant - which variant of effect to be triggered
//  337  * @param   disableDefaultRsp - whether to disable the Default Response command
//  338  * @param   seqNum - identification number for the transaction
//  339  *
//  340  * @return  ZStatus_t
//  341  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  342 ZStatus_t zclGeneral_SendIdentifyTriggerEffect( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyTriggerEffect:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyTriggerEffect
        CODE
//  343                                                 uint8 effectId, uint8 effectVariant,
//  344                                                 uint8 disableDefaultRsp, uint8 seqNum )
//  345 {
        FUNCALL zclGeneral_SendIdentifyTriggerEffect, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
//  346   uint8 buf[2];
//  347 
//  348   buf[0] = effectId;
//  349   buf[1] = effectVariant;
??CrossCallReturnLabel_20:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine52 & 0xFFFF
//  350 
//  351   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  352                           COMMAND_IDENTIFY_TRIGGER_EFFECT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  353                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_157:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#0x40
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock19

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyUpdateCommState
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function zclGeneral_SendIdentifyTriggerEffect
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+0
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function zclGeneral_SendOnOff_CmdOffWithEffect
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+0
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker23 Using cfiCommon1
          CFI (cfiPicker23) NoFunction
          CFI (cfiPicker23) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R7
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiPicker23
//  354 }
//  355 #endif // ZCL_LIGHT_LINK_ENHANCE
//  356 
//  357 /*********************************************************************
//  358  * @fn      zclGeneral_SendIdentifyQueryResponse
//  359  *
//  360  * @brief   Call to send out an Identify Query Response Command
//  361  *
//  362  * @param   srcEP - Sending application's endpoint
//  363  * @param   dstAddr - where you want the message to go
//  364  * @param   timeout - how long the device will continue to identify itself (in seconds)
//  365  * @param   seqNum - identification number for the transaction
//  366  *
//  367  * @return  ZStatus_t
//  368  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  369 ZStatus_t zclGeneral_SendIdentifyQueryResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyQueryResponse:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyQueryResponse
        CODE
//  370                                                 uint16 timeout, uint8 disableDefaultRsp, uint8 seqNum )
//  371 {
        FUNCALL zclGeneral_SendIdentifyQueryResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  372   uint8 buf[2];
//  373 
//  374   buf[0] = LO_UINT16( timeout );
//  375   buf[1] = HI_UINT16( timeout );
??CrossCallReturnLabel_46:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine52 & 0xFFFF
//  376 
//  377   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  378                           COMMAND_IDENTIFY_QUERY_RSP, TRUE,
//  379                           ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_158:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock24

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond25 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+0
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker27 Using cfiCommon1
          CFI (cfiPicker27) NoFunction
          CFI (cfiPicker27) Picker
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R4
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiPicker27
//  380 }
//  381 #endif // ZCL_IDENTIFY
//  382 
//  383 #ifdef ZCL_GROUPS
//  384 /*********************************************************************
//  385  * @fn      zclGeneral_SendGroupRequest
//  386  *
//  387  * @brief   Send a Group Request to a device.  You can also use the
//  388  *          appropriate macro.
//  389  *
//  390  * @param   srcEP - Sending Apps endpoint
//  391  * @param   dstAddr - where to send the request
//  392  * @param   cmd - one of the following:
//  393  *              COMMAND_GROUP_VIEW
//  394  *              COMMAND_GROUP_REMOVE
//  395  * @param   groupID -
//  396  *
//  397  * @return  ZStatus_t
//  398  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  399 ZStatus_t zclGeneral_SendGroupRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupRequest:
          CFI Block cfiBlock28 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
        CODE
//  400                                        uint8 cmd, uint16 groupID, uint8 disableDefaultRsp, uint8 seqNum )
//  401 {
        FUNCALL zclGeneral_SendGroupRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,R1
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine31 & 0xFFFF
//  402   uint8 buf[2];
//  403 
//  404   buf[0] = LO_UINT16( groupID );
//  405   buf[1] = HI_UINT16( groupID );
??CrossCallReturnLabel_37:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine53 & 0xFFFF
//  406 
//  407   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  408                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  409                             disableDefaultRsp, 0, seqNum, 2, buf ) );
??CrossCallReturnLabel_163:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 2,#0x2
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R7
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R6
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R1,?V0 + 0
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,#0x2
        LJMP    ??Subroutine108_0 & 0xFFFF
          CFI EndBlock cfiBlock28
//  410 }
//  411 
//  412 /*********************************************************************
//  413  * @fn      zclGeneral_SendAddGroupRequest
//  414  *
//  415  * @brief   Send the Add Group Request to a device
//  416  *
//  417  * @param   srcEP - Sending Apps endpoint
//  418  * @param   dstAddr - where to send the request
//  419  * @param   cmd - one of the following:
//  420  *                COMMAND_GROUP_ADD
//  421  *                COMMAND_GROUP_ADD_IF_IDENTIFYING
//  422  * @param   groupID - pointer to the group structure
//  423  * @param   groupName - pointer to Group Name.  This is a Zigbee
//  424  *          string data type, so the first byte is the length of the
//  425  *          name (in bytes), then the name.
//  426  *
//  427  * @return  ZStatus_t
//  428  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  429 ZStatus_t zclGeneral_SendAddGroupRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendAddGroupRequest:
          CFI Block cfiBlock29 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
        CODE
//  430                                           uint8 cmd, uint16 groupID, uint8 *groupName,
//  431                                           uint8 disableDefaultRsp, uint8 seqNum )
//  432 {
        FUNCALL zclGeneral_SendAddGroupRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V0 + 10,R1
        MOV     ?V0 + 14,R2
        MOV     ?V0 + 15,R3
        MOV     ?V0 + 12,R4
        MOV     ?V0 + 11,R5
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine32 & 0xFFFF
//  433   uint8 *buf;
//  434   uint8 *pBuf;
//  435   uint8 len;
//  436   ZStatus_t status;
//  437 
//  438   len = 2;    // Group ID
//  439   len += groupName[0] + 1;  // String + 1 for length
??CrossCallReturnLabel_39:
        MOV     DPL,?V0 + 0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,#0x3
        MOV     R0,A
//  440 
//  441   buf = zcl_mem_alloc( len );
        MOV     DPL,R0
        MOV     R6,DPL
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  442   if ( buf )
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??zclGeneral_SendAddGroupRequest_0 & 0xFFFF
//  443   {
//  444     pBuf = buf;
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
//  445     *pBuf++ = LO_UINT16( groupID );
??CrossCallReturnLabel_61:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
//  446     *pBuf++ = HI_UINT16( groupID );
        MOV     A,R1
        LCALL   ?Subroutine56 & 0xFFFF
//  447     *pBuf++ = groupName[0]; // string length
??CrossCallReturnLabel_88:
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ?Subroutine56 & 0xFFFF
//  448     zcl_memcpy( pBuf, &(groupName[1]), groupName[0] );
??CrossCallReturnLabel_89:
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 4,R1
        MOV     ?V0 + 5,R2
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
//  449 
//  450     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  451                               cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  452                               disableDefaultRsp, 0, seqNum, len, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,?V0 + 7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     A,?V0 + 11
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,?V0 + 12
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R2,?V0 + 14
        MOV     R3,?V0 + 15
        MOV     R1,?V0 + 10
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R1
        MOV     R6,A
//  453     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_SendAddGroupRequest_1
//  454   }
//  455   else
//  456     status = ZMemError;
??zclGeneral_SendAddGroupRequest_0:
        MOV     R6,#0x10
          CFI EndBlock cfiBlock29
//  457 
//  458   return ( status );
??zclGeneral_SendAddGroupRequest_1:
        REQUIRE ?Subroutine10
        ; // Fall through to label ?Subroutine10
//  459 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R1,A
        LJMP    ??Subroutine133_0 & 0xFFFF
          CFI EndBlock cfiBlock30

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond31 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond32) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond32) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond32) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond32) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond32) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond32) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond32) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond32) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond32) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond32) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond32) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond32) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond32) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond32) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond32) CFA_SP SP+0
          CFI (cfiCond32) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker33 Using cfiCommon1
          CFI (cfiPicker33) NoFunction
          CFI (cfiPicker33) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     ?V0 + 8,DPL
        MOV     ?V0 + 9,DPH
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiPicker33
//  460 
//  461 /*********************************************************************
//  462  * @fn      zclGeneral_SendGroupGetMembershipRequest
//  463  *
//  464  * @brief   Send a Get Group Membership (Resposne) Command to a device
//  465  *
//  466  * @param   srcEP - Sending Apps endpoint
//  467  * @param   dstAddr - where to send the request
//  468  * @param   cmd - one of the following:
//  469  *                COMMAND_GROUP_GET_MEMBERSHIP
//  470  *                COMMAND_GROUP_GET_MEMBERSHIP_RSP
//  471  * @param   groupID - pointer to the group structure
//  472  * @param   groupName - pointer to Group Name.  This is a Zigbee
//  473  *          string data type, so the first byte is the length of the
//  474  *          name (in bytes), then the name.
//  475  *
//  476  * @return  ZStatus_t
//  477  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  478 ZStatus_t zclGeneral_SendGroupGetMembershipRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupGetMembershipRequest:
          CFI Block cfiBlock34 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
        CODE
//  479                                                     uint8 cmd, uint8 rspCmd, uint8 direction, uint8 capacity,
//  480                                                     uint8 grpCnt, uint16 *grpList, uint8 disableDefaultRsp, uint8 seqNum )
//  481 {
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
        MOV     ?V0 + 10,R4
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 11,A
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
//  482   uint8 *buf;
//  483   uint8 *pBuf;
//  484   uint8 len = 0;
        MOV     R0,#0x0
//  485   uint8 i;
//  486   ZStatus_t status;
//  487 
//  488   if ( rspCmd )
        MOV     A,R7
        JZ      ??zclGeneral_SendGroupGetMembershipRequest_0
//  489     len++;  // Capacity
        INC     R0
??zclGeneral_SendGroupGetMembershipRequest_0:
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 9,A
//  490 
//  491   len++;  // Group Count
//  492   len += sizeof ( uint16 ) * grpCnt;  // Group List
        CLR     C
        RLC     A
        INC     A
        ADD     A,R0
        MOV     R0,A
//  493 
//  494   buf = zcl_mem_alloc( len );
        MOV     DPL,R0
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,?V0 + 3
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  495   if ( buf )
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??zclGeneral_SendGroupGetMembershipRequest_1 & 0xFFFF
//  496   {
//  497     pBuf = buf;
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
//  498     if ( rspCmd )
        MOV     A,R7
        JZ      ??CrossCallReturnLabel_102
//  499       *pBuf++ = capacity;
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,?V0 + 11
        LCALL   ?Subroutine62 & 0xFFFF
//  500 
//  501     *pBuf++ = grpCnt;
??CrossCallReturnLabel_102:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,?V0 + 9
        LCALL   ?Subroutine62 & 0xFFFF
//  502     for ( i = 0; i < grpCnt; i++ )
??CrossCallReturnLabel_103:
        MOV     ?V0 + 11,#0x0
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_203:
        SJMP    ??zclGeneral_SendGroupGetMembershipRequest_2
//  503     {
//  504       *pBuf++ = LO_UINT16( grpList[i] );
??zclGeneral_SendGroupGetMembershipRequest_3:
        MOV     A,?V0 + 11
        CLR     C
        RLC     A
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        MOV     A,R2
        ADD     A,R4
        MOV     ?V0 + 6,A
        MOV     A,R3
        ADDC    A,R5
        MOV     ?V0 + 7,A
        MOV     DPL,?V0 + 6
        LCALL   ?Subroutine39 & 0xFFFF
//  505       *pBuf++ = HI_UINT16( grpList[i] );
??CrossCallReturnLabel_49:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
//  506     }
        INC     ?V0 + 11
??zclGeneral_SendGroupGetMembershipRequest_2:
        MOV     A,?V0 + 11
        CLR     C
        SUBB    A,?V0 + 9
        JC      ??zclGeneral_SendGroupGetMembershipRequest_3
//  507 
//  508     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  509                               cmd, TRUE, direction,
//  510                               disableDefaultRsp, 0, seqNum, len, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,?V0 + 8
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,?V0 + 5
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,?V0 + 4
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V0 + 2,#0x1
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,?V0 + 10
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R2,?V0 + 12
        MOV     R3,?V0 + 13
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        MOV     ?V0 + 2,A
//  511     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_SendGroupGetMembershipRequest_4
//  512   }
//  513   else
//  514     status = ZMemError;
??zclGeneral_SendGroupGetMembershipRequest_1:
        MOV     ?V0 + 2,#0x10
//  515 
//  516   return ( status );
??zclGeneral_SendGroupGetMembershipRequest_4:
        MOV     R1,?V0 + 2
        LJMP    ??Subroutine119_0 & 0xFFFF
          CFI EndBlock cfiBlock34
//  517 }
//  518 
//  519 /*********************************************************************
//  520  * @fn      zclGeneral_SendGroupResponse
//  521  *
//  522  * @brief   Send Group Response (not Group View Response)
//  523  *
//  524  * @param   srcEP - Sending application's endpoint
//  525  * @param   dstAddr - where you want the message to go
//  526  * @param   cmd - either COMMAND_GROUP_ADD_RSP or COMMAND_GROUP_REMOVE_RSP
//  527  * @param   status - group command status
//  528  * @param   groupID - what group
//  529  *
//  530  * @return  ZStatus_t
//  531  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  532 ZStatus_t zclGeneral_SendGroupResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupResponse:
          CFI Block cfiBlock35 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
        CODE
//  533                                         uint8 cmd, uint8 status, uint16 groupID,
//  534                                         uint8 disableDefaultRsp, uint8 seqNum )
//  535 {
        FUNCALL zclGeneral_SendGroupResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     ?V0 + 0,R5
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
//  536   uint8 buf[3];
//  537 
//  538   buf[0] = status;
??CrossCallReturnLabel_43:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
//  539   buf[1] = LO_UINT16( groupID );
??CrossCallReturnLabel_26:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  540   buf[2] = HI_UINT16( groupID );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine53 & 0xFFFF
//  541 
//  542   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  543                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  544                           disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_164:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 2,#0x3
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R7
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x4
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock35
//  545 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond36 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_163
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function zclGeneral_SendGroupResponse
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+0
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+0
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+0
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker40 Using cfiCommon1
          CFI (cfiPicker40) NoFunction
          CFI (cfiPicker40) Picker
        MOV     A,R1
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiPicker40
        REQUIRE ??Subroutine103_0
        ; // Fall through to label ??Subroutine103_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine103_0:
          CFI Block cfiCond41 Using cfiCommon0
          CFI Function zclGeneral_SendSceneCopy
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond42 Using cfiCommon0
          CFI (cfiCond42) Function zclGeneral_SendSceneCopyResponse
          CFI (cfiCond42) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond42) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond42) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond42) CFA_SP SP+0
          CFI (cfiCond42) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function zclGeneral_SendGroupRequest
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond43) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond43) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond43) CFA_SP SP+0
          CFI (cfiCond43) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function zclGeneral_SendGroupResponse
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+0
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+0
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+0
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker47 Using cfiCommon1
          CFI (cfiPicker47) NoFunction
          CFI (cfiPicker47) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_170:
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        RET
          CFI EndBlock cfiCond41
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiPicker47
//  546 
//  547 /*********************************************************************
//  548  * @fn      zclGeneral_SendGroupViewResponse
//  549  *
//  550  * @brief   Call to send Group Response Command
//  551  *
//  552  * @param   srcEP - Sending application's endpoint
//  553  * @param   dstAddr - where you want the message to go
//  554  * @param   cmd - either COMMAND_GROUP_ADD_RSP or COMMAND_GROUP_REMOVE_RSP
//  555  * @param   status - group command status
//  556  * @param   grp - group info
//  557  *
//  558  * @return  ZStatus_t
//  559  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  560 ZStatus_t zclGeneral_SendGroupViewResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupViewResponse:
          CFI Block cfiBlock48 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
        CODE
//  561                                             uint8 status, aps_Group_t *grp, uint8 disableDefaultRsp, uint8 seqNum )
//  562 {
        FUNCALL zclGeneral_SendGroupViewResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V0 + 9,R1
        MOV     ?V0 + 14,R2
        MOV     ?V0 + 15,R3
        MOV     ?V0 + 7,R4
        MOV     ?V0 + 12,R5
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
//  563   uint8 *buf;
//  564   uint8 len;
//  565   ZStatus_t stat;
//  566 
//  567   len = 1 + 2 + 1; // Status + Group ID + name length
        MOV     R0,#0x4
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
//  568 
//  569   if ( status == ZCL_STATUS_SUCCESS )
        MOV     A,?V0 + 4
        ADD     A,#0x2
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 5
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     A,R4
        JNZ     ??zclGeneral_SendGroupViewResponse_0
//  570   {
//  571     len += grp->name[0];  // String length
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        ADD     A,#0x4
        MOV     R0,A
//  572   }
//  573 
//  574   buf = zcl_mem_alloc( len );
??zclGeneral_SendGroupViewResponse_0:
        MOV     DPL,R0
        MOV     R6,DPL
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  575   if ( buf )
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??zclGeneral_SendGroupViewResponse_1 & 0xFFFF
//  576   {
//  577     buf[0] = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
//  578     buf[1] = LO_UINT16( grp->ID );
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        LCALL   ?Subroutine66 & 0xFFFF
//  579     buf[2] = HI_UINT16( grp->ID );
??CrossCallReturnLabel_108:
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  580 
//  581     if ( status == ZCL_STATUS_SUCCESS )
        MOV     A,R2
        ADD     A,#0x3
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,?V0 + 7
        JNZ     ??zclGeneral_SendGroupViewResponse_2
//  582     {
//  583       buf[3] = grp->name[0]; // string length
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine66 & 0xFFFF
//  584       zcl_memcpy( &buf[4], (&grp->name[1]), grp->name[0] );
//  585     }
??CrossCallReturnLabel_109:
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 4,R1
        MOV     ?V0 + 5,R2
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,?V0 + 0
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        SJMP    ??zclGeneral_SendGroupViewResponse_3
//  586     else //ZCL_STATUS_NOT_FOUND
//  587     {
//  588       buf[3] = 0;
??zclGeneral_SendGroupViewResponse_2:
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
//  589     }
//  590 
//  591     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  592                             COMMAND_GROUP_VIEW_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  593                             disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendGroupViewResponse_3:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,?V0 + 8
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     A,?V0 + 12
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0 + 2,#0x1
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R2,?V0 + 14
        MOV     R3,?V0 + 15
        MOV     R1,?V0 + 9
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R1
        MOV     R6,A
//  594     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_SendGroupViewResponse_4
//  595   }
//  596   else
//  597   {
//  598     stat = ZMemError;
??zclGeneral_SendGroupViewResponse_1:
        MOV     R6,#0x10
//  599   }
//  600 
//  601   return ( stat );
??zclGeneral_SendGroupViewResponse_4:
        LJMP    ?Subroutine10 & 0xFFFF
          CFI EndBlock cfiBlock48
//  602 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond49 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond50) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond50) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond50) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond50) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond50) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond50) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond50) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond50) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond50) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond50) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond50) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond50) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond50) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond50) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond50) CFA_SP SP+0
          CFI (cfiCond50) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker51 Using cfiCommon1
          CFI (cfiPicker51) NoFunction
          CFI (cfiPicker51) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        RET
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiPicker51
//  603 #endif // ZCL_GROUPS
//  604 
//  605 #ifdef ZCL_SCENES
//  606 /*********************************************************************
//  607  * @fn      zclGeneral_SendAddSceneRequest
//  608  *
//  609  * @brief   Send the (Enhanced) Add Scene Request to a device. You can
//  610  *           also use the appropriate macro.
//  611  *
//  612  * @param   srcEP - Sending Apps endpoint
//  613  * @param   dstAddr - where to send the request
//  614  * @param   scene - pointer to the scene structure
//  615  * @param  cmd - COMMAND_SCENE_ADD or COMMAND_SCENE_ENHANCED_ADD
//  616  * @param   disableDefaultRsp - whether to disable the Default Response command
//  617  * @param   seqNum - sequence number
//  618  *
//  619  * @return  ZStatus_t
//  620  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  621 ZStatus_t zclGeneral_SendAddSceneRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendAddSceneRequest:
          CFI Block cfiBlock52 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
        CODE
//  622                                           uint8 cmd, zclGeneral_Scene_t *scene,
//  623                                           uint8 disableDefaultRsp, uint8 seqNum )
//  624 {
        FUNCALL zclGeneral_SendAddSceneRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_183:
        MOV     A,R4
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V0 + 14,R1
        MOV     ?V0 + 15,R5
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
//  625   uint8 *buf;
//  626   uint8 *pBuf;
//  627   uint8 len;
//  628   ZStatus_t status;
//  629 
//  630   len = 2 + 1 + 2;    // Group ID + Scene ID + transition time
//  631   len += scene->name[0] + 1; // String + 1 for length
//  632 
//  633   // Add something for the extension field length
//  634   len += scene->extLen;
??CrossCallReturnLabel_8:
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_53:
        ADD     A,#0x6
        MOV     R0,A
//  635 
//  636   buf = zcl_mem_alloc( len );
        MOV     DPL,R0
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,?V0 + 3
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
//  637   if ( buf )
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     $+5
        LJMP    ??zclGeneral_SendAddSceneRequest_0 & 0xFFFF
//  638   {
//  639     pBuf = buf;
        MOV     R6,?V0 + 8
        MOV     R7,?V0 + 9
//  640     *pBuf++ = LO_UINT16( scene->groupID );
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        LCALL   ?Subroutine20 & 0xFFFF
//  641     *pBuf++ = HI_UINT16( scene->groupID );
//  642     *pBuf++ = scene->ID;
//  643     *pBuf++ = LO_UINT16( scene->transTime );
??CrossCallReturnLabel_10:
        MOV     A,?V0 + 0
        ADD     A,#0x3
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_80:
        MOV     R7,DPH
//  644     *pBuf++ = HI_UINT16( scene->transTime );
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ?Subroutine28 & 0xFFFF
//  645     *pBuf++ = scene->name[0]; // string length
??CrossCallReturnLabel_31:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
//  646     zcl_memcpy( pBuf, &(scene->name[1]), scene->name[0] );
        ; Setup parameters for call to function osal_memcpy
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  647     pBuf += scene->name[0]; // move pass name
//  648 
//  649     // Add the extension fields
//  650     if ( scene->extLen > 0 )
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOVX    A,@DPTR
        MOV     R1,A
        JZ      ??zclGeneral_SendAddSceneRequest_1
//  651       zcl_memcpy( pBuf, scene->extField, scene->extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0 + 0
        ADD     A,#0x18
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 0,R1
        MOV     R4,?V0 + 0
        MOV     R5,#0x0
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R6
        ADD     A,R0
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  652 
//  653     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  654                               cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  655                               disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendAddSceneRequest_1:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     A,?V0 + 7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,?V0 + 15
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_130:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     R4,#0x5
        MOV     R5,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_204:
        MOV     R1,?V0 + 14
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        MOV     R6,A
//  656     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_SendAddSceneRequest_2
//  657   }
//  658   else
//  659     status = ZMemError;
??zclGeneral_SendAddSceneRequest_0:
        MOV     R6,#0x10
//  660 
//  661   return ( status );
??zclGeneral_SendAddSceneRequest_2:
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock52
//  662 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond53 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+0
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker55 Using cfiCommon1
          CFI (cfiPicker55) NoFunction
          CFI (cfiPicker55) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x8
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiPicker55
        REQUIRE ??Subroutine104_0
        ; // Fall through to label ??Subroutine104_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine104_0:
          CFI Block cfiCond56 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+0
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond58) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond58) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond58) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond58) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond58) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond58) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond58) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond58) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond58) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+0
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker59 Using cfiCommon1
          CFI (cfiPicker59) NoFunction
          CFI (cfiPicker59) Picker
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        RET
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiPicker59
//  663 
//  664 /*********************************************************************
//  665  * @fn      zclGeneral_SendSceneRequest
//  666  *
//  667  * @brief   Send a Scene Request to a device.  You can also use the
//  668  *          appropriate macro.
//  669  *
//  670  * @param   srcEP - Sending Apps endpoint
//  671  * @param   dstAddr - where to send the request
//  672  * @param   cmd - one of the following:
//  673  *              COMMAND_SCENE_VIEW
//  674  *              COMMAND_SCENE_REMOVE
//  675  *              COMMAND_SCENE_REMOVE_ALL
//  676  *              COMMAND_SCENE_STORE
//  677  *              COMMAND_SCENE_RECALL
//  678  *              COMMAND_SCENE_GET_MEMBERSHIP
//  679  *              COMMAND_SCENE_ENHANCED_VIEW
//  680  * @param   groupID - group ID
//  681  * @param   sceneID - scene ID (not applicable to COMMAND_SCENE_REMOVE_ALL and
//  682  *                    COMMAND_SCENE_GET_MEMBERSHIP)
//  683  * @param   disableDefaultRsp - whether to disable the Default Response command
//  684  * @param   seqNum - sequence number
//  685  * @return  ZStatus_t
//  686  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  687 ZStatus_t zclGeneral_SendSceneRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneRequest:
          CFI Block cfiBlock60 Using cfiCommon0
          CFI Function zclGeneral_SendSceneRequest
        CODE
//  688                                        uint8 cmd, uint16 groupID, uint8 sceneID,
//  689                                        uint8 disableDefaultRsp, uint8 seqNum )
//  690 {
        FUNCALL zclGeneral_SendSceneRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     ?V0 + 0,R5
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
//  691   uint8 buf[3];
//  692   uint8 len = 2;
        MOV     R4,#0x2
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine31 & 0xFFFF
//  693 
//  694   buf[0] = LO_UINT16( groupID );
//  695   buf[1] = HI_UINT16( groupID );
??CrossCallReturnLabel_38:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
//  696 
//  697   if ( cmd != COMMAND_SCENE_REMOVE_ALL && cmd != COMMAND_SCENE_GET_MEMBERSHIP )
        MOV     A,#0x3
        XRL     A,R7
        JZ      ??zclGeneral_SendSceneRequest_0
        MOV     A,#0x6
        XRL     A,R7
        JZ      ??zclGeneral_SendSceneRequest_0
//  698   {
//  699     buf[2] = sceneID;
        MOV     A,R4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
//  700     len++;
        INC     R4
//  701   }
//  702 
//  703   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  704                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  705                             disableDefaultRsp, 0, seqNum, len, buf ) );
??zclGeneral_SendSceneRequest_0:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R7
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x5
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock60
//  706 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond61 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function zclGeneral_SendSceneRequest
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+0
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker63 Using cfiCommon1
          CFI (cfiPicker63) NoFunction
          CFI (cfiPicker63) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_297:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiPicker63
//  707 
//  708 /*********************************************************************
//  709  * @fn      zclGeneral_SendSceneResponse
//  710  *
//  711  * @brief   Send Group Response (not Group View Response)
//  712  *
//  713  * @param   srcEP - Sending application's endpoint
//  714  * @param   dstAddr - where you want the message to go
//  715  * @param   cmd - either COMMAND_SCENE_ADD_RSP, COMMAND_SCENE_REMOVE_RSP
//  716  *                COMMAND_SCENE_STORE_RSP, or COMMAND_SCENE_REMOVE_ALL_RSP
//  717  * @param   status - scene command status
//  718  * @param   groupID - what group
//  719  * @param   sceneID - what scene (not applicable to COMMAND_SCENE_REMOVE_ALL_RSP)
//  720  *
//  721  * @return  ZStatus_t
//  722  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  723 ZStatus_t zclGeneral_SendSceneResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneResponse:
          CFI Block cfiBlock64 Using cfiCommon0
          CFI Function zclGeneral_SendSceneResponse
        CODE
//  724                                         uint8 cmd, uint8 status, uint16 groupID,
//  725                                         uint8 sceneID, uint8 disableDefaultRsp, uint8 seqNum )
//  726 {
        FUNCALL zclGeneral_SendSceneResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     ?V0 + 0,R5
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
//  727   uint8 buf[4];
//  728   uint8 len = 1 + 2; // Status + Group ID
        MOV     R4,#0x3
//  729 
//  730   buf[0] = status;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
//  731   buf[1] = LO_UINT16( groupID );
??CrossCallReturnLabel_27:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  732   buf[2] = HI_UINT16( groupID );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
//  733 
//  734   if ( cmd != COMMAND_SCENE_REMOVE_ALL_RSP )
        MOV     A,R4
        XRL     A,R7
        JZ      ??zclGeneral_SendSceneResponse_0
//  735   {
//  736     buf[3] = sceneID;
        MOV     A,R4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
//  737     len++;
        INC     R4
//  738   }
//  739 
//  740   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  741                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  742                           disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneResponse_0:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,?V0 + 4
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R7
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R4,#0x5
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock64
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
//  743 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock65 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock65
//  744 
//  745 /*********************************************************************
//  746  * @fn      zclGeneral_SendSceneViewResponse
//  747  *
//  748  * @brief   Call to send Scene (Enahced) View Response Command. You can
//  749  *           also use the appropriate macro.
//  750  *
//  751  * @param   srcEP - Sending application's endpoint
//  752  * @param   dstAddr - where you want the message to go
//  753  * @param   cmd - either COMMAND_SCENE_VIEW_RSP or COMMAND_SCENE_ENHANCED_VIEW_RSP
//  754  * @param   status - scene command status
//  755  * @param   scene - scene info
//  756  *
//  757  * @return  ZStatus_t
//  758  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  759 ZStatus_t zclGeneral_SendSceneViewRsp( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneViewRsp:
          CFI Block cfiBlock66 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
        CODE
//  760                                        uint8 cmd, uint8 status, zclGeneral_Scene_t *scene,
//  761                                        uint8 disableDefaultRsp, uint8 seqNum )
//  762 {
        FUNCALL zclGeneral_SendSceneViewRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_184:
        MOV     ?V0 + 14,R4
        MOV     ?V0 + 7,R5
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 15,A
//  763   uint8 *buf;
//  764   uint8 *pBuf;
//  765   uint8 len = 1 + 2 + 1; // Status + Group ID + Scene ID
        MOV     R0,#0x4
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
//  766   ZStatus_t stat;
//  767 
//  768   if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_9:
        MOV     A,R5
        JNZ     ??zclGeneral_SendSceneViewRsp_0
//  769   {
//  770     len += 2; // Transition Time
//  771     len += scene->name[0] + 1; // string + 1 for length
//  772 
//  773     // Add something for the extension field length
//  774     len += scene->extLen;
        LCALL   ?Subroutine42 & 0xFFFF
//  775   }
??CrossCallReturnLabel_54:
        ADD     A,#0x7
        MOV     R0,A
//  776 
//  777   buf = zcl_mem_alloc( len );
??zclGeneral_SendSceneViewRsp_0:
        MOV     DPL,R0
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
//  778   if ( buf )
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     $+5
        LJMP    ??zclGeneral_SendSceneViewRsp_1 & 0xFFFF
//  779   {
//  780     pBuf = buf;
        MOV     R6,?V0 + 8
        MOV     R7,?V0 + 9
//  781     *pBuf++ = status;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
//  782     *pBuf++ = LO_UINT16( scene->groupID );
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_81:
        LCALL   ?Subroutine20 & 0xFFFF
//  783     *pBuf++ = HI_UINT16( scene->groupID );
//  784     *pBuf++ = scene->ID;
//  785     if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_11:
        MOV     A,?V0 + 7
        JZ      $+5
        LJMP    ??zclGeneral_SendSceneViewRsp_2 & 0xFFFF
//  786     {
//  787       uint16 transTime = scene->transTime;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine48 & 0xFFFF
//  788       if ( cmd == COMMAND_SCENE_ENHANCED_VIEW_RSP )
??CrossCallReturnLabel_67:
        MOV     A,#0x41
        XRL     A,?V0 + 14
        JNZ     ??zclGeneral_SendSceneViewRsp_3
//  789       {
//  790         // Transition time is in 1/10s
//  791         transTime *= 10;
//  792         transTime += scene->transTime100ms;
        MOV     A,R0
        MOV     B,#0xa
        MUL     AB
        MOV     R0,A
        MOV     R2,B
        MOV     B,#0xa
        MOV     A,R1
        MUL     AB
        ADD     A,R2
        MOV     R1,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
//  793       }
//  794 
//  795       *pBuf++ = LO_UINT16( transTime );
??zclGeneral_SendSceneViewRsp_3:
        MOV     A,R0
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine120_0 & 0xFFFF
//  796       *pBuf++ = HI_UINT16( transTime );
??CrossCallReturnLabel_254:
        INC     DPTR
        INC     R6
        INC     R6
        MOV     R7,DPH
//  797       *pBuf++ = scene->name[0]; // string length
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        LCALL   ?Subroutine28 & 0xFFFF
//  798       if ( scene->name[0] != 0 )
??CrossCallReturnLabel_32:
        MOV     R1,A
        JZ      ??zclGeneral_SendSceneViewRsp_4
//  799       {
//  800         zcl_memcpy( pBuf, &(scene->name[1]), scene->name[0] );
        ; Setup parameters for call to function osal_memcpy
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 4,R1
        MOV     R4,?V0 + 4
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  801         pBuf += scene->name[0]; // move pass name
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R6
        ADD     A,R0
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
//  802       }
//  803 
//  804       // Add the extension fields
//  805       if ( scene->extLen > 0 )
??zclGeneral_SendSceneViewRsp_4:
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOVX    A,@DPTR
        MOV     R1,A
        JZ      ??zclGeneral_SendSceneViewRsp_2
//  806         zcl_memcpy( pBuf, scene->extField, scene->extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0 + 0
        ADD     A,#0x18
        LCALL   ??Subroutine104_0 & 0xFFFF
//  807     }
??CrossCallReturnLabel_173:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 0,R1
        MOV     R4,?V0 + 0
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  808 
//  809     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  810                             cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  811                             disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneViewRsp_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     A,?V0 + 15
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_131:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,?V0 + 14
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     R4,#0x5
        MOV     R5,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_205:
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        MOV     R6,A
//  812     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_SendSceneViewRsp_5
//  813   }
//  814   else
//  815     stat = ZMemError;
??zclGeneral_SendSceneViewRsp_1:
        MOV     R6,#0x10
//  816 
//  817   return ( stat );
??zclGeneral_SendSceneViewRsp_5:
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock66
//  818 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond67 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+0
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker69 Using cfiCommon1
          CFI (cfiPicker69) NoFunction
          CFI (cfiPicker69) Picker
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_179:
        RET
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiPicker69

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_81
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond71) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond71) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond71) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond71) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+0
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_10
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond72) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond72) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond72) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond72) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond72) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond72) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond72) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+0
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_11
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond73) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond73) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+0
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_10
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond74) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond74) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond74) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+0
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_11
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond75) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond75) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond75) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond75) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond75) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond75) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond75) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+0
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_31
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond76) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond76) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond76) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond76) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+0
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_32
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond77) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond77) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond77) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond77) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+0
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker78 Using cfiCommon1
          CFI (cfiPicker78) NoFunction
          CFI (cfiPicker78) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        INC     R6
        RET
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiPicker78

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond79 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_53
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+0
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker81 Using cfiCommon1
          CFI (cfiPicker81) NoFunction
          CFI (cfiPicker81) Picker
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOVX    A,@DPTR
        ADD     A,R0
        RET
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiPicker81

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond82 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond83) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond83) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond83) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond83) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond83) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+0
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker84 Using cfiCommon1
          CFI (cfiPicker84) NoFunction
          CFI (cfiPicker84) Picker
        LCALL   ??Subroutine105_0 & 0xFFFF
??CrossCallReturnLabel_176:
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiPicker84

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond85 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond86) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond86) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond86) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond86) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond86) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+0
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker87 Using cfiCommon1
          CFI (cfiPicker87) NoFunction
          CFI (cfiPicker87) Picker
        MOV     R7,DPH
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_177:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_178:
        RET
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiPicker87

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond88 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_11
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond89) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond89) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond89) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+0
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_10
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond90) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond90) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond90) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond90) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond90) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+0
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_11
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+0
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker92 Using cfiCommon1
          CFI (cfiPicker92) NoFunction
          CFI (cfiPicker92) Picker
        INC     DPTR
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiPicker92
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine105_0:
          CFI Block cfiCond93 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_32
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond94) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond94) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond94) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond94) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond94) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond94) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+0
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_10
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond95) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond95) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond95) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond95) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond95) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+0
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_11
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond96) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond96) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond96) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+0
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_10
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond97) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond97) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond97) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond97) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond97) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+0
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_11
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond98) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond98) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond98) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+0
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker99 Using cfiCommon1
          CFI (cfiPicker99) NoFunction
          CFI (cfiPicker99) Picker
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_180:
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiPicker99

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond100 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond101) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+0
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker102 Using cfiCommon1
          CFI (cfiPicker102) NoFunction
          CFI (cfiPicker102) Picker
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_134:
        ADD     A,#0x17
        MOV     ?V0 + 12,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 13,A
        MOV     A,?V0 + 0
        ADD     A,#0x7
        MOV     ?V0 + 10,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 11,A
        RET
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiPicker102
//  819 
//  820 /*********************************************************************
//  821  * @fn      zclGeneral_SendSceneGetMembershipResponse
//  822  *
//  823  * @brief   Call to send Scene Get Membership Response Command
//  824  *
//  825  * @param   srcEP - Sending application's endpoint
//  826  * @param   dstAddr - where you want the message to go
//  827  * @param   status - scene command status
//  828  * @param   capacity - remaining capacity of the scene table
//  829  * @param   sceneCnt - number of scenes in the scene list
//  830  * @param   sceneList - list of scene IDs
//  831  * @param   groupID - group ID that scene belongs to
//  832  * @param   seqNum - sequence number
//  833  *
//  834  * @return  ZStatus_t
//  835  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  836 ZStatus_t zclGeneral_SendSceneGetMembershipResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneGetMembershipResponse:
          CFI Block cfiBlock103 Using cfiCommon0
          CFI Function zclGeneral_SendSceneGetMembershipResponse
        CODE
//  837                                                      uint8 status, uint8 capacity, uint8 sceneCnt, uint8 *sceneList,
//  838                                                      uint16 groupID, uint8 disableDefaultRsp, uint8 seqNum )
//  839 {
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V0 + 9,R1
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
//  840   uint8 *buf;
//  841   uint8 *pBuf;
//  842   uint8 len = 1 + 1 + 2; // Status + Capacity + Group ID;
        MOV     R0,#0x4
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
//  843   uint8 i;
//  844   ZStatus_t stat;
//  845 
//  846   if ( status == ZCL_STATUS_SUCCESS )
        MOV     A,R6
        JNZ     ??zclGeneral_SendSceneGetMembershipResponse_0
//  847   {
//  848     len++; // Scene Count
//  849     len += sceneCnt; // Scene List (Scene ID is a single octet)
        MOV     A,#0x5
        ADD     A,?V0 + 8
        MOV     R0,A
//  850   }
//  851 
//  852   buf = zcl_mem_alloc( len );
??zclGeneral_SendSceneGetMembershipResponse_0:
        MOV     DPL,R0
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  853   if ( buf )
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??zclGeneral_SendSceneGetMembershipResponse_1 & 0xFFFF
//  854   {
//  855     pBuf = buf;
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
//  856     *pBuf++ = status;
        MOV     A,R6
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
//  857     *pBuf++ = capacity;
        MOV     A,R7
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_104:
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine115_0 & 0xFFFF
//  858     *pBuf++ = LO_UINT16( groupID );
??CrossCallReturnLabel_206:
        MOV     A,R2
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine111_0 & 0xFFFF
//  859     *pBuf++ = HI_UINT16( groupID );
??CrossCallReturnLabel_181:
        INC     DPTR
//  860     if ( status == ZCL_STATUS_SUCCESS )
        MOV     A,R6
        JNZ     ??zclGeneral_SendSceneGetMembershipResponse_2
//  861     {
//  862       *pBuf++ = sceneCnt;
        MOV     A,?V0 + 8
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        INC     R0
        INC     R0
        MOV     R1,DPH
//  863       for ( i = 0; i < sceneCnt; i++ )
        MOV     R4,#0x0
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_207:
        SJMP    ??zclGeneral_SendSceneGetMembershipResponse_3
//  864         *pBuf++ = sceneList[i];
??zclGeneral_SendSceneGetMembershipResponse_4:
        MOV     ?V0 + 4,R4
        MOV     A,R2
        ADD     A,?V0 + 4
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_50:
        INC     R4
??zclGeneral_SendSceneGetMembershipResponse_3:
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 8
        JC      ??zclGeneral_SendSceneGetMembershipResponse_4
//  865     }
//  866 
//  867     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  868                             COMMAND_SCENE_GET_MEMBERSHIP_RSP, TRUE,
//  869                             ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneGetMembershipResponse_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,?V0 + 7
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,?V0 + 6
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0 + 2,#0x1
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 2,#0x6
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R4,#0x5
        MOV     R5,#0x0
        MOV     R2,?V0 + 10
        MOV     R3,?V0 + 11
        MOV     R1,?V0 + 9
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 2,A
//  870     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_SendSceneGetMembershipResponse_5
//  871   }
//  872   else
//  873     stat = ZMemError;
??zclGeneral_SendSceneGetMembershipResponse_1:
        MOV     ?V0 + 2,#0x10
//  874 
//  875   return ( stat );
??zclGeneral_SendSceneGetMembershipResponse_5:
        MOV     R1,?V0 + 2
          CFI EndBlock cfiBlock103
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
//  876 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock104 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock104

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond105 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond106) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond106) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond106) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+0
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+0
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker108 Using cfiCommon1
          CFI (cfiPicker108) NoFunction
          CFI (cfiPicker108) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        RET
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiPicker108

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond109 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+0
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker111 Using cfiCommon1
          CFI (cfiPicker111) NoFunction
          CFI (cfiPicker111) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        RET
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiPicker111
//  877 
//  878 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  879 /*********************************************************************
//  880  * @fn      zclGeneral_SendSceneCopy
//  881  *
//  882  * @brief   Send Scene Copy Request to a device
//  883  *
//  884  * @param   srcEP - sending application's endpoint
//  885  * @param   dstAddr - where to send the request
//  886  * @param   mode - how scene copy is to proceed
//  887  * @param   groupIDFrom - group from which scene to be copied
//  888  * @param   sceneIDFrom - scene from which scene to be copied
//  889  * @param   groupIDTo - group to which scene to be copied
//  890  * @param   sceneIDTo - scene to which scene to be copied
//  891  * @param   disableDefaultRsp - disable Default Response command
//  892  * @param   seqNum - the identification number for the transaction
//  893  *
//  894  * @return  ZStatus_t
//  895  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  896 ZStatus_t zclGeneral_SendSceneCopy( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneCopy:
          CFI Block cfiBlock112 Using cfiCommon0
          CFI Function zclGeneral_SendSceneCopy
        CODE
//  897                                     uint8 mode, uint16 groupIDFrom, uint8 sceneIDFrom,
//  898                                     uint16 groupIDTo, uint8 sceneIDTo,
//  899                                     uint8 disableDefaultRsp, uint8 seqNum )
//  900 {
        FUNCALL zclGeneral_SendSceneCopy, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0 + 0,R1
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
//  901   uint8 buf[7];
//  902 
//  903   buf[0] = mode;
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
//  904   buf[1] = LO_UINT16( groupIDFrom );
??CrossCallReturnLabel_28:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  905   buf[2] = HI_UINT16( groupIDFrom );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
//  906   buf[3] = sceneIDFrom;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
//  907   buf[4] = LO_UINT16( groupIDTo );
??CrossCallReturnLabel_68:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  908   buf[5] = HI_UINT16( groupIDTo );
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
//  909   buf[6] = sceneIDTo;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        LCALL   ??Subroutine103_0 & 0xFFFF
//  910 
//  911   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  912                             COMMAND_SCENE_COPY, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  913                             disableDefaultRsp, 0, seqNum, 7, buf ) );
??CrossCallReturnLabel_167:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 2,#0x7
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 1,#0x42
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R4,#0x5
        MOV     R5,#0x0
        MOV     R1,?V0 + 0
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x7
        LJMP    ??Subroutine108_0 & 0xFFFF
          CFI EndBlock cfiBlock112
//  914 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond113 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function zclGeneral_SendSceneResponse
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+0
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function zclGeneral_SendSceneCopy
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+0
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function zclGeneral_SendSceneCopyResponse
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+0
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+0
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker118 Using cfiCommon1
          CFI (cfiPicker118) NoFunction
          CFI (cfiPicker118) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_360:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiPicker118
//  915 
//  916 /*********************************************************************
//  917  * @fn      zclGeneral_SendSceneCopyResponse
//  918  *
//  919  * @brief   Send Scene Copy Response to a device
//  920  *
//  921  * @param   srcEP - sending application's endpoint
//  922  * @param   dstAddr - where to send the request
//  923  * @param   status - status of copy scene attemp
//  924  * @param   groupIDFrom - group from which scene was copied
//  925  * @param   sceneIDFrom - scene from which scene was copied
//  926  * @param   disableDefaultRsp - disable Default Response command
//  927  * @param   seqNum - the identification number for the transaction
//  928  *
//  929  * @return  ZStatus_t
//  930  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  931 ZStatus_t zclGeneral_SendSceneCopyResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneCopyResponse:
          CFI Block cfiBlock119 Using cfiCommon0
          CFI Function zclGeneral_SendSceneCopyResponse
        CODE
//  932                                             uint8 status, uint16 groupIDFrom, uint8 sceneIDFrom,
//  933                                             uint8 disableDefaultRsp, uint8 seqNum )
//  934 {
        FUNCALL zclGeneral_SendSceneCopyResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     ?V0 + 0,R5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
//  935   uint8 buf[4];
//  936 
//  937   buf[0] = status;
        MOV     A,R7
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
//  938   buf[1] = LO_UINT16( groupIDFrom );
??CrossCallReturnLabel_29:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  939   buf[2] = HI_UINT16( groupIDFrom );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
//  940   buf[3] = sceneIDFrom;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        LCALL   ??Subroutine103_0 & 0xFFFF
//  941 
//  942   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  943                             COMMAND_SCENE_COPY_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  944                             disableDefaultRsp, 0, seqNum, 4, buf ) );
??CrossCallReturnLabel_168:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 1,#0x42
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x5
          CFI EndBlock cfiBlock119
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
//  945 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock120 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x4
        LJMP    ??Subroutine108_0 & 0xFFFF
          CFI EndBlock cfiBlock120
//  946 #endif // ZCL_LIGHT_LINK_ENHANCE
//  947 #endif // ZCL_SCENES
//  948 
//  949 #ifdef ZCL_ON_OFF
//  950 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  951 /*********************************************************************
//  952  * @fn      zclGeneral_SendOnOff_CmdOffWithEffect
//  953  *
//  954  * @brief   Call to send out an Off with Effect Command.
//  955  *
//  956  * @param   srcEP - Sending application's endpoint
//  957  * @param   dstAddr - where you want the message to go
//  958  * @param   effectId - fading effect to use when switching light off
//  959  * @param   effectVariant - which variant of effect to be triggered
//  960  * @param   disableDefaultRsp - whether to disable the Default Response command
//  961  * @param   seqNum - sequence number
//  962  *
//  963  * @return  ZStatus_t
//  964  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  965 ZStatus_t zclGeneral_SendOnOff_CmdOffWithEffect( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendOnOff_CmdOffWithEffect:
          CFI Block cfiBlock121 Using cfiCommon0
          CFI Function zclGeneral_SendOnOff_CmdOffWithEffect
        CODE
//  966                                                  uint8 effectId, uint8 effectVariant,
//  967                                                  uint8 disableDefaultRsp, uint8 seqNum )
//  968 {
        FUNCALL zclGeneral_SendOnOff_CmdOffWithEffect, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
//  969   uint8 buf[2];
//  970 
//  971   buf[0] = effectId;
//  972   buf[1] = effectVariant;
??CrossCallReturnLabel_21:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine52 & 0xFFFF
//  973 
//  974   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF,
//  975                           COMMAND_OFF_WITH_EFFECT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  976                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_159:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#0x40
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R4,#0x6
        LJMP    ??Subroutine106_0 & 0xFFFF
          CFI EndBlock cfiBlock121
//  977 }
//  978 
//  979 /*********************************************************************
//  980  * @fn      zclGeneral_SendOnOff_CmdOnWithTimedOff
//  981  *
//  982  * @brief   Call to send out an On with Timed Off Command.
//  983  *
//  984  * @param   srcEP - Sending application's endpoint
//  985  * @param   dstAddr - where you want the message to go
//  986  * @param   onOffCtrl - how the lamp is to be operated
//  987  * @param   onTime - the length of time (in 1/10ths second) that the lamp is to remain on, before automatically turning off
//  988  * @param   offWaitTime - the length of time (in 1/10ths second) that the lamp shall remain off, and guarded to prevent an on command turning the light back on.
//  989  * @param   disableDefaultRsp - whether to disable the Default Response command
//  990  * @param   seqNum - sequence number
//  991  *
//  992  * @return  ZStatus_t
//  993  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  994 ZStatus_t zclGeneral_SendOnOff_CmdOnWithTimedOff ( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendOnOff_CmdOnWithTimedOff:
          CFI Block cfiBlock122 Using cfiCommon0
          CFI Function zclGeneral_SendOnOff_CmdOnWithTimedOff
        CODE
//  995                                                    zclOnOffCtrl_t onOffCtrl, uint16 onTime, uint16 offWaitTime,
//  996                                                    uint8 disableDefaultRsp, uint8 seqNum )
//  997 {
        FUNCALL zclGeneral_SendOnOff_CmdOnWithTimedOff, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
//  998   uint8 buf[5];
//  999 
// 1000   buf[0] = onOffCtrl.byte;
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
// 1001   buf[1] = LO_UINT16( onTime );
??CrossCallReturnLabel_55:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
// 1002   buf[2] = HI_UINT16( onTime );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 1003   buf[3] = LO_UINT16( offWaitTime );
??CrossCallReturnLabel_69:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 1004   buf[4] = HI_UINT16( offWaitTime );
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        LCALL   ??Subroutine102_0 & 0xFFFF
// 1005 
// 1006   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1007                           COMMAND_ON_WITH_TIMED_OFF, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1008                           disableDefaultRsp, 0, seqNum, 5, buf );
??CrossCallReturnLabel_160:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,#0x5
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V0 + 2
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 0,#0x42
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x6
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x5
        LJMP    ??Subroutine107_0 & 0xFFFF
          CFI EndBlock cfiBlock122
// 1009 }
// 1010 #endif // ZCL_LIGHT_LINK_ENHANCE
// 1011 #endif // ZCL_ON_OFF
// 1012 
// 1013 #ifdef ZCL_LEVEL_CTRL
// 1014 /*********************************************************************
// 1015  * @fn      zclGeneral_SendLevelControlMoveToLevelRequest
// 1016  *
// 1017  * @brief   Call to send out a Level Control Request. You can also use
// 1018  *          the appropriate macro.
// 1019  *
// 1020  * @param   srcEP - Sending application's endpoint
// 1021  * @param   dstAddr - where you want the message to go
// 1022  * @param   cmd - one of the following:
// 1023  *              COMMAND_LEVEL_MOVE_TO_LEVEL or
// 1024  *              COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF
// 1025  * @param   level - what level to move to
// 1026  * @param   transitionTime - how long to take to get to the level (in seconds)
// 1027  *
// 1028  * @return  ZStatus_t
// 1029  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1030 ZStatus_t zclGeneral_SendLevelControlMoveToLevelRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlMoveToLevelRequest:
          CFI Block cfiBlock123 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlMoveToLevelRequest
        CODE
// 1031                                                          uint8 cmd, uint8 level, uint16 transTime,
// 1032                                                          uint8 disableDefaultRsp, uint8 seqNum )
// 1033 {
        FUNCALL zclGeneral_SendLevelControlMoveToLevelRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     ?V0 + 0,R5
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
// 1034   uint8 buf[3];
// 1035 
// 1036   buf[0] = level;
??CrossCallReturnLabel_44:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
// 1037   buf[1] = LO_UINT16( transTime );
??CrossCallReturnLabel_30:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 1038   buf[2] = HI_UINT16( transTime );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine53 & 0xFFFF
// 1039 
// 1040   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1041                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1042                           disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_165:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 2,#0x3
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R7
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x8
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock123
// 1043 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond124 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+0
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker126 Using cfiCommon1
          CFI (cfiPicker126) NoFunction
          CFI (cfiPicker126) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_128:
        MOV     A,#0xf
        RET
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiPicker126
// 1044 
// 1045 /*********************************************************************
// 1046  * @fn      zclGeneral_SendLevelControlMoveRequest
// 1047  *
// 1048  * @brief   Call to send out a Level Control Request. You can also use
// 1049  *          the appropriate macro.
// 1050  *
// 1051  * @param   srcEP - Sending application's endpoint
// 1052  * @param   dstAddr - where you want the message to go
// 1053  * @param   cmd - one of the following:
// 1054  *              COMMAND_LEVEL_MOVE or
// 1055  *              COMMAND_LEVEL_MOVE_WITH_ON_OFF
// 1056  * @param   moveMode - LEVEL_MOVE_UP or
// 1057  *                     LEVEL_MOVE_DOWN
// 1058  * @param   rate - number of steps to take per second
// 1059  *
// 1060  * @return  ZStatus_t
// 1061  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1062 ZStatus_t zclGeneral_SendLevelControlMoveRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlMoveRequest:
          CFI Block cfiBlock127 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlMoveRequest
        CODE
// 1063                                                   uint8 cmd, uint8 moveMode, uint8 rate,
// 1064                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1065 {
        FUNCALL zclGeneral_SendLevelControlMoveRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
// 1066   uint8 buf[2];
// 1067 
// 1068   buf[0] = moveMode;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R5
        MOVX    @DPTR,A
// 1069   buf[1] = rate;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine102_0 & 0xFFFF
// 1070 
// 1071   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1072                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1073                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_161:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R4,#0x8
        SJMP    ??Subroutine106_0
          CFI EndBlock cfiBlock127
// 1074 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock128 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R4,#0x3
          CFI EndBlock cfiBlock128
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine106_0:
          CFI Block cfiBlock129 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x2
          CFI EndBlock cfiBlock129
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine107_0:
          CFI Block cfiBlock130 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Valid
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock130
// 1075 
// 1076 /*********************************************************************
// 1077  * @fn      zclGeneral_SendLevelControlStepRequest
// 1078  *
// 1079  * @brief   Call to send out a Level Control Request. You can also use
// 1080  *          the appropriate macro.
// 1081  *
// 1082  * @param   srcEP - Sending application's endpoint
// 1083  * @param   dstAddr - where you want the message to go
// 1084  * @param   cmd - one of the following:
// 1085  *              COMMAND_LEVEL_STEP
// 1086  *              COMMAND_LEVEL_STEP_WITH_ON_OFF
// 1087  * @param   stepMode - LEVEL_STEP_UP or
// 1088  *                     LEVEL_STEP_DOWN
// 1089  * @param   amount - number of levels to step
// 1090  * @param   transitionTime - time, in 1/10ths of a second, to take to perform the step
// 1091  *
// 1092  * @return  ZStatus_t
// 1093  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1094 ZStatus_t zclGeneral_SendLevelControlStepRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlStepRequest:
          CFI Block cfiBlock131 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlStepRequest
        CODE
// 1095                                                   uint8 cmd, uint8 stepMode, uint8 stepSize, uint16 transTime,
// 1096                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1097 {
        FUNCALL zclGeneral_SendLevelControlStepRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     ?V0 + 0,R5
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine82 & 0xFFFF
// 1098   uint8 buf[4];
// 1099 
// 1100   buf[0] = stepMode;
// 1101   buf[1] = stepSize;
??CrossCallReturnLabel_129:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 1102   buf[2] = LO_UINT16( transTime );
??CrossCallReturnLabel_70:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
// 1103   buf[3] = HI_UINT16( transTime );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine53 & 0xFFFF
// 1104 
// 1105   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1106                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1107                           disableDefaultRsp, 0, seqNum, 4, buf );
??CrossCallReturnLabel_166:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R7
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x8
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock131
// 1108 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond132 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_44
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+0
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+0
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker135 Using cfiCommon1
          CFI (cfiPicker135) NoFunction
          CFI (cfiPicker135) Picker
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiPicker135

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock136 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,#0x3
          CFI EndBlock cfiBlock136
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine108_0:
          CFI Block cfiBlock137 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock137
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiBlock138 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock138
// 1109 
// 1110 /*********************************************************************
// 1111  * @fn      zclGeneral_SendLevelControlStepRequest
// 1112  *
// 1113  * @brief   Call to send out a Level Control Request. You can also use
// 1114  *          the appropriate macro.
// 1115  *
// 1116  * @param   srcEP - Sending application's endpoint
// 1117  * @param   dstAddr - where you want the message to go
// 1118  * @param   cmd - one of the following:
// 1119  *              COMMAND_LEVEL_STOP
// 1120  *              COMMAND_LEVEL_STOP_WITH_ON_OFF
// 1121  *
// 1122  * @return  ZStatus_t
// 1123  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1124 ZStatus_t zclGeneral_SendLevelControlStopRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclGeneral_SendLevelControlStopRequest:
          CFI Block cfiBlock139 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlStopRequest
        CODE
// 1125                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1126 {
        FUNCALL zclGeneral_SendLevelControlStopRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
// 1127   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1128                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1129                           disableDefaultRsp, 0, seqNum, 0, NULL );
        ; Setup parameters for call to function zcl_SendCommand
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R7
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        SJMP    ??Subroutine108_0
          CFI EndBlock cfiBlock139
// 1130 }
// 1131 #endif // ZCL_LEVEL_CTRL
// 1132 
// 1133 #ifdef ZCL_ALARMS
// 1134 /*********************************************************************
// 1135  * @fn      zclGeneral_SendAlarm
// 1136  *
// 1137  * @brief   Call to send out an Alarm Request Command
// 1138  *
// 1139  * @param   srcEP - Sending application's endpoint
// 1140  * @param   dstAddr - where you want the message to go
// 1141  * @param   cmd - COMMAND_ALARMS_ALARM
// 1142  * @param   alarmCode - code for the cause of the alarm
// 1143  * @param   clusterID - cluster whose attribute generate the alarm
// 1144  *
// 1145  * @return  ZStatus_t
// 1146  */
// 1147 ZStatus_t zclGeneral_SendAlarm( uint8 srcEP, afAddrType_t *dstAddr,
// 1148                                 uint8 alarmCode, uint16 clusterID,
// 1149                                 uint8 disableDefaultRsp, uint8 seqNum )
// 1150 {
// 1151   uint8 buf[3];
// 1152 
// 1153   buf[0] = alarmCode;
// 1154   buf[1] = LO_UINT16( clusterID );
// 1155   buf[2] = HI_UINT16( clusterID );
// 1156 
// 1157   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1158                           COMMAND_ALARMS_ALARM, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1159                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1160 }
// 1161 
// 1162 /*********************************************************************
// 1163  * @fn      zclGeneral_SendAlarmReset
// 1164  *
// 1165  * @brief   Call to send out an Alarm Reset Command
// 1166  *
// 1167  * @param   srcEP - Sending application's endpoint
// 1168  * @param   dstAddr - where you want the message to go
// 1169  * @param   alarmCode - code for the cause of the alarm
// 1170  * @param   clusterID - cluster whose attribute generate the alarm
// 1171  *
// 1172  * @return  ZStatus_t
// 1173 */
// 1174 ZStatus_t zclGeneral_SendAlarmReset( uint8 srcEP, afAddrType_t *dstAddr,
// 1175                                      uint8 alarmCode, uint16 clusterID,
// 1176                                      uint8 disableDefaultRsp, uint8 seqNum )
// 1177 {
// 1178   uint8 buf[3];
// 1179 
// 1180   buf[0] = alarmCode;
// 1181   buf[1] = LO_UINT16( clusterID );
// 1182   buf[2] = HI_UINT16( clusterID );
// 1183 
// 1184   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1185                           COMMAND_ALARMS_RESET, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1186                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1187 }
// 1188 
// 1189 /*********************************************************************
// 1190  * @fn      zclGeneral_SendAlarmGetRespnose
// 1191  *
// 1192  * @brief   Call to send out an Alarm Get Response Command
// 1193  *
// 1194  * @param   srcEP - Sending application's endpoint
// 1195  * @param   dstAddr - where you want the message to go
// 1196  * @param   status - SUCCESS or NOT_FOUND
// 1197  * @param   alarmCode - code for the cause of the alarm
// 1198  * @param   clusterID - cluster whose attribute generate the alarm
// 1199  * @param   timeStamp - time at which the alarm occured
// 1200  *
// 1201  * @return  ZStatus_t
// 1202  */
// 1203 ZStatus_t zclGeneral_SendAlarmGetRespnose( uint8 srcEP, afAddrType_t *dstAddr,
// 1204                                            uint8 status, uint8 alarmCode, uint16 clusterID,
// 1205                                            uint32 timeStamp, uint8 disableDefaultRsp, uint8 seqNum )
// 1206 {
// 1207   uint8 buf[8];
// 1208   uint8 len = 1; // Status
// 1209 
// 1210   buf[0] = status;
// 1211   if ( status == ZCL_STATUS_SUCCESS )
// 1212   {
// 1213     len += 1 + 2 + 4; // Alarm code + Cluster ID + Time stamp
// 1214     buf[1] = alarmCode;
// 1215     buf[2] = LO_UINT16( clusterID );
// 1216     buf[3] = HI_UINT16( clusterID );
// 1217     zcl_buffer_uint32( &buf[4], timeStamp );
// 1218   }
// 1219 
// 1220   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1221                           COMMAND_ALARMS_GET_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1222                           disableDefaultRsp, 0, seqNum, len, buf );
// 1223 }
// 1224 
// 1225 #ifdef SE_UK_EXT
// 1226 /*********************************************************************
// 1227  * @fn      zclGeneral_SendAlarmGetEventLog
// 1228  *
// 1229  * @brief   Call to send out an Alarm Get Event Log Command
// 1230  *
// 1231  * @param   srcEP - Sending application's endpoint
// 1232  * @param   dstAddr - where you want the message to go
// 1233  * @param   pEventLog - pointer to Get Event Log Command
// 1234  * @param   disableDefaultRsp - disable default response
// 1235  * @param   seqNum - ZCL sequence number
// 1236  *
// 1237  * @return  ZStatus_t
// 1238  */
// 1239 ZStatus_t zclGeneral_SendAlarmGetEventLog( uint8 srcEP, afAddrType_t *dstAddr,
// 1240                                            zclGetEventLog_t *pEventLog,
// 1241                                            uint8 disableDefaultRsp, uint8 seqNum )
// 1242 {
// 1243   uint8 buf[10];
// 1244 
// 1245   buf[0] = pEventLog->logID;
// 1246   zcl_buffer_uint32( &buf[1], pEventLog->startTime );
// 1247   zcl_buffer_uint32( &buf[5], pEventLog->endTime );
// 1248   buf[9] = pEventLog->numEvents;
// 1249 
// 1250   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1251                           COMMAND_ALARMS_GET_EVENT_LOG, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1252                           disableDefaultRsp, 0, seqNum, 10, buf );
// 1253 }
// 1254 
// 1255 /*********************************************************************
// 1256  * @fn      zclGeneral_SendAlarmPublishEventLog
// 1257  *
// 1258  * @brief   Call to send out an Alarm Publish Event Log Command
// 1259  *
// 1260  * @param   srcEP - Sending application's endpoint
// 1261  * @param   dstAddr - where you want the message to go
// 1262  * @param   pEventLog - pointer to Publish Event Log Command
// 1263  * @param   disableDefaultRsp - disable default response
// 1264  * @param   seqNum - ZCL sequence number
// 1265  *
// 1266  * @return  ZStatus_t
// 1267  */
// 1268 ZStatus_t zclGeneral_SendAlarmPublishEventLog( uint8 srcEP, afAddrType_t *dstAddr,
// 1269                                                zclPublishEventLog_t *pEventLog,
// 1270                                                uint8 disableDefaultRsp, uint8 seqNum )
// 1271 {
// 1272   uint8 *buf;
// 1273   uint8 *pBuf;
// 1274   uint8 bufLen;
// 1275 
// 1276   // Log ID + Command Index + Total Commands + (numSubLogs * ( Event ID + Event Time))
// 1277   bufLen = 1 + 1 + 1 + (pEventLog->numSubLogs * (1 + 4));
// 1278 
// 1279   buf = zcl_mem_alloc( bufLen );
// 1280   if ( buf == NULL )
// 1281   {
// 1282     return (ZMemError);
// 1283   }
// 1284 
// 1285   pBuf = buf;
// 1286   *pBuf++ = pEventLog->logID;
// 1287   *pBuf++ = pEventLog->cmdIndex;
// 1288   *pBuf++ = pEventLog->totalCmds;
// 1289 
// 1290   for ( uint8 i = 0; i < pEventLog->numSubLogs; i++ )
// 1291   {
// 1292     zclEventLogPayload_t *pLogs = &(pEventLog->pLogs[i]);
// 1293 
// 1294     *pBuf++ = pLogs->eventId;
// 1295     pBuf = zcl_buffer_uint32( pBuf, pLogs->eventTime );
// 1296   }
// 1297 
// 1298   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1299                           COMMAND_ALARMS_PUBLISH_EVENT_LOG, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1300                           disableDefaultRsp, 0, seqNum, bufLen, buf );
// 1301 }
// 1302 #endif // SE_UK_EXT
// 1303 #endif // ZCL_ALARMS
// 1304 
// 1305 #ifdef ZCL_LOCATION
// 1306 /*********************************************************************
// 1307  * @fn      zclGeneral_SendLocationSetAbsolute
// 1308  *
// 1309  * @brief   Call to send out a Set Absolute Location Command
// 1310  *
// 1311  * @param   srcEP - Sending application's endpoint
// 1312  * @param   dstAddr - where you want the message to go
// 1313  * @param   absLoc - absolute location info
// 1314  *
// 1315  * @return  ZStatus_t
// 1316  */
// 1317 ZStatus_t zclGeneral_SendLocationSetAbsolute( uint8 srcEP, afAddrType_t *dstAddr,
// 1318                                               zclLocationAbsolute_t *absLoc,
// 1319                                               uint8 disableDefaultRsp, uint8 seqNum )
// 1320 {
// 1321    uint8 buf[10]; // 5 fields (2 octects each)
// 1322 
// 1323    buf[0] = LO_UINT16( absLoc->coordinate1 );
// 1324    buf[1] = HI_UINT16( absLoc->coordinate1 );
// 1325    buf[2] = LO_UINT16( absLoc->coordinate2 );
// 1326    buf[3] = HI_UINT16( absLoc->coordinate2 );
// 1327    buf[4] = LO_UINT16( absLoc->coordinate3 );
// 1328    buf[5] = HI_UINT16( absLoc->coordinate3 );
// 1329    buf[6] = LO_UINT16( absLoc->power );
// 1330    buf[7] = HI_UINT16( absLoc->power );
// 1331    buf[8] = LO_UINT16( absLoc->pathLossExponent );
// 1332    buf[9] = HI_UINT16( absLoc->pathLossExponent );
// 1333 
// 1334    return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1335                            COMMAND_LOCATION_SET_ABSOLUTE, TRUE,
// 1336                            ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 10, buf );
// 1337 }
// 1338 
// 1339 /*********************************************************************
// 1340  * @fn      zclGeneral_SendLocationSetDevCfg
// 1341  *
// 1342  * @brief   Call to send out a Set Device Configuration Command
// 1343  *
// 1344  * @param   srcEP - Sending application's endpoint
// 1345  * @param   dstAddr - where you want the message to go
// 1346  * @param   devCfg - device configuration info
// 1347  *
// 1348  * @return  ZStatus_t
// 1349  */
// 1350 ZStatus_t zclGeneral_SendLocationSetDevCfg( uint8 srcEP, afAddrType_t *dstAddr,
// 1351                                             zclLocationDevCfg_t *devCfg,
// 1352                                             uint8 disableDefaultRsp, uint8 seqNum )
// 1353 {
// 1354    uint8 buf[9];  // 4 fields (2 octects each) + 1 field with 1 octect
// 1355 
// 1356    buf[0] = LO_UINT16( devCfg->power );
// 1357    buf[1] = HI_UINT16( devCfg->power );
// 1358    buf[2] = LO_UINT16( devCfg->pathLossExponent );
// 1359    buf[3] = HI_UINT16( devCfg->pathLossExponent );
// 1360    buf[4] = LO_UINT16( devCfg->calcPeriod );
// 1361    buf[5] = HI_UINT16( devCfg->calcPeriod );
// 1362    buf[6] = devCfg->numMeasurements;
// 1363    buf[7] = LO_UINT16( devCfg->reportPeriod );
// 1364    buf[8] = HI_UINT16( devCfg->reportPeriod );
// 1365 
// 1366    return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1367                            COMMAND_LOCATION_SET_DEV_CFG, TRUE,
// 1368                            ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 9, buf );
// 1369 }
// 1370 
// 1371 /*********************************************************************
// 1372  * @fn      zclGeneral_SendLocationGetDevCfg
// 1373  *
// 1374  * @brief   Call to send out a Get Device Configuration Command
// 1375  *
// 1376  * @param   srcEP - Sending application's endpoint
// 1377  * @param   dstAddr - where you want the message to go
// 1378  * @param   targetAddr - device for which location parameters are being requested
// 1379  *
// 1380  * @return  ZStatus_t
// 1381  */
// 1382 ZStatus_t zclGeneral_SendLocationGetDevCfg( uint8 srcEP, afAddrType_t *dstAddr,
// 1383                                             uint8 *targetAddr, uint8 disableDefaultRsp, uint8 seqNum )
// 1384 {
// 1385   uint8 buf[8];
// 1386 
// 1387   zcl_memcpy( buf, targetAddr, 8 );
// 1388 
// 1389   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1390                           COMMAND_LOCATION_GET_DEV_CFG, TRUE,
// 1391                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 8, buf );
// 1392 }
// 1393 
// 1394 /*********************************************************************
// 1395  * @fn      zclGeneral_SendLocationGetData
// 1396  *
// 1397  * @brief   Call to send out a Get Location Data Command
// 1398  *
// 1399  * @param   srcEP - Sending application's endpoint
// 1400  * @param   dstAddr - where you want the message to go
// 1401  * @param   locaData - location information and channel parameters that are requested.
// 1402  *
// 1403  * @return  ZStatus_t
// 1404  */
// 1405 ZStatus_t zclGeneral_SendLocationGetData( uint8 srcEP, afAddrType_t *dstAddr,
// 1406                                           zclLocationGetData_t *locData,
// 1407                                           uint8 disableDefaultRsp, uint8 seqNum )
// 1408 {
// 1409   uint8 buf[10]; // bitmap (1) + number responses (1) + IEEE Address (8)
// 1410   uint8 *pBuf = buf;
// 1411   uint8 len = 2; // bitmap + number responses
// 1412 
// 1413   *pBuf  = locData->absoluteOnly;
// 1414   *pBuf |= locData->recalculate << 1;
// 1415   *pBuf |= locData->brdcastIndicator << 2;
// 1416   *pBuf |= locData->brdcastResponse << 3;
// 1417   *pBuf |= locData->compactResponse << 4;
// 1418   pBuf++;  // move past the bitmap field
// 1419 
// 1420   *pBuf++ = locData->numResponses;
// 1421 
// 1422   if ( locData->brdcastIndicator == 0 )
// 1423   {
// 1424     zcl_memcpy( pBuf, locData->targetAddr, 8 );
// 1425     len += 8; // ieee addr
// 1426   }
// 1427 
// 1428   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1429                           COMMAND_LOCATION_GET_DATA, TRUE,
// 1430                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, len, buf );
// 1431 }
// 1432 
// 1433 /*********************************************************************
// 1434  * @fn      zclGeneral_SendLocationDevCfgResponse
// 1435  *
// 1436  * @brief   Call to send out a Device Configuration Response Command
// 1437  *
// 1438  * @param   srcEP - Sending application's endpoint
// 1439  * @param   dstAddr - where you want the message to go
// 1440  * @param   devCfg - device's location parameters that are requested
// 1441  *
// 1442  * @return  ZStatus_t
// 1443  */
// 1444 ZStatus_t zclGeneral_SendLocationDevCfgResponse( uint8 srcEP, afAddrType_t *dstAddr,
// 1445                                                  zclLocationDevCfgRsp_t *devCfg,
// 1446                                                  uint8 disableDefaultRsp, uint8 seqNum )
// 1447 {
// 1448   uint8 buf[10]; // 4 fields (2 octects each) + 2 fields (1 octect each)
// 1449   uint8 len = 1; // Status
// 1450 
// 1451   buf[0] = devCfg->status;
// 1452   if ( devCfg->status == ZCL_STATUS_SUCCESS )
// 1453   {
// 1454     buf[1] = LO_UINT16( devCfg->data.power );
// 1455     buf[2] = HI_UINT16( devCfg->data.power );
// 1456     buf[3] = LO_UINT16( devCfg->data.pathLossExponent );
// 1457     buf[4] = HI_UINT16( devCfg->data.pathLossExponent );
// 1458     buf[5] = LO_UINT16( devCfg->data.calcPeriod );
// 1459     buf[6] = HI_UINT16( devCfg->data.calcPeriod );
// 1460     buf[7] = devCfg->data.numMeasurements;
// 1461     buf[8] = LO_UINT16( devCfg->data.reportPeriod );
// 1462     buf[9] = HI_UINT16( devCfg->data.reportPeriod );
// 1463     len += 9;
// 1464   }
// 1465 
// 1466   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1467                           COMMAND_LOCATION_DEV_CFG_RSP, TRUE,
// 1468                           ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, len, buf );
// 1469 }
// 1470 
// 1471 /*********************************************************************
// 1472  * @fn      zclGeneral_SendLocationData
// 1473  *
// 1474  * @brief   Call to send out location data
// 1475  *
// 1476  * @param   srcEP - Sending application's endpoint
// 1477  * @param   dstAddr - where you want the message to go
// 1478  * @param   status - indicates whether response to request was successful or not
// 1479  * @param   locData - location information and channel parameters being sent
// 1480  *
// 1481  * @return  ZStatus_t
// 1482  */
// 1483 ZStatus_t zclGeneral_SendLocationData( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
// 1484                                        uint8 status, zclLocationData_t *locData,
// 1485                                        uint8 disableDefaultRsp, uint8 seqNum )
// 1486 {
// 1487   uint8 buf[16];
// 1488   uint8 *pBuf = buf;
// 1489   uint8 len = 0;
// 1490 
// 1491   if ( cmd == COMMAND_LOCATION_DATA_RSP )
// 1492   {
// 1493     // Only response command includes a status field
// 1494     *pBuf++ = status;
// 1495     len++;
// 1496   }
// 1497 
// 1498   if ( cmd != COMMAND_LOCATION_DATA_RSP || status == ZCL_STATUS_SUCCESS )
// 1499   {
// 1500     // Notification or Response with successful status
// 1501     *pBuf++ = locData->type;
// 1502     *pBuf++ = LO_UINT16( locData->absLoc.coordinate1 );
// 1503     *pBuf++ = HI_UINT16( locData->absLoc.coordinate1 );
// 1504     *pBuf++ = LO_UINT16( locData->absLoc.coordinate2 );
// 1505     *pBuf++ = HI_UINT16( locData->absLoc.coordinate2 );
// 1506     len += 5;
// 1507 
// 1508     if ( locationType2D(locData->type) == 0 )
// 1509     {
// 1510       // 2D location doesn't have coordinate 3
// 1511       *pBuf++ = LO_UINT16( locData->absLoc.coordinate3 );
// 1512       *pBuf++ = HI_UINT16( locData->absLoc.coordinate3 );
// 1513       len += 2;
// 1514     }
// 1515 
// 1516     if ( cmd != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 1517     {
// 1518       // Compact notification doesn't include these fields
// 1519       *pBuf++ = LO_UINT16( locData->absLoc.power );
// 1520       *pBuf++ = HI_UINT16( locData->absLoc.power );
// 1521       *pBuf++ = LO_UINT16( locData->absLoc.pathLossExponent );
// 1522       *pBuf++ = HI_UINT16( locData->absLoc.pathLossExponent );
// 1523       len += 4;
// 1524     }
// 1525 
// 1526     if ( locationTypeAbsolute(locData->type) == 0 )
// 1527     {
// 1528       // Absolute location doesn't include these fields
// 1529       if ( cmd != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 1530       {
// 1531         // Compact notification doesn't include this field
// 1532         *pBuf++ = locData->calcLoc.locationMethod;
// 1533         len++;
// 1534       }
// 1535 
// 1536       *pBuf++ = locData->calcLoc.qualityMeasure;
// 1537       *pBuf++ = LO_UINT16( locData->calcLoc.locationAge );
// 1538       *pBuf++ = HI_UINT16( locData->calcLoc.locationAge );
// 1539       len += 3;
// 1540     }
// 1541   }
// 1542 
// 1543   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1544                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1545                           disableDefaultRsp, 0, seqNum, len, buf );
// 1546 }
// 1547 #endif // ZCL_LOCATION
// 1548 
// 1549 /*********************************************************************
// 1550  * @fn      zclGeneral_FindCallbacks
// 1551  *
// 1552  * @brief   Find the callbacks for an endpoint
// 1553  *
// 1554  * @param   endpoint - endpoint to find the application callbacks for
// 1555  *
// 1556  * @return  pointer to the callbacks
// 1557  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1558 static zclGeneral_AppCallbacks_t *zclGeneral_FindCallbacks( uint8 endpoint )
zclGeneral_FindCallbacks:
          CFI Block cfiBlock140 Using cfiCommon0
          CFI Function zclGeneral_FindCallbacks
        CODE
// 1559 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1560   zclGenCBRec_t *pCBs;
// 1561 
// 1562   pCBs = zclGenCBs;
        MOV     DPTR,#zclGenCBs
// 1563   while ( pCBs )
// 1564   {
// 1565     if ( pCBs->endpoint == endpoint )
// 1566       return ( pCBs->CBs );
// 1567     pCBs = pCBs->next;
??zclGeneral_FindCallbacks_0:
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_307:
        JZ      ??zclGeneral_FindCallbacks_1
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
        MOV     DPL,R2
        MOV     DPH,R3
        JNZ     ??zclGeneral_FindCallbacks_0
        LCALL   ?Subroutine19 & 0xFFFF
// 1568   }
??CrossCallReturnLabel_216:
        SJMP    ??zclGeneral_FindCallbacks_2
// 1569   return ( (zclGeneral_AppCallbacks_t *)NULL );
??zclGeneral_FindCallbacks_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
??zclGeneral_FindCallbacks_2:
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock140
// 1570 }
// 1571 
// 1572 /*********************************************************************
// 1573  * @fn      zclGeneral_HdlIncoming
// 1574  *
// 1575  * @brief   Callback from ZCL to process incoming Commands specific
// 1576  *          to this cluster library or Profile commands for attributes
// 1577  *          that aren't in the attribute list
// 1578  *
// 1579  *
// 1580  * @param   pInMsg - pointer to the incoming message
// 1581  *
// 1582  * @return  ZStatus_t
// 1583  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1584 static ZStatus_t zclGeneral_HdlIncoming( zclIncoming_t *pInMsg )
zclGeneral_HdlIncoming:
          CFI Block cfiBlock141 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
        CODE
// 1585 {
        FUNCALL zclGeneral_HdlIncoming, StubAPS_InterPan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlIncoming, zclGeneral_HdlInSpecificCommands
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlIncoming, zclGeneral_FindCallbacks
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1586   ZStatus_t stat = ZSuccess;
// 1587 
// 1588 #if defined ( INTER_PAN )
// 1589   if ( StubAPS_InterPan( pInMsg->msg->srcAddr.panId, pInMsg->msg->srcAddr.endPoint ) )
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_208:
        ; Setup parameters for call to function StubAPS_InterPan
        MOV     A,R2
        ADD     A,#0xf
        MOV     DPL,A
        MOV     A,R3
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_120:
        MOV     A,R2
        ADD     A,#0x10
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_317:
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_209:
        LCALL   ??StubAPS_InterPan?relay
        MOV     A,R1
        JNZ     ??zclGeneral_HdlIncoming_0
// 1590     return ( stat ); // Cluster not supported thru Inter-PAN
// 1591 #endif
// 1592   if ( zcl_ClusterCmd( pInMsg->hdr.fc.type ) )
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        ANL     A,#0x3
        XRL     A,#0x1
        JNZ     ??zclGeneral_HdlIncoming_1
// 1593   {
// 1594     // Is this a manufacturer specific command?
// 1595     if ( pInMsg->hdr.fc.manuSpecific == 0 )
        MOV     A,R0
        ANL     A,#0x4
        JNZ     ??zclGeneral_HdlIncoming_2
// 1596     {
// 1597       stat = zclGeneral_HdlInSpecificCommands( pInMsg );
        ; Setup parameters for call to function zclGeneral_HdlInSpecificCommands
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclGeneral_HdlInSpecificCommands?relay
        SJMP    ??zclGeneral_HdlIncoming_3
// 1598     }
// 1599     else
// 1600     {
// 1601       // We don't support any manufacturer specific command.
// 1602       stat = zclGeneral_HdlInManuSpecificCommands( pInMsg );  //add my own function
??zclGeneral_HdlIncoming_2:
        ; Setup parameters for call to function zclGeneral_FindCallbacks
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine118_0 & 0xFFFF
// 1603     }
// 1604   }
??CrossCallReturnLabel_218:
        LCALL   ??zclGeneral_FindCallbacks?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??zclGeneral_HdlIncoming_1
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_22:
        LCALL   ?US_SWITCH_DENSE
`?<Jumptable for zclGeneral_HdlIncoming>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        6
        DATA
        DATA8
        DATA
        DATA8
        DB        2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlIncoming_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlIncoming_0
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlIncoming_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlIncoming_0
        CODE
??zclGeneral_HdlIncoming_0:
        MOV     R1,#0x0
        SJMP    ??zclGeneral_HdlIncoming_3
??zclGeneral_HdlIncoming_1:
        MOV     R1,#0x1
// 1605   else
// 1606   {
// 1607     // Handle all the normal (Read, Write...) commands -- should never get here
// 1608     stat = ZFailure;
// 1609   }
// 1610   return ( stat );
??zclGeneral_HdlIncoming_3:
        LJMP    ??Subroutine137_0 & 0xFFFF
          CFI EndBlock cfiBlock141
// 1611 }
// 1612 
// 1613 /*********************************************************************
// 1614  * @fn      zclGeneral_HdlInSpecificCommands
// 1615  *
// 1616  * @brief   Callback from ZCL to process incoming Commands specific
// 1617  *          to this cluster library
// 1618 
// 1619  * @param   pInMsg - pointer to the incoming message
// 1620  *
// 1621  * @return  ZStatus_t
// 1622  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1623 static ZStatus_t zclGeneral_HdlInSpecificCommands( zclIncoming_t *pInMsg )
zclGeneral_HdlInSpecificCommands:
          CFI Block cfiBlock142 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
        CODE
// 1624 {
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_FindCallbacks
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInIdentity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInGroupsServer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInGroupsClient
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInScenesServer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInScenesClient
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInOnOff
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInLevelControl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1625   ZStatus_t stat;
// 1626   zclGeneral_AppCallbacks_t *pCBs;
// 1627 
// 1628   // make sure endpoint exists
// 1629   pCBs = zclGeneral_FindCallbacks( pInMsg->msg->endPoint );
        ; Setup parameters for call to function zclGeneral_FindCallbacks
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_219:
        LCALL   ??zclGeneral_FindCallbacks?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
// 1630   if ( pCBs == NULL )
        MOV     A,R4
        ORL     A,R5
        JZ      ??zclGeneral_HdlInSpecificCommands_0
// 1631     return ( ZFailure );
// 1632 
// 1633   switch ( pInMsg->msg->clusterId )
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_23:
        LCALL   ?US_SWITCH_DENSE
`?<Jumptable for zclGeneral_HdlInSpecificComman_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        0
        DATA
        DATA8
        DATA
        DATA8
        DB        8
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_0
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_0
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_0
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_3
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_4
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_0
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_6
        CODE
// 1634   {
// 1635 #ifdef ZCL_BASIC
// 1636     case ZCL_CLUSTER_ID_GEN_BASIC:
// 1637       stat = zclGeneral_ProcessInBasic( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JNZ     ??zclGeneral_HdlInSpecificCommands_7
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??zclGeneral_HdlInSpecificCommands_8
??zclGeneral_HdlInSpecificCommands_0:
        MOV     R1,#0x1
        SJMP    ??zclGeneral_HdlInSpecificCommands_9
??zclGeneral_HdlInSpecificCommands_8:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_353:
        JZ      ??zclGeneral_HdlInSpecificCommands_7
        ; Setup parameters for indirect call
        LCALL   ?CALL_IND
??zclGeneral_HdlInSpecificCommands_7:
        MOV     R1,#0x0
        SJMP    ??zclGeneral_HdlInSpecificCommands_9
// 1638       break;
// 1639 #endif // ZCL_BASIC
// 1640 
// 1641 #ifdef ZCL_IDENTIFY
// 1642     case ZCL_CLUSTER_ID_GEN_IDENTIFY:
// 1643       stat = zclGeneral_ProcessInIdentity( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_2:
        ; Setup parameters for call to function zclGeneral_ProcessInIdentity
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclGeneral_ProcessInIdentity?relay
// 1644       break;
        SJMP    ??zclGeneral_HdlInSpecificCommands_9
// 1645 #endif // ZCL_IDENTIFY
// 1646 
// 1647 #ifdef ZCL_GROUPS
// 1648     case ZCL_CLUSTER_ID_GEN_GROUPS:
// 1649       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
??zclGeneral_HdlInSpecificCommands_3:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JNZ     ??zclGeneral_HdlInSpecificCommands_10
// 1650         stat = zclGeneral_ProcessInGroupsServer( pInMsg );
        ; Setup parameters for call to function zclGeneral_ProcessInGroupsServer
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclGeneral_ProcessInGroupsServer?relay
        SJMP    ??zclGeneral_HdlInSpecificCommands_9
// 1651       else
// 1652         stat = zclGeneral_ProcessInGroupsClient( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_10:
        ; Setup parameters for call to function zclGeneral_ProcessInGroupsClient
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclGeneral_ProcessInGroupsClient?relay
        SJMP    ??zclGeneral_HdlInSpecificCommands_9
// 1653       break;
// 1654 #endif // ZCL_GROUPS
// 1655 
// 1656 #ifdef ZCL_SCENES
// 1657     case ZCL_CLUSTER_ID_GEN_SCENES:
// 1658       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
??zclGeneral_HdlInSpecificCommands_4:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JNZ     ??zclGeneral_HdlInSpecificCommands_11
// 1659         stat = zclGeneral_ProcessInScenesServer( pInMsg, pCBs );
        ; Setup parameters for call to function zclGeneral_ProcessInScenesServer
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclGeneral_ProcessInScenesServer?relay
        SJMP    ??zclGeneral_HdlInSpecificCommands_9
// 1660       else
// 1661         stat = zclGeneral_ProcessInScenesClient( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_11:
        ; Setup parameters for call to function zclGeneral_ProcessInScenesClient
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclGeneral_ProcessInScenesClient?relay
        SJMP    ??zclGeneral_HdlInSpecificCommands_9
// 1662       break;
// 1663 #endif // ZCL_SCENES
// 1664 
// 1665 #ifdef ZCL_ON_OFF
// 1666     case ZCL_CLUSTER_ID_GEN_ON_OFF:
// 1667       stat = zclGeneral_ProcessInOnOff( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_5:
        ; Setup parameters for call to function zclGeneral_ProcessInOnOff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclGeneral_ProcessInOnOff?relay
// 1668       break;
        SJMP    ??zclGeneral_HdlInSpecificCommands_9
// 1669 #endif // ZCL_ON_OFF
// 1670 
// 1671 #ifdef ZCL_LEVEL_CTRL
// 1672     case ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL:
// 1673       stat = zclGeneral_ProcessInLevelControl( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_6:
        ; Setup parameters for call to function zclGeneral_ProcessInLevelControl
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclGeneral_ProcessInLevelControl?relay
// 1674       break;
// 1675 #endif // ZCL_LEVEL_CTRL
// 1676 
// 1677 #ifdef ZCL_ALARMS
// 1678     case ZCL_CLUSTER_ID_GEN_ALARMS:
// 1679       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1680         stat = zclGeneral_ProcessInAlarmsServer( pInMsg, pCBs );
// 1681       else
// 1682         stat = zclGeneral_ProcessInAlarmsClient( pInMsg, pCBs );
// 1683       break;
// 1684 #endif // ZCL_ALARMS
// 1685 
// 1686 #ifdef ZCL_LOCATION
// 1687     case ZCL_CLUSTER_ID_GEN_LOCATION:
// 1688       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1689         stat = zclGeneral_ProcessInLocationServer( pInMsg, pCBs );
// 1690       else
// 1691         stat = zclGeneral_ProcessInLocationClient( pInMsg, pCBs );
// 1692       break;
// 1693 #endif // ZCL_LOCATION
// 1694 
// 1695     case ZCL_CLUSTER_ID_GEN_POWER_CFG:
// 1696     case ZCL_CLUSTER_ID_GEN_DEVICE_TEMP_CONFIG:
// 1697     case ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG:
// 1698     case ZCL_CLUSTER_ID_GEN_TIME:
// 1699     default:
// 1700       stat = ZFailure;
// 1701       break;
// 1702   }
// 1703 
// 1704   return ( stat );
??zclGeneral_HdlInSpecificCommands_9:
        LJMP    ??Subroutine137_0 & 0xFFFF
          CFI EndBlock cfiBlock142
// 1705 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond143 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+0
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker145 Using cfiCommon1
          CFI (cfiPicker145) NoFunction
          CFI (cfiPicker145) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_377:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_152:
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiPicker145
// 1706 
// 1707 /*********************************************************************
// 1708  * @fn      zclGeneral_HdlInManuSpecificCommands
// 1709  *
// 1710  * @brief   Callback to process incoming Manufacturer Commands specific
// 1711  *          to this cluster library
// 1712 
// 1713  * @param   pInMsg - pointer to the incoming message
// 1714  *
// 1715  * @return  ZStatus_t
// 1716  */
// 1717 static ZStatus_t zclGeneral_HdlInManuSpecificCommands( zclIncoming_t *pInMsg )//my own function
// 1718 {
// 1719   ZStatus_t stat;
// 1720   zclGeneral_AppCallbacks_t *pCBs;
// 1721 
// 1722   // make sure endpoint exists
// 1723   pCBs = zclGeneral_FindCallbacks( pInMsg->msg->endPoint );
// 1724   if ( pCBs == NULL )
// 1725     return ( ZFailure );
// 1726 
// 1727   switch ( pInMsg->msg->clusterId )
// 1728   {
// 1729 #ifdef ZCL_BASIC
// 1730     case ZCL_CLUSTER_ID_GEN_BASIC:
// 1731       stat = ZFailure;
// 1732       break;
// 1733 #endif // ZCL_BASIC
// 1734 
// 1735 #ifdef ZCL_IDENTIFY
// 1736     case ZCL_CLUSTER_ID_GEN_IDENTIFY:
// 1737       stat = ZFailure;
// 1738       break;
// 1739 #endif // ZCL_IDENTIFY
// 1740 
// 1741 #ifdef ZCL_GROUPS
// 1742     case ZCL_CLUSTER_ID_GEN_GROUPS:
// 1743       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1744         stat = ZFailure;
// 1745       else
// 1746         stat = ZFailure;
// 1747       break;
// 1748 #endif // ZCL_GROUPS
// 1749 
// 1750 #ifdef ZCL_SCENES
// 1751     case ZCL_CLUSTER_ID_GEN_SCENES:
// 1752       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1753         stat = ZFailure;
// 1754       else
// 1755         stat = ZFailure;
// 1756       break;
// 1757 #endif // ZCL_SCENES
// 1758 
// 1759 #ifdef ZCL_ON_OFF
// 1760     case ZCL_CLUSTER_ID_GEN_ON_OFF:
// 1761       stat = zclGeneral_ProcessInManuOnOff( pInMsg, pCBs );
// 1762       break;
// 1763 #endif // ZCL_ON_OFF
// 1764 
// 1765 #ifdef ZCL_LEVEL_CTRL
// 1766     case ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL:
// 1767       stat = zclGeneral_ProcessInManuLevelControl( pInMsg, pCBs );
// 1768       break;
// 1769 #endif // ZCL_LEVEL_CTRL
// 1770 
// 1771 #ifdef ZCL_ALARMS
// 1772     case ZCL_CLUSTER_ID_GEN_ALARMS:
// 1773       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1774         stat = ZFailure;
// 1775       else
// 1776         stat = ZFailure;
// 1777       break;
// 1778 #endif // ZCL_ALARMS
// 1779 
// 1780 #ifdef ZCL_LOCATION
// 1781     case ZCL_CLUSTER_ID_GEN_LOCATION:
// 1782       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1783         stat = ZFailure;
// 1784       else
// 1785         stat = ZFailure;
// 1786       break;
// 1787 #endif // ZCL_LOCATION
// 1788 
// 1789     case ZCL_CLUSTER_ID_GEN_POWER_CFG:
// 1790     case ZCL_CLUSTER_ID_GEN_DEVICE_TEMP_CONFIG:
// 1791     case ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG:
// 1792     case ZCL_CLUSTER_ID_GEN_TIME:
// 1793     default:
// 1794       stat = ZFailure;
// 1795       break;
// 1796   }
// 1797 
// 1798   return ( stat );
// 1799 }
// 1800 
// 1801 #ifdef ZCL_BASIC
// 1802 /*********************************************************************
// 1803  * @fn      zclGeneral_ProcessInBasic
// 1804  *
// 1805  * @brief   Process in the received Basic Command.
// 1806  *
// 1807  * @param   pInMsg - pointer to the incoming message
// 1808  *
// 1809  * @return  ZStatus_t
// 1810  */
// 1811 static ZStatus_t zclGeneral_ProcessInBasic( zclIncoming_t *pInMsg,
// 1812                                             zclGeneral_AppCallbacks_t *pCBs )
// 1813 {
// 1814   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1815   {
// 1816     if ( pInMsg->hdr.commandID > COMMAND_BASIC_RESET_FACT_DEFAULT )
// 1817       return ( ZFailure );   // Error ignore the command
// 1818 
// 1819     if ( pCBs->pfnBasicReset )
// 1820       pCBs->pfnBasicReset();
// 1821   }
// 1822   // no Client command
// 1823 
// 1824   return ( ZSuccess );
// 1825 }
// 1826 #endif // ZCL_BASIC
// 1827 
// 1828 #ifdef ZCL_IDENTIFY
// 1829 /*********************************************************************
// 1830  * @fn      zclGeneral_ProcessInIdentity
// 1831  *
// 1832  * @brief   Process in the received Identity Command.
// 1833  *
// 1834  * @param   pInMsg - pointer to the incoming message
// 1835  *
// 1836  * @return  ZStatus_t
// 1837  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1838 static ZStatus_t zclGeneral_ProcessInIdentity( zclIncoming_t *pInMsg,
zclGeneral_ProcessInIdentity:
          CFI Block cfiBlock146 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
        CODE
// 1839                                                zclGeneral_AppCallbacks_t *pCBs )
// 1840 {
        FUNCALL zclGeneral_ProcessInIdentity, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInIdentity, zclGeneral_SendIdentifyQueryResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1841   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_125:
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInIdentity_0 & 0xFFFF
// 1842   {
// 1843     if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY )
        MOVX    A,@DPTR
        MOV     R0,A
        JNZ     ??zclGeneral_ProcessInIdentity_1
// 1844     {
// 1845       if ( pCBs->pfnIdentify )
        MOV     DPL,R4
        MOV     DPH,R5
        LJMP    ??zclGeneral_ProcessInIdentity_2 & 0xFFFF
// 1846       {
// 1847         zclIdentify_t cmd;
// 1848 
// 1849         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 1850         cmd.identifyTime = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1851 
// 1852         pCBs->pfnIdentify( &cmd );
// 1853       }
// 1854     }
// 1855     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_QUERY )
??zclGeneral_ProcessInIdentity_1:
        MOV     A,#0x1
        XRL     A,R0
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInIdentity_3 & 0xFFFF
// 1856     {
// 1857       uint16 identifyTime = 0;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1858 
// 1859       // Retrieve Identify Time
// 1860       zcl_ReadAttrData( pInMsg->msg->endPoint, pInMsg->msg->clusterId,
// 1861                         ATTRID_IDENTIFY_TIME, (uint8 *)&identifyTime, NULL );
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_59:
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_217:
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_121:
        LCALL   ??zcl_ReadAttrData?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1862 
// 1863       // Is device identifying itself?
// 1864       if ( identifyTime > 0 )
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_273:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInIdentity_4 & 0xFFFF
// 1865       {
// 1866         zclGeneral_SendIdentifyQueryResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1867                                               identifyTime, true, pInMsg->hdr.transSeqNum );
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_334:
        ; Setup parameters for call to function zclGeneral_SendIdentifyQueryResponse
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_132:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_17:
        LCALL   ??zclGeneral_SendIdentifyQueryResponse?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1868 #ifdef ZCL_EZMODE
// 1869         zcl_EZModeAction( EZMODE_ACTION_IDENTIFY_QUERY, NULL );
// 1870 #endif
// 1871         return ( ZCL_STATUS_CMD_HAS_RSP );
        MOV     R1,#-0x1
        LJMP    ??zclGeneral_ProcessInIdentity_5 & 0xFFFF
// 1872       }
// 1873     }
// 1874 #ifdef ZCL_EZMODE
// 1875     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_EZMODE_INVOKE )
// 1876     {
// 1877       if ( pCBs->pfnIdentifyEZModeInvoke )
// 1878       {
// 1879         pCBs->pfnIdentifyEZModeInvoke( pInMsg->pData[0] );
// 1880       }
// 1881     }
// 1882     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_UPDATE_COMMISSION_STATE )
// 1883     {
// 1884       if ( pCBs->pfnIdentifyUpdateCommState )
// 1885       {
// 1886         zclIdentifyUpdateCommState_t cmd;
// 1887 
// 1888         cmd.action = pInMsg->pData[0];
// 1889         cmd.commissionStateMask = pInMsg->pData[1];
// 1890 
// 1891         pCBs->pfnIdentifyUpdateCommState( &cmd );
// 1892       }
// 1893     }
// 1894 #endif
// 1895 
// 1896 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 1897     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_TRIGGER_EFFECT )
??zclGeneral_ProcessInIdentity_3:
        MOV     A,#0x40
        XRL     A,R0
        JNZ     ??zclGeneral_ProcessInIdentity_6
// 1898     {
// 1899       if ( pCBs->pfnIdentifyTriggerEffect )
        MOV     A,R4
        ADD     A,#0x4
        MOV     R0,A
        MOV     A,R5
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_123:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R4
        ORL     A,R5
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInIdentity_4 & 0xFFFF
// 1900       {
// 1901         zclIdentifyTriggerEffect_t cmd;
// 1902 
// 1903         cmd.srcAddr = &(pInMsg->msg->srcAddr);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        ADD     A,#0x6
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine124_0 & 0xFFFF
// 1904         cmd.effectId = pInMsg->pData[0];
// 1905         cmd.effectVariant = pInMsg->pData[1];
// 1906 
// 1907         pCBs->pfnIdentifyTriggerEffect( &cmd );
// 1908       }
// 1909     }
// 1910 #endif //ZCL_LIGHT_LINK_ENHANCE
// 1911     else
// 1912     {
// 1913       return ( ZFailure );   // Error ignore the command
// 1914     }
// 1915   }
??CrossCallReturnLabel_304:
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R4
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_305:
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_57:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_96:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine139_0 & 0xFFFF
??CrossCallReturnLabel_370:
        SJMP    ??zclGeneral_ProcessInIdentity_7
// 1916   else // Client Command
// 1917   {
// 1918     if ( pInMsg->hdr.commandID > COMMAND_IDENTIFY_QUERY_RSP )
??zclGeneral_ProcessInIdentity_0:
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInIdentity_8
// 1919       return ( ZFailure );   // Error ignore the command
??zclGeneral_ProcessInIdentity_6:
        MOV     R1,#0x1
        SJMP    ??zclGeneral_ProcessInIdentity_5
// 1920 
// 1921     if ( pCBs->pfnIdentifyQueryRsp )
??zclGeneral_ProcessInIdentity_8:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
??zclGeneral_ProcessInIdentity_2:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_62:
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,R4
        ORL     A,R5
        JZ      ??zclGeneral_ProcessInIdentity_4
// 1922     {
// 1923       zclIdentifyQueryRsp_t rsp;
// 1924 
// 1925       rsp.srcAddr = &(pInMsg->msg->srcAddr);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine81 & 0xFFFF
// 1926       rsp.timeout = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1927 
// 1928       pCBs->pfnIdentifyQueryRsp( &rsp );
// 1929     }
// 1930   }
??CrossCallReturnLabel_270:
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_302:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_65:
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_198:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_97:
        MOV     DPL,R4
        MOV     DPH,R5
??zclGeneral_ProcessInIdentity_7:
        LCALL   ?CALL_IND
// 1931 
// 1932   return ( ZSuccess );
??zclGeneral_ProcessInIdentity_4:
        MOV     R1,#0x0
??zclGeneral_ProcessInIdentity_5:
        MOV     A,#0x6
        LJMP    ??Subroutine108_0 & 0xFFFF
          CFI EndBlock cfiBlock146
// 1933 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond147 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+0
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+0
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker150 Using cfiCommon1
          CFI (cfiPicker150) NoFunction
          CFI (cfiPicker150) Picker
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_252:
        RET
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiPicker150

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond151 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+0
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker153 Using cfiCommon1
          CFI (cfiPicker153) NoFunction
          CFI (cfiPicker153) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_364:
        RET
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiPicker153

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond154 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_364, ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_364, ??CrossCallReturnLabel_97
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+0
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_366
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+0
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_367
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond157) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond157) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond157) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond157) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond157) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond157) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond157) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+0
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_368
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+0
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_369
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+0
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker160 Using cfiCommon1
          CFI (cfiPicker160) NoFunction
          CFI (cfiPicker160) Picker
        MOVX    @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiPicker160

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond161 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+0
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+0
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+0
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker165 Using cfiCommon1
          CFI (cfiPicker165) NoFunction
          CFI (cfiPicker165) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_298:
        RET
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiPicker165

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond166 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function zclGeneral_SendSceneRequest
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_38
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+0
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_61
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond168) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+0
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_62
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+0
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_63
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+0
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_64
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+0
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_293
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+0
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_294
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+0
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_295
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+0
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_296
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+0
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_288
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+0
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_289
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond177) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond177) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond177) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond177) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond177) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+0
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_290
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+0
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_291
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+0
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_292
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+0
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_273
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+0
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_274
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+0
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_275
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+0
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_276
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+0
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function zclGeneral_AddScene
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_277
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+0
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function zclGeneral_AddScene
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_278
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+0
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_272
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+0
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_279
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+0
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_280
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond189) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond189) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond189) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond189) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond189) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+0
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_281
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond190) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond190) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond190) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond190) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond190) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+0
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_282
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+0
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_283
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+0
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_284
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+0
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_285
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+0
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_286
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+0
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_287
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+0
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_59
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+0
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_60
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+0
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_0
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond199) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond199) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+0
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_1
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond200) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond200) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond200) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond200) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+0
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_2
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond201) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond201) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+0
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_3
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond202) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond202) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond202) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+0
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker203 Using cfiCommon1
          CFI (cfiPicker203) NoFunction
          CFI (cfiPicker203) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_362:
        MOV     A,R0
        RET
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiPicker203
// 1934 #endif // ZCL_IDENTIFY
// 1935 
// 1936 #ifdef ZCL_GROUPS
// 1937 
// 1938 /*********************************************************************
// 1939  * @fn      zclGeneral_AddGroup
// 1940  *
// 1941  * @brief   Add a Group.
// 1942  *
// 1943  * @param   endPoint - application endpoint
// 1944  * @param   group - group to be added
// 1945  * @param   pData - pointer to the group info
// 1946  *
// 1947  * @return  ZStatus_t
// 1948  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1949 static ZStatus_t zclGeneral_AddGroup( uint8 endPoint, aps_Group_t *group, uint8 *pData )
zclGeneral_AddGroup:
          CFI Block cfiBlock204 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
        CODE
// 1950 {
        FUNCALL zclGeneral_AddGroup, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddGroup, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddGroup, aps_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x13
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
        ; Saved register size: 19
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0 + 2,R1
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1951   uint8 nameLen;
// 1952   uint8 nameSupport = FALSE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1953 
// 1954   pData += 2;   // Move past group ID
        LCALL   ?Subroutine67 & 0xFFFF
// 1955   nameLen = *pData++;
??CrossCallReturnLabel_110:
        MOV     ?V0 + 4,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 1956 
// 1957   // Retrieve Name Support attribute
// 1958   zcl_ReadAttrData( endPoint, ZCL_CLUSTER_ID_GEN_GROUPS,
// 1959                     ATTRID_GROUP_NAME_SUPPORT, &nameSupport, NULL );
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR     A
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 6,DPL
        MOV     ?V0 + 7,DPH
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#0x4
        MOV     R3,#0x0
        LCALL   ??zcl_ReadAttrData?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1960 
// 1961   if ( nameSupport )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??zclGeneral_AddGroup_0
// 1962   {
// 1963     if ( nameLen > (APS_GROUP_NAME_LEN-1) )
        MOV     A,?V0 + 4
        CLR     C
        SUBB    A,#0x10
        JC      ??zclGeneral_AddGroup_1
// 1964        nameLen = (APS_GROUP_NAME_LEN-1);
        MOV     ?V0 + 4,#0xf
// 1965     group->name[0] = nameLen;
??zclGeneral_AddGroup_1:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        LCALL   ?Subroutine60 & 0xFFFF
// 1966     zcl_memcpy( &(group->name[1]), pData, nameLen );
// 1967   }
??CrossCallReturnLabel_98:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R4,?V0 + 4
        MOV     R5,#0x0
        MOV     A,?V0 + 0
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1968 
// 1969   return ( aps_AddGroup( endPoint, group ) );
??zclGeneral_AddGroup_0:
        ; Setup parameters for call to function aps_AddGroup
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R1,?V0 + 2
        LCALL   ??aps_AddGroup?relay
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     R7,#0xb
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock204
// 1970 }
// 1971 
// 1972 /*********************************************************************
// 1973  * @fn      zclGeneral_ProcessInGroupsServer
// 1974  *
// 1975  * @brief   Process in the received Groups Command.
// 1976  *
// 1977  * @param   pInMsg - pointer to the incoming message
// 1978  *
// 1979  * @return  ZStatus_t
// 1980  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1981 static ZStatus_t zclGeneral_ProcessInGroupsServer( zclIncoming_t *pInMsg )
zclGeneral_ProcessInGroupsServer:
          CFI Block cfiBlock205 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
        CODE
// 1982 {
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupViewResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 45, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindAllGroupsForEndpoint
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_CountAllGroups
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupGetMembershipRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 49, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 49, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zcl_SendDefaultRspCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 49, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 49, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_RemoveGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_RemoveAllGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 22
        MOV     A,#-0x16
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1983   aps_Group_t group;
// 1984   aps_Group_t *pGroup;
// 1985   uint8 *pData;
// 1986   uint8 status;
// 1987   uint8 grpCnt;
// 1988   uint8 grpRspCnt = 0;
        MOV     R7,#0x0
// 1989   uint16 *grpList;
// 1990   uint16 identifyTime = 0;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1991   uint8 i;
// 1992   ZStatus_t stat = ZSuccess;
        MOV     R6,A
// 1993 
// 1994   zcl_memset( (uint8*)&group, 0, sizeof( aps_Group_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x12
        MOV     R5,A
        MOV     R1,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
// 1995 
// 1996   pData = pInMsg->pData;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
// 1997   group.ID = BUILD_UINT16( pData[0], pData[1] );
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine110_0 & 0xFFFF
// 1998   switch ( pInMsg->hdr.commandID )
??CrossCallReturnLabel_185:
        MOV     A,?V0 + 0
        ADD     A,#0x6
        MOV     ?V0 + 8,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 9,A
        MOV     A,?V0 + 0
        ADD     A,#0x7
        MOV     ?V0 + 6,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 7,A
        MOV     DPL,?V0 + 6
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInGroupsServer_0
        DEC     A
        JZ      ??zclGeneral_ProcessInGroupsServer_1
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_2 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_4 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_5 & 0xFFFF
        LJMP    ??zclGeneral_ProcessInGroupsServer_6 & 0xFFFF
// 1999   {
// 2000     case COMMAND_GROUP_ADD:
// 2001       status = zclGeneral_AddGroup( pInMsg->msg->endPoint, &group, pData );
??zclGeneral_ProcessInGroupsServer_0:
        ; Setup parameters for call to function zclGeneral_AddGroup
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_220:
        LCALL   ??zclGeneral_AddGroup?relay
        MOV     A,R1
        MOV     R4,A
// 2002       if ( status != ZSuccess )
        JZ      ??zclGeneral_ProcessInGroupsServer_7
// 2003       {
// 2004         if ( status == ZApsDuplicateEntry )
        MOV     A,#-0x48
        XRL     A,R4
        JNZ     ??zclGeneral_ProcessInGroupsServer_8
// 2005           status = ZCL_STATUS_DUPLICATE_EXISTS;
        MOV     R4,#-0x76
        SJMP    ??zclGeneral_ProcessInGroupsServer_7
// 2006         else
// 2007           status = ZCL_STATUS_INSUFFICIENT_SPACE;
??zclGeneral_ProcessInGroupsServer_8:
        MOV     R4,#-0x77
// 2008       }
// 2009       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInGroupsServer_7:
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_24:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_288:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
// 2010       {
// 2011         zclGeneral_SendGroupAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2012                                          status, group.ID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendGroupResponse
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     ?V0 + 2,#0x1
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 44)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 46)
        MOV     A,R4
        MOV     R5,A
        MOV     R4,#0x0
        LJMP    ??zclGeneral_ProcessInGroupsServer_10 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 42)
// 2013         stat = ZCL_STATUS_CMD_HAS_RSP;
// 2014       }
// 2015       break;
// 2016 
// 2017     case COMMAND_GROUP_VIEW:
// 2018       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInGroupsServer_1:
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_33:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_289:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
// 2019       {
// 2020         pGroup = aps_FindGroup( pInMsg->msg->endPoint, group.ID );
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R4
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R5
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_122:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2021         if ( pGroup )
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??zclGeneral_ProcessInGroupsServer_11
// 2022         {
// 2023           status = ZCL_STATUS_SUCCESS;
        MOV     R4,#0x0
        SJMP    ??zclGeneral_ProcessInGroupsServer_12
// 2024         }
// 2025         else
// 2026         {
// 2027           // Group not found
// 2028           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInGroupsServer_11:
        MOV     R4,#-0x75
// 2029           pGroup = &group;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
// 2030         }
// 2031         zclGeneral_SendGroupViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2032                                           status, pGroup, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_12:
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_35:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 45)
        MOV     R5,#0x1
        LCALL   ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_325:
        LCALL   ??zclGeneral_SendGroupViewResponse?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
// 2033         stat = ZCL_STATUS_CMD_HAS_RSP;
        LJMP    ??zclGeneral_ProcessInGroupsServer_13 & 0xFFFF
// 2034       }
// 2035       break;
// 2036 
// 2037     case COMMAND_GROUP_GET_MEMBERSHIP:
// 2038       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInGroupsServer_2:
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_34:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_310:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
// 2039       {
// 2040         grpCnt = *pData++;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
// 2041 
// 2042         // Allocate space for the group list
// 2043         grpList = zcl_mem_alloc( sizeof( uint16 ) * APS_MAX_GROUPS );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x20
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
// 2044         if ( grpList != NULL )
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_14 & 0xFFFF
// 2045         {
// 2046           if ( grpCnt == 0 )
        MOV     A,R6
        JNZ     ??zclGeneral_ProcessInGroupsServer_15
// 2047           {
// 2048             // Find out all the groups of which the endpoint is a member.
// 2049             grpRspCnt = aps_FindAllGroupsForEndpoint( pInMsg->msg->endPoint, grpList );
        ; Setup parameters for call to function aps_FindAllGroupsForEndpoint
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine118_0 & 0xFFFF
// 2050           }
??CrossCallReturnLabel_221:
        LCALL   ??aps_FindAllGroupsForEndpoint?relay
        MOV     A,R1
        MOV     R7,A
        SJMP    ??zclGeneral_ProcessInGroupsServer_16
// 2051           else
// 2052           {
// 2053             // Find out the groups (in the list) of which the endpoint is a member.
// 2054             for ( i = 0; i < grpCnt; i++ )
??zclGeneral_ProcessInGroupsServer_15:
        MOV     ?V0 + 10,R6
// 2055             {
// 2056               group.ID = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInGroupsServer_17:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_199:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 2057               pData += 2;
??CrossCallReturnLabel_256:
        MOV     A,?V0 + 2
        ADD     A,#0x2
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
// 2058 
// 2059               if ( aps_FindGroup( pInMsg->msg->endPoint, group.ID ) )
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_210:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_222:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        JZ      ??zclGeneral_ProcessInGroupsServer_18
// 2060                 grpList[grpRspCnt++] = group.ID;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine115_0 & 0xFFFF
// 2061             }
??CrossCallReturnLabel_211:
        MOV     A,R7
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,?V0 + 5
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_191:
        INC     R7
??zclGeneral_ProcessInGroupsServer_18:
        DEC     ?V0 + 10
        MOV     A,?V0 + 10
        JNZ     ??zclGeneral_ProcessInGroupsServer_17
        MOV     A,R7
        JZ      ??zclGeneral_ProcessInGroupsServer_19
// 2062           }
// 2063 
// 2064           if ( grpCnt == 0 ||  grpRspCnt != 0 )
// 2065           {
// 2066             zclGeneral_SendGroupGetMembershipResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2067                                                        aps_GroupsRemaingCapacity(), grpRspCnt,
// 2068                                                        grpList, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_16:
        ; Setup parameters for call to function aps_CountAllGroups
        LCALL   ??aps_CountAllGroups?relay
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine32 & 0xFFFF
// 2069           }
??CrossCallReturnLabel_40:
        ; Setup parameters for call to function zclGeneral_SendGroupGetMembershipRequest
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     ?V0 + 2,#0x1
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 44)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 46)
        MOV     A,R7
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 47)
        MOV     A,#0x10
        CLR     C
        SUBB    A,R1
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 48)
        MOV     ?V0 + 2,#0x1
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 49)
        MOV     R5,#0x1
        MOV     R4,#0x2
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_114:
        LCALL   ??zclGeneral_SendGroupGetMembershipRequest?rela
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
// 2070 
// 2071           zcl_mem_free( grpList );
??zclGeneral_ProcessInGroupsServer_19:
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_ProcessInGroupsServer_13
// 2072         }
// 2073         else
// 2074         {
// 2075           // Couldn't allocate space for the group list -- send a Default Response command back.
// 2076           zclDefaultRspCmd_t defaultRspCmd;
// 2077 
// 2078           defaultRspCmd.commandID = pInMsg->hdr.commandID;
??zclGeneral_ProcessInGroupsServer_14:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ?Subroutine43 & 0xFFFF
// 2079           defaultRspCmd.statusCode = ZCL_STATUS_INSUFFICIENT_SPACE;
??CrossCallReturnLabel_56:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#-0x77
        MOVX    @DPTR,A
// 2080           zcl_SendDefaultRspCmd( pInMsg->msg->endPoint, &(pInMsg->msg->srcAddr),
// 2081                                  pInMsg->msg->clusterId, &defaultRspCmd,
// 2082                                  ZCL_FRAME_SERVER_CLIENT_DIR, true, 0, pInMsg->hdr.transSeqNum );
        LCALL   ?Subroutine30 & 0xFFFF
// 2083         }
??CrossCallReturnLabel_36:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 43)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 45)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 46)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 47)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 49)
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_18:
        LCALL   ??zcl_SendDefaultRspCmd?relay
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
// 2084 
// 2085         stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInGroupsServer_13:
        MOV     R6,#-0x1
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
// 2086       }
// 2087       break;
// 2088 
// 2089     case COMMAND_GROUP_REMOVE:
// 2090       if ( aps_RemoveGroup( pInMsg->msg->endPoint, group.ID ) )
??zclGeneral_ProcessInGroupsServer_3:
        ; Setup parameters for call to function aps_RemoveGroup
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_223:
        LCALL   ??aps_RemoveGroup?relay
        MOV     A,R1
        JZ      ??zclGeneral_ProcessInGroupsServer_20
// 2091       {
// 2092         status = ZCL_STATUS_SUCCESS;
        MOV     R4,#0x0
        SJMP    ??zclGeneral_ProcessInGroupsServer_21
// 2093       }
// 2094       else
// 2095       {
// 2096         status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInGroupsServer_20:
        MOV     R4,#-0x75
// 2097       }
// 2098 
// 2099       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInGroupsServer_21:
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_25:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_290:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
// 2100       {
// 2101         zclGeneral_SendGroupRemoveResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2102                                             status, group.ID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendGroupResponse
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     ?V0 + 2,#0x1
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 44)
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 46)
        MOV     A,R4
        MOV     R5,A
        MOV     R4,#0x3
??zclGeneral_ProcessInGroupsServer_10:
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_115:
        LCALL   ??zclGeneral_SendGroupResponse?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
// 2103         stat = ZCL_STATUS_CMD_HAS_RSP;
        DEC     R6
        SJMP    ??zclGeneral_ProcessInGroupsServer_9
// 2104       }
// 2105       break;
// 2106 
// 2107     case COMMAND_GROUP_REMOVE_ALL:
// 2108       aps_RemoveAllGroup( pInMsg->msg->endPoint );
??zclGeneral_ProcessInGroupsServer_4:
        ; Setup parameters for call to function aps_RemoveAllGroup
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_224:
        LCALL   ??aps_RemoveAllGroup?relay
// 2109       break;
        SJMP    ??zclGeneral_ProcessInGroupsServer_9
// 2110 
// 2111     case COMMAND_GROUP_ADD_IF_IDENTIFYING:
// 2112       // Retrieve Identify Time
// 2113       zcl_ReadAttrData( pInMsg->msg->endPoint, ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 2114                         ATTRID_IDENTIFY_TIME, (uint8 *)&identifyTime, NULL );
??zclGeneral_ProcessInGroupsServer_5:
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 44)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 46)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#0x3
        MOV     R3,#0x0
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_225:
        LCALL   ??zcl_ReadAttrData?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
// 2115 
// 2116       // Is device identifying itself?
// 2117       if ( identifyTime > 0 )
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_274:
        JZ      ??zclGeneral_ProcessInGroupsServer_9
// 2118         zclGeneral_AddGroup( pInMsg->msg->endPoint, &group, pData );
        ; Setup parameters for call to function zclGeneral_AddGroup
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_226:
        LCALL   ??zclGeneral_AddGroup?relay
        SJMP    ??zclGeneral_ProcessInGroupsServer_9
// 2119       break;
// 2120 
// 2121     default:
// 2122       stat = ZFailure;
??zclGeneral_ProcessInGroupsServer_6:
        INC     R6
// 2123       break;
// 2124   }
// 2125 
// 2126   return ( stat );
??zclGeneral_ProcessInGroupsServer_9:
        MOV     A,R6
        MOV     R1,A
        MOV     A,#0x16
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock205
// 2127 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond206 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_114
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 49)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+0
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiPicker208 Using cfiCommon1
          CFI (cfiPicker208) NoFunction
          CFI (cfiPicker208) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x6
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 0
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_251:
        RET
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiPicker208

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_121
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+0
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_122
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+0
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_114
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+0
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 49)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_115
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+0
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_238
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+0
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_239
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+0
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_240
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+0
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_241
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond217) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+0
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_242
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+0
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_243
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+0
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_244
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond220) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond220) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond220) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond220) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond220) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+0
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_245
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond221) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond221) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond221) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond221) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond221) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond221) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond221) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond221) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond221) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+0
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_246
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+0
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_247
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond223) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond223) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond223) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond223) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond223) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond223) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond223) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+0
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_248
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond224) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond224) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond224) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond224) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond224) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond224) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond224) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond224) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond224) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+0
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_249
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond225) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond225) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond225) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond225) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond225) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+0
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_250
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond226) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond226) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond226) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond226) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond226) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond226) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond226) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+0
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_234
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+0
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_235
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+0
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_236
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+0
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_237
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond230) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond230) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond230) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond230) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond230) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond230) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond230) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond230) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond230) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+0
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_227
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond231) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond231) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond231) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond231) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond231) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond231) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond231) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond231) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond231) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond231) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond231) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+0
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 91)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_228
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond232) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond232) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond232) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+0
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_229
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+0
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_230
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond234) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond234) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+0
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_231
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond235) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+0
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_232
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond236) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+0
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_233
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond237) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+0
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function zclGeneral_HdlIncoming
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_218
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+0
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_219
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+0
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_220
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+0
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_221
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+0
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_222
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+0
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_223
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond243) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+0
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_224
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+0
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_225
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+0
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_226
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+0
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker247 Using cfiCommon1
          CFI (cfiPicker247) NoFunction
          CFI (cfiPicker247) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiPicker247

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond248 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_191
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond249) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond249) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+0
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker250 Using cfiCommon1
          CFI (cfiPicker250) NoFunction
          CFI (cfiPicker250) Picker
        ADDC    A,R1
        MOV     DPH,A
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiPicker250
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiCond251 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+0
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+0
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zclGeneral_RemoveScene
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+0
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+0
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond256) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond256) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond256) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond256) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+0
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond257) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+0
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+0
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond259) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+0
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond260) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond260) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond260) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+0
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker261 Using cfiCommon1
          CFI (cfiPicker261) NoFunction
          CFI (cfiPicker261) Picker
        MOV     A,R2
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiPicker261
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine111_0:
          CFI Block cfiCond262 Using cfiCommon0
          CFI Function zclGeneral_SendSceneGetMembershipResponse
          CFI Conditional ??CrossCallReturnLabel_181
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+0
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond264) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond264) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond264) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond264) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond264) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond264) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond264) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond264) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond264) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond264) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond264) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+0
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+0
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+0
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function zclGeneral_RemoveScene
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+0
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+0
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+0
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond270) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond270) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond270) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+0
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+0
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+0
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+0
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker274 Using cfiCommon1
          CFI (cfiPicker274) NoFunction
          CFI (cfiPicker274) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiPicker274

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond275 Using cfiCommon0
          CFI Function zclGeneral_SendOnOff_CmdOnWithTimedOff
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond276) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond276) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond276) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond276) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond276) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond276) CFA_SP SP+0
          CFI (cfiCond276) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker277 Using cfiCommon1
          CFI (cfiPicker277) NoFunction
          CFI (cfiPicker277) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_141:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiPicker277
// 2128 
// 2129 /*********************************************************************
// 2130  * @fn      zclGeneral_ProcessInGroupsClient
// 2131  *
// 2132  * @brief   Process in the received Groups Command.
// 2133  *
// 2134  * @param   pInMsg - pointer to the incoming message
// 2135  *
// 2136  * @return  ZStatus_t
// 2137  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond278 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+0
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker280 Using cfiCommon1
          CFI (cfiPicker280) NoFunction
          CFI (cfiPicker280) Picker
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiPicker280
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine112_0:
          CFI Block cfiCond281 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_202
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+0
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond283) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond283) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond283) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond283) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+0
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker284 Using cfiCommon1
          CFI (cfiPicker284) NoFunction
          CFI (cfiPicker284) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiPicker284
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine113_0:
          CFI Block cfiCond285 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+0
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+0
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+0
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond289) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+0
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+0
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+0
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker292 Using cfiCommon1
          CFI (cfiPicker292) NoFunction
          CFI (cfiPicker292) Picker
        MOVX    A,@DPTR
        MOV     R2,A
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiPicker292
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine114_0:
          CFI Block cfiCond293 Using cfiCommon0
          CFI Function zclGeneral_ProcessInOnOff
          CFI Conditional ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+0
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+0
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+0
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+0
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond298) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond298) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond298) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+0
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+0
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+0
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+0
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+0
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker303 Using cfiCommon1
          CFI (cfiPicker303) NoFunction
          CFI (cfiPicker303) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        RET
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiPicker303

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond304 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond305) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+0
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker306 Using cfiCommon1
          CFI (cfiPicker306) NoFunction
          CFI (cfiPicker306) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        ; Setup parameters for call to function zclGeneral_SendGroupViewResponse
        ; Setup parameters for call to function zcl_SendDefaultRspCmd
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_133:
        RET
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiPicker306

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond307 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond308) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond308) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond308) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond308) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond308) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond308) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond308) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+0
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+0
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_35
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+0
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_36
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+0
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker312 Using cfiCommon1
          CFI (cfiPicker312) NoFunction
          CFI (cfiPicker312) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiPicker312

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond313 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+0
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker315 Using cfiCommon1
          CFI (cfiPicker315) NoFunction
          CFI (cfiPicker315) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R4
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R5
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_151:
        RET
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiPicker315

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond316 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_24
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+0
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker318 Using cfiCommon1
          CFI (cfiPicker318) NoFunction
          CFI (cfiPicker318) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_135:
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_150:
        RET
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiPicker318

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond319 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_9
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond320) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond320) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond320) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond320) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond320) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond320) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond320) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond320) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond320) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond320) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond320) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+0
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_24
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+0
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_25
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+0
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker323 Using cfiCommon1
          CFI (cfiPicker323) NoFunction
          CFI (cfiPicker323) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_154:
        MOV     A,?V0 + 0
        RET
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiPicker323

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond324 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond325) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond325) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond325) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond325) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond325) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond325) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond325) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+0
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 49)
          CFI Block cfiPicker326 Using cfiCommon1
          CFI (cfiPicker326) NoFunction
          CFI (cfiPicker326) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_328:
        RET
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiPicker326

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond327 Using cfiCommon0
          CFI Function zclGeneral_FindCallbacks
          CFI Conditional ??CrossCallReturnLabel_216
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+0
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker329 Using cfiCommon1
          CFI (cfiPicker329) NoFunction
          CFI (cfiPicker329) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiPicker329
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine115_0:
          CFI Block cfiCond330 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond331) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond331) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond331) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+0
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+0
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+0
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+0
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function zclGeneral_HdlIncoming
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+0
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function zclGeneral_HdlIncoming
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+0
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+0
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+0
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function zclGeneral_RemoveScene
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+0
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+0
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+0
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function zclGeneral_CountAllScenes
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond342) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond342) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond342) CFA_SP SP+-5
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function zclGeneral_FindCallbacks
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond343) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond343) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond343) CFA_SP SP+-5
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+0
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker345 Using cfiCommon1
          CFI (cfiPicker345) NoFunction
          CFI (cfiPicker345) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_343:
        MOV     R3,A
        RET
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiPicker345

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond346 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_238
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+0
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+0
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+0
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+0
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+0
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+0
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond353) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+0
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+0
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+0
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+0
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+0
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+0
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker359 Using cfiCommon1
          CFI (cfiPicker359) NoFunction
          CFI (cfiPicker359) Picker
        LCALL   ?Subroutine100 & 0xFFFF
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiPicker359
??CrossCallReturnLabel_341:
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine116_0:
          CFI Block cfiCond360 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_234
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond361) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond361) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+0
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+0
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+0
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+0
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond365) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+0
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond366) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond366) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond366) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond366) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond366) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond366) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond366) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond366) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+0
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+0
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+0
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+0
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+0
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+0
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+0
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+0
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+0
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+0
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond376) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond376) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond376) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+0
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker377 Using cfiCommon1
          CFI (cfiPicker377) NoFunction
          CFI (cfiPicker377) Picker
        MOV     R3,A
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiPicker377
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiCond378 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 91)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+0
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+0
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+0
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond382) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+0
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+0
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+0
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+0
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond386) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond386) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond386) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+0
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond387) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond387) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond387) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond387) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond387) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond387) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond387) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+0
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+0
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+0
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond390) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond390) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond390) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond390) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond390) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+0
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond391) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond391) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond391) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond391) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond391) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond391) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond391) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond391) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond391) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+0
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond392) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond392) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond392) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+0
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+0
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond394) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond394) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond394) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond394) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond394) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+0
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond395) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond395) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond395) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond395) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond395) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond395) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond395) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+0
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond396) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond396) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond396) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond396) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond396) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond396) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond396) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond396) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond396) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond396) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond396) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+0
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+0
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+0
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond399) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+0
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond400) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond400) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond400) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+0
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond401) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond401) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond401) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond401) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond401) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+0
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker402 Using cfiCommon1
          CFI (cfiPicker402) NoFunction
          CFI (cfiPicker402) Picker
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiPicker402
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiCond403 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_218
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+0
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+0
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+0
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+0
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond408) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond408) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+0
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+0
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+0
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond411) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond411) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond411) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond411) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+0
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond412) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+0
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 91)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond413) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond413) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+0
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond414) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond414) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond414) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond414) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond414) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond414) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond414) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+0
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond415) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond415) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond415) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond415) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond415) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+0
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond416) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+0
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+0
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond418) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond418) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+0
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond419) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond419) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond419) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond419) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond419) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+0
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond420) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond420) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond420) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond420) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond420) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+0
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+0
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond422) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond422) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond422) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond422) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond422) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond422) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond422) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond422) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond422) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+0
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+0
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+0
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+0
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond426) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond426) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+0
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond427) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond427) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond427) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond427) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond427) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond427) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+0
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond428) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+0
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond429) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond429) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond429) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond429) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond429) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond429) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond429) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond429) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond429) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond429) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond429) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond429) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+0
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond430) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond430) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond430) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond430) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond430) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+0
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+0
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+0
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond433) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond433) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond433) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+0
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond434) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond434) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond434) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+0
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+0
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker436 Using cfiCommon1
          CFI (cfiPicker436) NoFunction
          CFI (cfiPicker436) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R0
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_253:
        RET
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiPicker436

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2138 static ZStatus_t zclGeneral_ProcessInGroupsClient( zclIncoming_t *pInMsg,
zclGeneral_ProcessInGroupsClient:
          CFI Block cfiBlock437 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
        CODE
// 2139                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2140 {
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 53, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 53, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 28
        MOV     A,#-0x1c
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 50)
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        LCALL   ?Subroutine40 & 0xFFFF
// 2141   aps_Group_t group;
// 2142   uint8 *pData = pInMsg->pData;
// 2143   uint8 grpCnt;
// 2144   uint8 nameLen;
// 2145   zclGroupRsp_t rsp;
// 2146   uint8 i;
// 2147   ZStatus_t stat = ZSuccess;
??CrossCallReturnLabel_332:
        MOV     ?V0 + 11,#0x0
// 2148 
// 2149   zcl_memset( (uint8*)&group, 0, sizeof( aps_Group_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x12
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
// 2150   zcl_memset( (uint8*)&rsp, 0, sizeof( zclGroupRsp_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xa
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
// 2151 
// 2152   switch ( pInMsg->hdr.commandID )
        MOV     A,?V0 + 0
        ADD     A,#0x18
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,?V0 + 4
        ADD     A,#0x7
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 5
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_118:
        JZ      ??zclGeneral_ProcessInGroupsClient_0
        DEC     A
        JZ      ??zclGeneral_ProcessInGroupsClient_0
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsClient_1 & 0xFFFF
        DEC     A
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInGroupsClient_2 & 0xFFFF
// 2153   {
// 2154     case COMMAND_GROUP_ADD_RSP:
// 2155     case COMMAND_GROUP_VIEW_RSP:
// 2156     case COMMAND_GROUP_REMOVE_RSP:
// 2157       rsp.status = *pData++;
??zclGeneral_ProcessInGroupsClient_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        LCALL   ?Subroutine36 & 0xFFFF
// 2158       group.ID = BUILD_UINT16( pData[0], pData[1] );
??CrossCallReturnLabel_193:
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 2159 
// 2160       if ( rsp.status == ZCL_STATUS_SUCCESS && pInMsg->hdr.commandID == COMMAND_GROUP_VIEW_RSP )
??CrossCallReturnLabel_257:
        MOV     A,R4
        JNZ     ??CrossCallReturnLabel_258
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??CrossCallReturnLabel_258
// 2161       {
// 2162         pData += 2;   // Move past ID
        LCALL   ?Subroutine67 & 0xFFFF
// 2163         nameLen = *pData++;
??CrossCallReturnLabel_111:
        MOV     ?V0 + 6,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 2164         if ( nameLen > (APS_GROUP_NAME_LEN-1) )
        CLR     C
        SUBB    A,#0x10
        JC      ??zclGeneral_ProcessInGroupsClient_3
// 2165           nameLen = (APS_GROUP_NAME_LEN-1);
        MOV     ?V0 + 6,#0xf
// 2166         group.name[0] = nameLen;
??zclGeneral_ProcessInGroupsClient_3:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 6
        LCALL   ?Subroutine60 & 0xFFFF
// 2167         zcl_memcpy( &(group.name[1]), pData, nameLen );
??CrossCallReturnLabel_99:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 53)
        MOV     R4,?V0 + 6
        MOV     R5,#0x0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 50)
// 2168         rsp.grpName = group.name;
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 2169       }
// 2170 
// 2171       if ( pCBs->pfnGroupRsp )
??CrossCallReturnLabel_258:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_275:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInGroupsClient_4 & 0xFFFF
// 2172       {
// 2173         rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine13 & 0xFFFF
// 2174         rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_266:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2175         rsp.grpCnt = 1;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2176         rsp.grpList = &group.ID;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 2177         rsp.capacity = 0;
??CrossCallReturnLabel_259:
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ??Subroutine138_0 & 0xFFFF
// 2178 
// 2179         pCBs->pfnGroupRsp( &rsp );
// 2180       }
??CrossCallReturnLabel_368:
        LCALL   ?CALL_IND
        LJMP    ??zclGeneral_ProcessInGroupsClient_4 & 0xFFFF
// 2181       break;
// 2182 
// 2183     case COMMAND_GROUP_GET_MEMBERSHIP_RSP:
// 2184       {
// 2185         uint16 *grpList = NULL;
??zclGeneral_ProcessInGroupsClient_1:
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
// 2186         rsp.capacity = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 2187         grpCnt = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 2188 
// 2189         if ( grpCnt > 0 )
        JZ      ??zclGeneral_ProcessInGroupsClient_5
// 2190         {
// 2191           // Allocate space for the group list
// 2192           grpList = zcl_mem_alloc( sizeof( uint16 ) * grpCnt );
        ; Setup parameters for call to function osal_mem_alloc
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
// 2193           if ( grpList != NULL )
        MOV     A,R2
        ORL     A,?V0 + 7
        JZ      ??zclGeneral_ProcessInGroupsClient_5
// 2194           {
// 2195             rsp.grpCnt = grpCnt;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 8
        MOVX    @DPTR,A
// 2196             for ( i = 0; i < grpCnt; i++ )
        MOV     R4,#0x0
        SJMP    ??zclGeneral_ProcessInGroupsClient_6
// 2197             {
// 2198               grpList[i] = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInGroupsClient_7:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_339:
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     A,R4
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 6
        ADD     A,R0
        MOV     DPL,A
        MOV     A,?V0 + 7
        LCALL   ?Subroutine57 & 0xFFFF
// 2199               pData += 2;
??CrossCallReturnLabel_192:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 2200             }
        INC     R4
??zclGeneral_ProcessInGroupsClient_6:
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 8
        JC      ??zclGeneral_ProcessInGroupsClient_7
// 2201           }
// 2202         }
// 2203 
// 2204         if ( pCBs->pfnGroupRsp )
??zclGeneral_ProcessInGroupsClient_5:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_276:
        JZ      ??zclGeneral_ProcessInGroupsClient_8
// 2205         {
// 2206           rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine13 & 0xFFFF
// 2207           rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_267:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2208           rsp.grpList = grpList;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 7
        LCALL   ??Subroutine138_0 & 0xFFFF
// 2209 
// 2210           pCBs->pfnGroupRsp( &rsp );
// 2211         }
??CrossCallReturnLabel_369:
        LCALL   ?CALL_IND
// 2212 
// 2213         if ( grpList != NULL )
??zclGeneral_ProcessInGroupsClient_8:
        MOV     A,?V0 + 6
        ORL     A,?V0 + 7
        JZ      ??zclGeneral_ProcessInGroupsClient_4
// 2214         {
// 2215           zcl_mem_free( grpList );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 6
        MOV     R3,?V0 + 7
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_ProcessInGroupsClient_4
// 2216         }
// 2217       }
// 2218       break;
// 2219 
// 2220     default:
// 2221       stat = ZFailure;
??zclGeneral_ProcessInGroupsClient_2:
        MOV     ?V0 + 11,#0x1
// 2222       break;
// 2223   }
// 2224 
// 2225   return ( stat );
??zclGeneral_ProcessInGroupsClient_4:
        MOV     R1,?V0 + 11
        MOV     A,#0x1c
          CFI EndBlock cfiBlock437
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
// 2226 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock438 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 50)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock438
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiBlock439 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock439

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond441) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+0
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_142:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_255
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+0
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond445) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond445) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond445) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond445) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond445) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond445) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond445) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+0
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond446) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+0
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+0
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond448) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond448) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond448) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+0
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond449) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond449) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond449) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond449) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond449) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond449) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+0
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond450) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond450) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond450) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond450) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond450) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond450) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond450) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+0
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+0
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+0
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+0
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker454 Using cfiCommon1
          CFI (cfiPicker454) NoFunction
          CFI (cfiPicker454) Picker
        MOV     A,R0
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiPicker454
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiCond455 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_254
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+0
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+0
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+0
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+0
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond460) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond460) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond460) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+0
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond461) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond461) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond461) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond461) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+0
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond462) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond462) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond462) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+0
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+0
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+0
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+0
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+0
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker467 Using cfiCommon1
          CFI (cfiPicker467) NoFunction
          CFI (cfiPicker467) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiPicker467

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond468 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+0
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker470 Using cfiCommon1
          CFI (cfiPicker470) NoFunction
          CFI (cfiPicker470) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 8,R6
        MOV     ?V0 + 9,R7
        MOV     ?V0 + 10,#0x0
        MOV     R0,#?V0 + 8
        RET
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiPicker470

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond471 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_266
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+0
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker473 Using cfiCommon1
          CFI (cfiPicker473) NoFunction
          CFI (cfiPicker473) Picker
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiPicker473
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiCond474 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_268
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+0
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+0
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+0
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker478 Using cfiCommon1
          CFI (cfiPicker478) NoFunction
          CFI (cfiPicker478) Picker
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_271:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiPicker478

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond479 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_270
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_266
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+0
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+0
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_268
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond482) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond482) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond482) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond482) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+0
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond483) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond483) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond483) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond483) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond483) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond483) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond483) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond483) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+0
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker484 Using cfiCommon1
          CFI (cfiPicker484) NoFunction
          CFI (cfiPicker484) Picker
        MOVX    A,@DPTR
        ADD     A,#0x6
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiPicker484
// 2227 #endif // ZCL_GROUPS
// 2228 
// 2229 #if defined( ZCL_SCENES )
// 2230 #if !defined ( ZCL_STANDALONE )
// 2231 /*********************************************************************
// 2232  * @fn      zclGeneral_AddScene
// 2233  *
// 2234  * @brief   Add a scene for an endpoint
// 2235  *
// 2236  * @param   endpoint -
// 2237  * @param   scene - new scene item
// 2238  *
// 2239  * @return  ZStatus_t
// 2240  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2241 ZStatus_t zclGeneral_AddScene( uint8 endpoint, zclGeneral_Scene_t *scene )
zclGeneral_AddScene:
          CFI Block cfiBlock485 Using cfiCommon0
          CFI Function zclGeneral_AddScene
        CODE
// 2242 {
        FUNCALL zclGeneral_AddScene, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddScene, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddScene, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV     ?V0 + 2,R1
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 2243   zclGenSceneItem_t *pNewItem;
// 2244   zclGenSceneItem_t *pLoop;
// 2245 
// 2246   // Fill in the new profile list
// 2247   pNewItem = zcl_mem_alloc( sizeof( zclGenSceneItem_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x3a
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R6,?V0 + 4
        MOV     R7,?V0 + 5
// 2248   if ( pNewItem == NULL )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??zclGeneral_AddScene_0
// 2249     return ( ZMemError );
        MOV     R1,#0x10
        SJMP    ??zclGeneral_AddScene_1
// 2250 
// 2251   // Fill in the plugin record.
// 2252   pNewItem->next = (zclGenSceneItem_t *)NULL;
??zclGeneral_AddScene_0:
        MOV     DPL,R6
        MOV     DPH,R7
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine65 & 0xFFFF
// 2253   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_105:
        INC     DPTR
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
// 2254   zcl_memcpy( (uint8*)&(pNewItem->scene), (uint8*)scene, sizeof ( zclGeneral_Scene_t ));
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,#0x37
        MOV     R5,#0x0
        MOV     A,R6
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2255 
// 2256   // Find spot in list
// 2257   if (  zclGenSceneTable == NULL )
        MOV     DPTR,#zclGenSceneTable
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_277:
        MOV     DPTR,#zclGenSceneTable
        JNZ     ??zclGeneral_AddScene_2
// 2258   {
// 2259     zclGenSceneTable = pNewItem;
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        SJMP    ??zclGeneral_AddScene_3
// 2260   }
// 2261   else
// 2262   {
// 2263     // Look for end of list
// 2264     pLoop = zclGenSceneTable;
??zclGeneral_AddScene_2:
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_340:
        SJMP    ??zclGeneral_AddScene_4
// 2265     while ( pLoop->next != NULL )
// 2266       pLoop = pLoop->next;
??zclGeneral_AddScene_5:
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
??zclGeneral_AddScene_4:
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_278:
        JNZ     ??zclGeneral_AddScene_5
// 2267 
// 2268     // Put new item at end of list
// 2269     pLoop->next = pNewItem;
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??zclGeneral_AddScene_3:
        MOVX    @DPTR,A
// 2270   }
// 2271 
// 2272   // Update NV
// 2273   zclGeneral_ScenesWriteNV();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay
// 2274 
// 2275   return ( ZSuccess );
        MOV     R1,#0x0
??zclGeneral_AddScene_1:
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock485
// 2276 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond486 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_293
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+0
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+0
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+0
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker490 Using cfiCommon1
          CFI (cfiPicker490) NoFunction
          CFI (cfiPicker490) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiPicker490
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiCond491 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_288
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+0
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+0
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+0
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+0
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond496) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond496) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond496) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond496) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+0
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+0
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+0
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+0
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker500 Using cfiCommon1
          CFI (cfiPicker500) NoFunction
          CFI (cfiPicker500) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiPicker500
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiCond501 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_273
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+0
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+0
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+0
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function zclGeneral_AddScene
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+0
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function zclGeneral_AddScene
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+0
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+0
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+0
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond509) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond509) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond509) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+0
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond510) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond510) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond510) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+0
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+0
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond512) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+0
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond513) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond513) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond513) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond513) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond513) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+0
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_285
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond514) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond514) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond514) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond514) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond514) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+0
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+0
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond516) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+0
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+0
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+0
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+0
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+0
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+0
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+0
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+0
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+0
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+0
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker526 Using cfiCommon1
          CFI (cfiPicker526) NoFunction
          CFI (cfiPicker526) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_299:
        ORL     A,R1
        RET
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiPicker526
// 2277 #endif // ZCL_STANDALONE
// 2278 
// 2279 #if !defined ( ZCL_STANDALONE )
// 2280 /*********************************************************************
// 2281  * @fn      zclGeneral_FindScene
// 2282  *
// 2283  * @brief   Find a scene with endpoint and sceneID
// 2284  *
// 2285  * @param   endpoint -
// 2286  * @param   groupID - what group the scene belongs to
// 2287  * @param   sceneID - ID to look for scene
// 2288  *
// 2289  * @return  a pointer to the scene information, NULL if not found
// 2290  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2291 zclGeneral_Scene_t *zclGeneral_FindScene( uint8 endpoint, uint16 groupID, uint8 sceneID )
zclGeneral_FindScene:
          CFI Block cfiBlock527 Using cfiCommon0
          CFI Function zclGeneral_FindScene
        CODE
// 2292 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R5,A
// 2293   zclGenSceneItem_t *pLoop;
// 2294 
// 2295   // Look for end of list
// 2296   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_FindScene_0
// 2297   while ( pLoop )
// 2298   {
// 2299     if ( (pLoop->endpoint == endpoint || endpoint == 0xFF)
// 2300         && pLoop->scene.groupID == groupID && pLoop->scene.ID == sceneID )
// 2301     {
// 2302       return ( &(pLoop->scene) );
// 2303     }
// 2304     pLoop = pLoop->next;
??zclGeneral_FindScene_1:
        MOV     DPL,R6
        MOV     DPH,R7
??zclGeneral_FindScene_0:
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_335:
        MOV     A,R6
        ORL     A,R7
        JZ      ??zclGeneral_FindScene_2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
        JZ      ??zclGeneral_FindScene_3
        MOV     A,#-0x1
        XRL     A,R5
        JNZ     ??zclGeneral_FindScene_1
??zclGeneral_FindScene_3:
        MOV     A,R6
        ADD     A,#0x3
        MOV     R0,A
        MOV     A,R7
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_124:
        XRL     A,R2
        JNZ     ??zclGeneral_FindScene_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??zclGeneral_FindScene_4:
        JNZ     ??zclGeneral_FindScene_1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R4
        JNZ     ??zclGeneral_FindScene_1
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        SJMP    ??zclGeneral_FindScene_5
// 2305   }
// 2306 
// 2307   return ( (zclGeneral_Scene_t *)NULL );
??zclGeneral_FindScene_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
          CFI EndBlock cfiBlock527
??zclGeneral_FindScene_5:
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
// 2308 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock528 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock528

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond529 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function zclGeneral_FindScene
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+0
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker531 Using cfiCommon1
          CFI (cfiPicker531) NoFunction
          CFI (cfiPicker531) Picker
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiPicker531
// 2309 #endif // ZCL_STANDALONE
// 2310 
// 2311 #if !defined ( ZCL_STANDALONE )
// 2312 /*********************************************************************
// 2313  * @fn      aps_FindAllScensForGroup
// 2314  *
// 2315  * @brief   Find all the scenes with groupID
// 2316  *
// 2317  * @param   endpoint - endpoint to look for
// 2318  * @param   sceneList - List to hold scene IDs (should hold APS_MAX_SCENES entries)
// 2319  *
// 2320  * @return  number of scenes copied to sceneList
// 2321  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2322 uint8 zclGeneral_FindAllScenesForGroup( uint8 endpoint, uint16 groupID, uint8 *sceneList )
zclGeneral_FindAllScenesForGroup:
          CFI Block cfiBlock532 Using cfiCommon0
          CFI Function zclGeneral_FindAllScenesForGroup
        CODE
// 2323 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
// 2324   zclGenSceneItem_t *pLoop;
// 2325   uint8 cnt = 0;
        MOV     R6,#0x0
// 2326 
// 2327   // Look for end of list
// 2328   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_FindAllScenesForGroup_0
// 2329   while ( pLoop )
// 2330   {
// 2331     if ( pLoop->endpoint == endpoint && pLoop->scene.groupID == groupID )
??zclGeneral_FindAllScenesForGroup_1:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
        JNZ     ??zclGeneral_FindAllScenesForGroup_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??zclGeneral_FindAllScenesForGroup_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??zclGeneral_FindAllScenesForGroup_3:
        JNZ     ??zclGeneral_FindAllScenesForGroup_2
// 2332       sceneList[cnt++] = pLoop->scene.ID;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     ?V0 + 0,R6
        MOV     A,R4
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,R5
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_318:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        INC     R6
// 2333     pLoop = pLoop->next;
??zclGeneral_FindAllScenesForGroup_2:
        MOV     DPL,R0
        MOV     DPH,R1
// 2334   }
??zclGeneral_FindAllScenesForGroup_0:
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_272:
        JNZ     ??zclGeneral_FindAllScenesForGroup_1
// 2335   return ( cnt );
        MOV     A,R6
        MOV     R1,A
        LJMP    ??Subroutine137_0 & 0xFFFF
          CFI EndBlock cfiBlock532
// 2336 }
// 2337 #endif // ZCL_STANDALONE
// 2338 
// 2339 #if !defined ( ZCL_STANDALONE )
// 2340 /*********************************************************************
// 2341  * @fn      zclGeneral_RemoveScene
// 2342  *
// 2343  * @brief   Remove a scene with endpoint and sceneID
// 2344  *
// 2345  * @param   endpoint -
// 2346  * @param   groupID - what group the scene belongs to
// 2347  * @param   sceneID - ID to look for scene
// 2348  *
// 2349  * @return  TRUE if removed, FALSE if not found
// 2350  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2351 uint8 zclGeneral_RemoveScene( uint8 endpoint, uint16 groupID, uint8 sceneID )
zclGeneral_RemoveScene:
          CFI Block cfiBlock533 Using cfiCommon0
          CFI Function zclGeneral_RemoveScene
        CODE
// 2352 {
        FUNCALL zclGeneral_RemoveScene, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RemoveScene, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
// 2353   zclGenSceneItem_t *pLoop;
// 2354   zclGenSceneItem_t *pPrev;
// 2355 
// 2356   // Look for end of list
// 2357   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        LCALL   ?Subroutine48 & 0xFFFF
// 2358   pPrev = NULL;
??CrossCallReturnLabel_71:
        MOV     R4,#0x0
        MOV     R5,#0x0
        SJMP    ??CrossCallReturnLabel_72
// 2359   while ( pLoop )
// 2360   {
// 2361     if ( pLoop->endpoint == endpoint
// 2362         && pLoop->scene.groupID == groupID && pLoop->scene.ID == sceneID )
// 2363     {
// 2364       if ( pPrev == NULL )
// 2365         zclGenSceneTable = pLoop->next;
// 2366       else
// 2367         pPrev->next = pLoop->next;
// 2368 
// 2369       // Free the memory
// 2370       zcl_mem_free( pLoop );
// 2371 
// 2372       // Update NV
// 2373       zclGeneral_ScenesWriteNV();
// 2374 
// 2375       return ( TRUE );
// 2376     }
// 2377     pPrev = pLoop;
??zclGeneral_RemoveScene_0:
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
// 2378     pLoop = pLoop->next;
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_72:
        MOV     A,R0
        ORL     A,R1
        JZ      ??zclGeneral_RemoveScene_1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??zclGeneral_RemoveScene_0
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??zclGeneral_RemoveScene_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??zclGeneral_RemoveScene_2:
        JNZ     ??zclGeneral_RemoveScene_0
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
        JNZ     ??zclGeneral_RemoveScene_0
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV     A,R4
        ORL     A,R5
        JNZ     ??zclGeneral_RemoveScene_3
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_RemoveScene_4
??zclGeneral_RemoveScene_3:
        MOV     DPL,R4
        MOV     DPH,R5
??zclGeneral_RemoveScene_4:
        LCALL   ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_186:
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        LCALL   ??osal_mem_free?relay
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay
        MOV     R1,#0x1
        SJMP    ??zclGeneral_RemoveScene_5
// 2379   }
// 2380 
// 2381   return ( FALSE );
??zclGeneral_RemoveScene_1:
        MOV     R1,#0x0
??zclGeneral_RemoveScene_5:
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock533
// 2382 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond534 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function zclGeneral_SendSceneCopy
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+0
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function zclGeneral_SendOnOff_CmdOnWithTimedOff
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+0
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+0
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function zclGeneral_RemoveScene
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+0
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function zclGeneral_RemoveScene
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+0
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+0
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+0
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+0
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+0
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function zclGeneral_ScenesRestoreFromNV
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+0
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 70)
          CFI Block cfiPicker545 Using cfiCommon1
          CFI (cfiPicker545) NoFunction
          CFI (cfiPicker545) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_361:
        RET
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiPicker545

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond546 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function zclGeneral_SendSceneResponse
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_27
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+0
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function zclGeneral_SendSceneCopy
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_28
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+0
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function zclGeneral_SendSceneCopyResponse
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_29
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+0
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_30
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+0
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function zclGeneral_SendGroupRequest
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_37
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+0
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function zclGeneral_SendSceneRequest
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_38
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+0
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_61
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+0
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_62
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+0
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_63
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+0
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_64
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+0
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_293
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+0
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_294
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+0
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_295
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond559) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond559) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond559) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond559) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond559) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond559) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond559) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+0
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_296
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond560) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond560) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond560) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+0
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_288
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+0
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_289
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+0
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_290
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+0
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_291
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+0
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_292
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+0
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_273
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+0
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_274
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+0
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_275
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+0
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_276
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+0
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function zclGeneral_AddScene
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_277
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+0
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function zclGeneral_AddScene
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_278
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+0
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_272
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+0
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_279
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+0
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_280
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond574) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+0
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_281
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+0
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_282
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+0
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_283
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+0
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_284
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+0
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_285
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+0
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_286
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+0
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_287
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+0
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_59
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+0
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_60
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+0
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_0
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+0
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_1
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+0
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_2
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond586) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond586) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond586) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond586) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond586) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond586) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+0
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_3
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond587) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+0
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_67
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+0
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function zclGeneral_SendSceneCopy
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_68
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+0
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function zclGeneral_SendOnOff_CmdOnWithTimedOff
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_69
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+0
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_70
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+0
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function zclGeneral_RemoveScene
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_71
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+0
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function zclGeneral_RemoveScene
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_72
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+0
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_73
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+0
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_74
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+0
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_75
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond596) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+0
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_76
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+0
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function zclGeneral_ScenesRestoreFromNV
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_77
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+0
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 70)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_355
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+0
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_356
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+0
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_353
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+0
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_354
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+0
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_358, ??CrossCallReturnLabel_65
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+0
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_358, ??CrossCallReturnLabel_66
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+0
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_357, ??CrossCallReturnLabel_47
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+0
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_363, ??CrossCallReturnLabel_357, ??CrossCallReturnLabel_48
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+0
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker607 Using cfiCommon1
          CFI (cfiPicker607) NoFunction
          CFI (cfiPicker607) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiPicker607
// 2383 #endif // ZCL_STANDALONE
// 2384 
// 2385 #if !defined ( ZCL_STANDALONE )
// 2386 /*********************************************************************
// 2387  * @fn      zclGeneral_RemoveAllScenes
// 2388  *
// 2389  * @brief   Remove all scenes with endpoint and group Id
// 2390  *
// 2391  * @param   endpoint -
// 2392  * @param   groupID - ID to look for group
// 2393  *
// 2394  * @return  none
// 2395  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2396 void zclGeneral_RemoveAllScenes( uint8 endpoint, uint16 groupID )
zclGeneral_RemoveAllScenes:
          CFI Block cfiBlock608 Using cfiCommon0
          CFI Function zclGeneral_RemoveAllScenes
        CODE
// 2397 {
        FUNCALL zclGeneral_RemoveAllScenes, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RemoveAllScenes, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 0
        MOV     ?V0 + 4,R1
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 2398   zclGenSceneItem_t *pLoop;
// 2399   zclGenSceneItem_t *pPrev;
// 2400   zclGenSceneItem_t *pNext;
// 2401 
// 2402   // Look for end of list
// 2403   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        LCALL   ??Subroutine115_0 & 0xFFFF
// 2404   pPrev = NULL;
??CrossCallReturnLabel_213:
        MOV     R6,#0x0
        MOV     R7,#0x0
        SJMP    ??zclGeneral_RemoveAllScenes_0
// 2405   while ( pLoop )
// 2406   {
// 2407     if ( pLoop->endpoint == endpoint && pLoop->scene.groupID == groupID )
// 2408     {
// 2409       if ( pPrev == NULL )
// 2410         zclGenSceneTable = pLoop->next;
// 2411       else
// 2412         pPrev->next = pLoop->next;
??zclGeneral_RemoveAllScenes_1:
        MOV     DPL,R6
        MOV     DPH,R7
??zclGeneral_RemoveAllScenes_2:
        LCALL   ?Subroutine63 & 0xFFFF
// 2413       pNext = pLoop->next;
??CrossCallReturnLabel_303:
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
// 2414 
// 2415       // Free the memory
// 2416       zcl_mem_free( pLoop );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??osal_mem_free?relay
// 2417       pLoop = pNext;
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
??zclGeneral_RemoveAllScenes_0:
        MOV     A,R2
        ORL     A,R3
        JZ      ??zclGeneral_RemoveAllScenes_3
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 4
        JNZ     ??zclGeneral_RemoveAllScenes_4
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??zclGeneral_RemoveAllScenes_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??zclGeneral_RemoveAllScenes_5:
        JNZ     ??zclGeneral_RemoveAllScenes_4
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_73:
        MOV     A,R6
        ORL     A,R7
        JNZ     ??zclGeneral_RemoveAllScenes_1
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_RemoveAllScenes_2
// 2418     }
// 2419     else
// 2420     {
// 2421       pPrev = pLoop;
??zclGeneral_RemoveAllScenes_4:
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2422       pLoop = pLoop->next;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine115_0 & 0xFFFF
// 2423     }
// 2424   }
??CrossCallReturnLabel_214:
        SJMP    ??zclGeneral_RemoveAllScenes_0
// 2425 
// 2426   // Update NV
// 2427   zclGeneral_ScenesWriteNV();
??zclGeneral_RemoveAllScenes_3:
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay
// 2428 }
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock608

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond609 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_302
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+0
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker611 Using cfiCommon1
          CFI (cfiPicker611) NoFunction
          CFI (cfiPicker611) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiPicker611
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine124_0:
          CFI Block cfiCond612 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_304
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+0
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+0
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+0
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker616 Using cfiCommon1
          CFI (cfiPicker616) NoFunction
          CFI (cfiPicker616) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiPicker616
// 2429 #endif // ZCL_STANDALONE
// 2430 
// 2431 #if !defined ( ZCL_STANDALONE )
// 2432 /*********************************************************************
// 2433  * @fn      zclGeneral_CountScenes
// 2434  *
// 2435  * @brief   Count the number of scenes for an endpoint
// 2436  *
// 2437  * @param   endpoint -
// 2438  *
// 2439  * @return  number of scenes assigned to an endpoint
// 2440  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2441 uint8 zclGeneral_CountScenes( uint8 endpoint )
zclGeneral_CountScenes:
          CFI Block cfiBlock617 Using cfiCommon0
          CFI Function zclGeneral_CountScenes
        CODE
// 2442 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,R1
        MOV     R0,A
// 2443   zclGenSceneItem_t *pLoop;
// 2444   uint8 cnt = 0;
        MOV     R1,#0x0
// 2445 
// 2446   // Look for end of list
// 2447   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_CountScenes_0
// 2448   while ( pLoop )
// 2449   {
// 2450     if ( pLoop->endpoint == endpoint  )
??zclGeneral_CountScenes_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??zclGeneral_CountScenes_2
// 2451       cnt++;
        INC     R1
// 2452     pLoop = pLoop->next;
??zclGeneral_CountScenes_2:
        MOV     DPL,R2
        MOV     DPH,R3
// 2453   }
??zclGeneral_CountScenes_0:
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_308:
        JNZ     ??zclGeneral_CountScenes_1
// 2454   return ( cnt );
        SJMP    ?Subroutine7
          CFI EndBlock cfiBlock617
// 2455 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond618 Using cfiCommon0
          CFI Function zclGeneral_ProcessInOnOff
          CFI Conditional ??CrossCallReturnLabel_313
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+0
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+0
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+0
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        MOV     R2,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_306
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+0
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+0
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+0
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+0
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker628 Using cfiCommon1
          CFI (cfiPicker628) NoFunction
          CFI (cfiPicker628) Picker
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiPicker628
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine126_0:
          CFI Block cfiCond629 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_309
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function zclGeneral_FindCallbacks
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond630) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond630) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond630) CFA_SP SP+-5
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+0
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function zclGeneral_CountScenes
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond632) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond632) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond632) CFA_SP SP+-5
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond633) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+0
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond634) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond634) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond634) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+0
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+0
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+0
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+0
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+0
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+0
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker640 Using cfiCommon1
          CFI (cfiPicker640) NoFunction
          CFI (cfiPicker640) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_344:
        MOV     R3,A
        MOV     A,R2
        ORL     A,R3
        RET
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiPicker640

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond641 Using cfiCommon0
          CFI Function zclGeneral_FindCallbacks
          CFI Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_216
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_217
          CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond642) CFA_SP SP+0
          CFI (cfiCond642) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_203
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond643) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond643) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond643) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond643) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond643) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond643) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+0
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_204
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond644) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond644) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond644) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+0
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_205
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+0
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_206
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+0
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_207
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+0
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function zclGeneral_HdlIncoming
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_208
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+0
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function zclGeneral_HdlIncoming
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_209
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+0
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_210
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond650) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond650) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond650) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond650) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond650) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+0
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_211
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+0
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function zclGeneral_RemoveScene
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_212
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+0
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_213
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+0
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_214
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+0
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function zclGeneral_CountAllScenes
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_215
          CFI (cfiCond655) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond655) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond655) CFA_SP SP+-5
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_238
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond656) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond656) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond656) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+0
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_239
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond657) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond657) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+0
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_240
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond658) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond658) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+0
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_241
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond659) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+0
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_242
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond660) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond660) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond660) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+0
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_243
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond661) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+0
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_244
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond662) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+0
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_245
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond663) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond663) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond663) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond663) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+0
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_246
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond664) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond664) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond664) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond664) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond664) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond664) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond664) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond664) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+0
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_247
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond665) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond665) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond665) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+0
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_248
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond666) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond666) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond666) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond666) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+0
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_249
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond667) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond667) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+0
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_250
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond668) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+0
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function zclGeneral_AddScene
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+0
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_313
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+0
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_314
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+0
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_315
          CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond672) CFA_SP SP+0
          CFI (cfiCond672) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_316
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+0
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_306
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+0
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_309
          CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond675) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond675) CFA_SP SP+0
          CFI (cfiCond675) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function zclGeneral_FindCallbacks
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_307
          CFI (cfiCond676) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond676) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond676) CFA_SP SP+-5
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_310
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+0
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function zclGeneral_CountScenes
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_308
          CFI (cfiCond678) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond678) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond678) CFA_SP SP+-5
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_311
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond679) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond679) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond679) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond679) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond679) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond679) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond679) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond679) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+0
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_312
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond680) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond680) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond680) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond680) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond680) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond680) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+0
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_337
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond681) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond681) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond681) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond681) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond681) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+0
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_338
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond682) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond682) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond682) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond682) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+0
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_339
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+0
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond684 Using cfiCommon0
          CFI (cfiCond684) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond684) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_57
          CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond684) CFA_SP SP+0
          CFI (cfiCond684) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_58
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+0
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_12
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+0
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_13
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+0
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_14
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+0
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_15
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+0
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_16
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+0
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker691 Using cfiCommon1
          CFI (cfiPicker691) NoFunction
          CFI (cfiPicker691) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiPicker691
// 2456 #endif
// 2457 
// 2458 #if !defined ( ZCL_STANDALONE )
// 2459 /*********************************************************************
// 2460  * @fn      zclGeneral_CountAllScenes
// 2461  *
// 2462  * @brief   Count the total number of scenes
// 2463  *
// 2464  * @param   none
// 2465  *
// 2466  * @return  number of scenes
// 2467  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2468 uint8 zclGeneral_CountAllScenes( void )
zclGeneral_CountAllScenes:
          CFI Block cfiBlock692 Using cfiCommon0
          CFI Function zclGeneral_CountAllScenes
        CODE
// 2469 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2470   zclGenSceneItem_t *pLoop;
// 2471   uint8 cnt = 0;
        MOV     R1,#0x0
// 2472 
// 2473   // Look for end of list
// 2474   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        SJMP    ??zclGeneral_CountAllScenes_0
// 2475   while ( pLoop )
// 2476   {
// 2477     cnt++;
??zclGeneral_CountAllScenes_1:
        INC     R1
// 2478     pLoop = pLoop->next;
// 2479   }
??zclGeneral_CountAllScenes_0:
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_215:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??zclGeneral_CountAllScenes_1
          CFI EndBlock cfiBlock692
// 2480   return ( cnt );
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 2481 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock693 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock693
// 2482 #endif // ZCL_STANDALONE
// 2483 
// 2484 /*********************************************************************
// 2485  * @fn      zclGeneral_ReadSceneCountCB
// 2486  *
// 2487  * @brief   Read the number of scenes currently in the device's
// 2488  *          scene table (i.e., the Scene Count attribute).
// 2489  *
// 2490  *          Note: This function gets called only when the pointer
// 2491  *                'dataPtr' to the Scene Count attribute value is
// 2492  *                NULL in the attribute database registered with
// 2493  *                the ZCL.
// 2494  *
// 2495  * @param   clusterId - cluster that attribute belongs to
// 2496  * @param   attrId - attribute to be read or written
// 2497  * @param   oper - ZCL_OPER_LEN, ZCL_OPER_READ, or ZCL_OPER_WRITE
// 2498  * @param   pValue - pointer to attribute value
// 2499  * @param   pLen - pointer to length of attribute value read
// 2500  *
// 2501  * @return  status
// 2502  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2503 ZStatus_t zclGeneral_ReadSceneCountCB( uint16 clusterId, uint16 attrId,
zclGeneral_ReadSceneCountCB:
          CFI Block cfiBlock694 Using cfiCommon0
          CFI Function zclGeneral_ReadSceneCountCB
        CODE
// 2504                                        uint8 oper, uint8 *pValue, uint16 *pLen )
// 2505 {
        FUNCALL zclGeneral_ReadSceneCountCB, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 3,R1
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_74:
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
// 2506   ZStatus_t status = ZCL_STATUS_SUCCESS;
        MOV     ?V0 + 2,#0x0
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
// 2507 
// 2508   // This callback function should only be called for the Scene Count attribute
// 2509   switch ( oper )
??CrossCallReturnLabel_60:
        MOV     A,?V0 + 3
        JZ      ??zclGeneral_ReadSceneCountCB_0
        DEC     A
        JNZ     ??zclGeneral_ReadSceneCountCB_1
// 2510   {
// 2511     case ZCL_OPER_LEN:
// 2512       *pLen = 1; // uint8
// 2513       break;
// 2514 
// 2515     case ZCL_OPER_READ:
// 2516       *pValue = zclGeneral_CountAllScenes();
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay
        MOV     A,R1
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    @DPTR,A
// 2517 
// 2518       if ( pLen != NULL )
        MOV     A,R6
        ORL     A,R7
        JZ      ??zclGeneral_ReadSceneCountCB_2
// 2519       {
// 2520         *pLen = 1;
??zclGeneral_ReadSceneCountCB_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        SJMP    ??zclGeneral_ReadSceneCountCB_2
// 2521       }
// 2522       break;
// 2523 
// 2524     case ZCL_OPER_WRITE:
// 2525       // Fall through
// 2526 
// 2527     default:
// 2528       status = ZCL_STATUS_SOFTWARE_FAILURE; // should never get here!
??zclGeneral_ReadSceneCountCB_1:
        MOV     ?V0 + 2,#-0x3f
// 2529       break;
// 2530   }
// 2531 
// 2532   return ( status );
??zclGeneral_ReadSceneCountCB_2:
        MOV     R1,?V0 + 2
        LJMP    ??Subroutine109_0 & 0xFFFF
          CFI EndBlock cfiBlock694
// 2533 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond695 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+0
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker697 Using cfiCommon1
          CFI (cfiPicker697) NoFunction
          CFI (cfiPicker697) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_301:
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        RET
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiPicker697
// 2534 
// 2535 /*********************************************************************
// 2536  * @fn      zclGeneral_ProcessInScenesServer
// 2537  *
// 2538  * @brief   Process in the received Scenes Command.
// 2539  *
// 2540  * @param   pInMsg - pointer to the incoming message
// 2541  *
// 2542  * @return  ZStatus_t
// 2543  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2544 static ZStatus_t zclGeneral_ProcessInScenesServer( zclIncoming_t *pInMsg,
zclGeneral_ProcessInScenesServer:
          CFI Block cfiBlock698 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
        CODE
// 2545                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2546 {
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 91, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 91, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 90, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 90, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 90, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 90, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 92, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 92, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 92, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 92, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneViewRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 91, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 91, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneViewRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 91, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 91, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 92, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 92, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 92, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 92, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 92, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 92, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindAllScenesForGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneGetMembershipResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 94, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 94, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindAllScenesForGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneCopyResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 91, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 91, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 63
        MOV     A,#-0x3f
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     ?V0 + 10,R4
        MOV     ?V0 + 11,R5
// 2547   zclGeneral_Scene_t scene;
// 2548   zclGeneral_Scene_t *pScene;
// 2549   uint8 *pData = pInMsg->pData;
        MOV     A,R2
        ADD     A,#0x8
        MOV     ?V0 + 2,A
        MOV     A,R3
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_146:
        LCALL   ?Subroutine32 & 0xFFFF
// 2550   uint8 nameLen;
// 2551   uint8 status;
// 2552   uint8 sceneCnt = 0;
??CrossCallReturnLabel_41:
        MOV     ?V0 + 8,#0x0
// 2553   uint8 *sceneList = NULL;
        MOV     ?V0 + 12,#0x0
        MOV     ?V0 + 13,#0x0
// 2554   uint8 sendRsp = TRUE;
// 2555   uint8 nameSupport = FALSE;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 2556   ZStatus_t stat = ZSuccess;
        MOV     R6,A
// 2557 
// 2558   zcl_memset( (uint8*)&scene, 0, sizeof( zclGeneral_Scene_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x37
        MOV     R5,A
        MOV     R1,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
// 2559 
// 2560   scene.groupID = BUILD_UINT16( pData[0], pData[1] );
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_200:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
// 2561   pData += 2;   // Move past group ID
// 2562   scene.ID = *pData++;
??CrossCallReturnLabel_84:
        MOV     DPL,?V0 + 0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     A,?V0 + 6
        ADD     A,#0x7
        MOV     ?V0 + 14,A
        MOV     A,?V0 + 7
        ADDC    A,#0x0
        MOV     ?V0 + 15,A
        MOV     DPL,?V0 + 14
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInScenesServer_0
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_1 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_2 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_4 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_5 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_6 & 0xFFFF
        ADD     A,#-0x3a
        JZ      ??zclGeneral_ProcessInScenesServer_0
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_1 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_7 & 0xFFFF
        LJMP    ??zclGeneral_ProcessInScenesServer_8 & 0xFFFF
// 2563 
// 2564   switch ( pInMsg->hdr.commandID )
// 2565   {
// 2566     case COMMAND_SCENE_ADD:
// 2567 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2568     case COMMAND_SCENE_ENHANCED_ADD:
// 2569 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2570       // Parse the rest of the incoming message
// 2571       scene.transTime = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInScenesServer_0:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
// 2572       pData += 2;
// 2573 
// 2574       if ( pInMsg->hdr.commandID == COMMAND_SCENE_ENHANCED_ADD )
??CrossCallReturnLabel_85:
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        MOVX    A,@DPTR
        XRL     A,#0x40
        JNZ     ??CrossCallReturnLabel_260
// 2575       {
// 2576         // Received transition time is in 1/10 second
// 2577         scene.transTime100ms = scene.transTime % 10;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine110_0 & 0xFFFF
// 2578         scene.transTime /= 10;
??CrossCallReturnLabel_187:
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 2579       }
??CrossCallReturnLabel_75:
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 2580 
// 2581       nameLen= *pData++; // Name length
??CrossCallReturnLabel_260:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
// 2582 
// 2583       // Retrieve Name Support attribute
// 2584       zcl_ReadAttrData( pInMsg->msg->endPoint, ZCL_CLUSTER_ID_GEN_SCENES,
// 2585                         ATTRID_SCENES_NAME_SUPPORT, &nameSupport, NULL );
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 91)
        MOV     R4,#0x4
        MOV     R5,#0x0
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_227:
        LCALL   ??zcl_ReadAttrData?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 2586 
// 2587       if ( nameSupport )
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInScenesServer_9
// 2588       {
// 2589         if ( nameLen > (ZCL_GEN_SCENE_NAME_LEN-1) )
        MOV     A,R6
        CLR     C
        SUBB    A,#0x10
        JC      ??zclGeneral_ProcessInScenesServer_10
// 2590           nameLen = (ZCL_GEN_SCENE_NAME_LEN-1);
        MOV     R6,#0xf
// 2591         scene.name[0] = nameLen;
??zclGeneral_ProcessInScenesServer_10:
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
// 2592         zcl_memcpy( &(scene.name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 8,?V0 + 0
        MOV     ?V0 + 9,?V0 + 1
        MOV     ?V0 + 10,#0x0
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     ?V0 + 4,R6
        MOV     R4,?V0 + 4
        MOV     R5,#0x0
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 2593       }
// 2594 
// 2595       pData += nameLen; // move past name, use original length
??zclGeneral_ProcessInScenesServer_9:
        MOV     ?V0 + 4,R6
        MOV     A,?V0 + 0
        ADD     A,?V0 + 4
        LCALL   ?Subroutine72 & 0xFFFF
// 2596 
// 2597       scene.extLen = pInMsg->pDataLen - ( (uint16)( pData - pInMsg->pData ) );
??CrossCallReturnLabel_116:
        MOV     R0,A
        MOV     R1,?V0 + 0
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R1
        ADD     A,R0
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2598       if ( scene.extLen > 0 )
        JZ      ??zclGeneral_ProcessInScenesServer_11
// 2599       {
// 2600         // Copy the extention field(s)
// 2601         if ( scene.extLen > ZCL_GEN_SCENE_EXT_LEN )
        CLR     C
        SUBB    A,#0x20
        JC      ??zclGeneral_ProcessInScenesServer_12
// 2602         {
// 2603           scene.extLen = ZCL_GEN_SCENE_EXT_LEN;
        MOV     A,#0x1f
        MOVX    @DPTR,A
// 2604         }
// 2605         zcl_memcpy( scene.extField, pData, scene.extLen );
??zclGeneral_ProcessInScenesServer_12:
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0x23
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 2606       }
// 2607 
// 2608       if ( scene.groupID == 0x0000 ||
// 2609            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_11:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_279:
        JZ      ??zclGeneral_ProcessInScenesServer_13
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_238:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_14 & 0xFFFF
// 2610       {
// 2611         // Either the Scene doesn't belong to a Group (Group ID = 0x0000) or it
// 2612         // does and the corresponding Group exits
// 2613         pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_13:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_239:
        LCALL   ??zclGeneral_FindScene?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
// 2614         if ( pScene || ( zclGeneral_CountAllScenes() < ZCL_GEN_MAX_SCENES ) )
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     ??zclGeneral_ProcessInScenesServer_15
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay
        MOV     A,R1
        CLR     C
        SUBB    A,#0x10
        JC      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_16 & 0xFFFF
// 2615         {
// 2616           status = ZCL_STATUS_SUCCESS;
??zclGeneral_ProcessInScenesServer_15:
        MOV     ?V0 + 0,#0x0
// 2617           if ( pScene != NULL )
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_17 & 0xFFFF
// 2618           {
// 2619             // The Scene already exists so update it
// 2620             pScene->transTime = scene.transTime;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_76:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine64 & 0xFFFF
// 2621             zcl_memcpy( pScene->name, scene.name, ZCL_GEN_SCENE_NAME_LEN );
??CrossCallReturnLabel_261:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 8,R1
        MOV     ?V0 + 9,R2
        MOV     ?V0 + 10,#0x0
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     R4,#0x10
        MOV     R5,#0x0
        MOV     A,?V0 + 4
        ADD     A,#0x7
        MOV     R2,A
        MOV     A,?V0 + 5
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 2622 
// 2623             // Use the new extention field(s)
// 2624             zcl_memcpy( pScene->extField, scene.extField, scene.extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 8,R1
        MOV     ?V0 + 9,R2
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,?V0 + 4
        ADD     A,#0x18
        MOV     R2,A
        MOV     A,?V0 + 5
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 2625             pScene->extLen = scene.extLen;
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 4
        ADD     A,#0x17
        MOV     DPL,A
        MOV     A,?V0 + 5
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_319:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2626 
// 2627             // Save Scenes
// 2628             zclGeneral_ScenesSave();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay
// 2629           }
        SJMP    ??zclGeneral_ProcessInScenesServer_18
// 2630           else
// 2631           {
// 2632             // The Scene doesn't exist so add it
// 2633             zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
??zclGeneral_ProcessInScenesServer_17:
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine117_0 & 0xFFFF
// 2634           }
// 2635         }
??CrossCallReturnLabel_228:
        LCALL   ??zclGeneral_AddScene?relay
        SJMP    ??zclGeneral_ProcessInScenesServer_18
// 2636         else
// 2637         {
// 2638           status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_16:
        MOV     ?V0 + 0,#-0x77
        SJMP    ??zclGeneral_ProcessInScenesServer_18
// 2639         }
// 2640       }
// 2641       else
// 2642       {
// 2643         status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_14:
        MOV     ?V0 + 0,#-0x7b
// 2644       }
// 2645 
// 2646       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_18:
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_0:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_311:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
// 2647       {
// 2648         if ( pInMsg->hdr.commandID == COMMAND_SCENE_ADD )
        MOV     A,R0
        ADD     A,#0x14
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R0
        ADD     A,#0x6
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_78:
        JNZ     ??zclGeneral_ProcessInScenesServer_20
// 2649         {
// 2650           zclGeneral_SendSceneAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2651                                           status, scene.groupID, scene.ID,
// 2652                                           true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        MOV     A,R0
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,R1
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 92)
        MOV     R5,?V0 + 0
        MOV     R4,#0x0
        SJMP    ??zclGeneral_ProcessInScenesServer_21
          CFI CFA_XSP16 add(XSP16, 87)
// 2653         }
// 2654 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2655         else // COMMAND_SCENE_ENHANCED_ADD
// 2656         {
// 2657           zclGeneral_SendSceneEnhancedAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2658                                                   status, scene.groupID, scene.ID,
// 2659                                                   true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInScenesServer_20:
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        MOV     A,R0
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,R1
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 92)
        MOV     R5,?V0 + 0
        MOV     R4,#0x40
??zclGeneral_ProcessInScenesServer_21:
        MOV     DPL,R6
        MOV     DPH,R7
        LJMP    ??CrossCallReturnLabel_320 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 87)
// 2660         }
// 2661 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2662       }
// 2663       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2664 
// 2665       break;
// 2666 
// 2667     case COMMAND_SCENE_VIEW:
// 2668 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2669     case COMMAND_SCENE_ENHANCED_VIEW:
// 2670 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2671       pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_1:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_240:
        LCALL   ??zclGeneral_FindScene?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
// 2672       if ( pScene != NULL )
        MOV     A,R2
        ORL     A,?V0 + 5
        JZ      ??zclGeneral_ProcessInScenesServer_22
// 2673       {
// 2674         status = ZCL_STATUS_SUCCESS;
        MOV     ?V0 + 0,R6
        SJMP    ??zclGeneral_ProcessInScenesServer_23
// 2675       }
// 2676       else
// 2677       {
// 2678         // Scene not found
// 2679         if ( scene.groupID != 0x0000 &&
// 2680              aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) == NULL )
??zclGeneral_ProcessInScenesServer_22:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_280:
        JZ      ??zclGeneral_ProcessInScenesServer_24
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_241:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??zclGeneral_ProcessInScenesServer_24
// 2681         {
// 2682           status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
        MOV     ?V0 + 0,#-0x7b
        SJMP    ??zclGeneral_ProcessInScenesServer_25
// 2683         }
// 2684         else
// 2685         {
// 2686           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInScenesServer_24:
        MOV     ?V0 + 0,#-0x75
// 2687         }
// 2688         pScene = &scene;
??zclGeneral_ProcessInScenesServer_25:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
// 2689       }
// 2690 
// 2691       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_23:
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_1:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_312:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
// 2692       {
// 2693         if ( pInMsg->hdr.commandID == COMMAND_SCENE_VIEW )
        MOV     A,R0
        ADD     A,#0x14
        MOV     R6,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R7,A
        MOV     A,R0
        ADD     A,#0x6
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_79:
        XRL     A,#0x1
        JNZ     ??zclGeneral_ProcessInScenesServer_26
// 2694         {
// 2695           zclGeneral_SendSceneViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2696                                            status, pScene, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneViewRsp
        MOV     A,R0
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 91)
        MOV     R5,?V0 + 0
        MOV     R4,#0x1
        SJMP    ??zclGeneral_ProcessInScenesServer_27
          CFI CFA_XSP16 add(XSP16, 87)
// 2697         }
// 2698 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2699         else
// 2700         {
// 2701           zclGeneral_SendSceneEnhancedViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2702                                                    status, pScene, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInScenesServer_26:
        ; Setup parameters for call to function zclGeneral_SendSceneViewRsp
        MOV     A,R0
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 91)
        MOV     R5,?V0 + 0
        MOV     R4,#0x41
??zclGeneral_ProcessInScenesServer_27:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??zclGeneral_SendSceneViewRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
// 2703         }
// 2704 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2705       }
// 2706       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2707       break;
// 2708 
// 2709     case COMMAND_SCENE_REMOVE:
// 2710       if ( zclGeneral_RemoveScene( pInMsg->msg->endPoint, scene.groupID, scene.ID ) )
??zclGeneral_ProcessInScenesServer_2:
        ; Setup parameters for call to function zclGeneral_RemoveScene
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_242:
        LCALL   ??zclGeneral_RemoveScene?relay
        MOV     A,R1
        JZ      ??zclGeneral_ProcessInScenesServer_28
// 2711       {
// 2712         status = ZCL_STATUS_SUCCESS;
        MOV     ?V0 + 0,R6
        SJMP    ??zclGeneral_ProcessInScenesServer_29
// 2713       }
// 2714       else
// 2715       {
// 2716         // Scene not found
// 2717         if ( aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) == NULL )
??zclGeneral_ProcessInScenesServer_28:
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_243:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??zclGeneral_ProcessInScenesServer_30
// 2718         {
// 2719           // The Group is not in the Group Table
// 2720           status = ZCL_STATUS_INVALID_FIELD;
        MOV     ?V0 + 0,#-0x7b
        SJMP    ??zclGeneral_ProcessInScenesServer_29
// 2721         }
// 2722         else
// 2723         {
// 2724           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInScenesServer_30:
        MOV     ?V0 + 0,#-0x75
// 2725         }
// 2726       }
// 2727 
// 2728       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_29:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_4:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_293:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
// 2729       {
// 2730         // Addressed to this device (not to a group) - send a response back
// 2731         zclGeneral_SendSceneRemoveResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2732                                             status, scene.groupID,
// 2733                                             scene.ID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL   ?Subroutine33 & 0xFFFF
// 2734       }
??CrossCallReturnLabel_348:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_346:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 92)
        MOV     R5,?V0 + 0
        MOV     R4,#0x2
        LJMP    ??zclGeneral_ProcessInScenesServer_31 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 87)
// 2735       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2736       break;
// 2737 
// 2738     case COMMAND_SCENE_REMOVE_ALL:
// 2739       if ( scene.groupID == 0x0000 ||
// 2740            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_3:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_281:
        JZ      ??zclGeneral_ProcessInScenesServer_32
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_244:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??zclGeneral_ProcessInScenesServer_33
// 2741       {
// 2742         zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, scene.groupID );
??zclGeneral_ProcessInScenesServer_32:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_245:
        LCALL   ??zclGeneral_RemoveAllScenes?relay
// 2743         status = ZCL_STATUS_SUCCESS;
        MOV     ?V0 + 0,R6
        SJMP    ??zclGeneral_ProcessInScenesServer_34
// 2744       }
// 2745       else
// 2746       {
// 2747         status = ZCL_STATUS_INVALID_FIELD;
??zclGeneral_ProcessInScenesServer_33:
        MOV     ?V0 + 0,#-0x7b
// 2748       }
// 2749 
// 2750       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_34:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_5:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_294:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
// 2751       {
// 2752         // Addressed to this device (not to a group) - send a response back
// 2753         zclGeneral_SendSceneRemoveAllResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2754                                                status, scene.groupID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL   ?Subroutine33 & 0xFFFF
// 2755       }
??CrossCallReturnLabel_349:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 92)
        MOV     R5,?V0 + 0
        MOV     R4,#0x3
        LJMP    ??zclGeneral_ProcessInScenesServer_31 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 87)
// 2756       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2757       break;
// 2758 
// 2759     case COMMAND_SCENE_STORE:
// 2760       if ( scene.groupID == 0x0000 ||
// 2761            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_4:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_282:
        JZ      ??zclGeneral_ProcessInScenesServer_35
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_246:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_36 & 0xFFFF
// 2762       {
// 2763         // Either the Scene doesn't belong to a Group (Group ID = 0x0000) or it
// 2764         // does and the corresponding Group exits
// 2765         pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_35:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_247:
        LCALL   ??zclGeneral_FindScene?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
// 2766         if ( pScene || ( zclGeneral_CountAllScenes() < ZCL_GEN_MAX_SCENES ) )
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     ??zclGeneral_ProcessInScenesServer_37
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay
        MOV     A,R1
        CLR     C
        SUBB    A,#0x10
        JNC     ??zclGeneral_ProcessInScenesServer_38
// 2767         {
// 2768           uint8 sceneChanged = FALSE;
// 2769 
// 2770           status = ZCL_STATUS_SUCCESS;
??zclGeneral_ProcessInScenesServer_37:
        MOV     ?V0 + 0,R6
// 2771           if ( pScene == NULL )
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JNZ     ??zclGeneral_ProcessInScenesServer_39
// 2772           {
// 2773             // Haven't been added yet
// 2774             pScene = &scene;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
// 2775           }
// 2776 
// 2777           if ( pCBs->pfnSceneStoreReq )
??zclGeneral_ProcessInScenesServer_39:
        MOV     A,?V0 + 10
        ADD     A,#0x1a
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_323:
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_283:
        JZ      ??zclGeneral_ProcessInScenesServer_40
// 2778           {
// 2779             zclSceneReq_t req;
// 2780 
// 2781             req.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_51:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine110_0 & 0xFFFF
// 2782             req.scene = pScene;
??CrossCallReturnLabel_188:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
// 2783 
// 2784             // Get the latest Scene info
// 2785             if ( pCBs->pfnSceneStoreReq( &req ) )
        ; Setup parameters for indirect call
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?CALL_IND
        MOV     A,R1
        JZ      ??zclGeneral_ProcessInScenesServer_40
// 2786             {
// 2787               sceneChanged = TRUE;
        INC     R6
// 2788             }
// 2789           }
// 2790 
// 2791           if ( pScene == &scene )
??zclGeneral_ProcessInScenesServer_40:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,DPL
        XRL     A,?V0 + 4
        JNZ     ??zclGeneral_ProcessInScenesServer_41
        MOV     A,DPH
        XRL     A,?V0 + 5
??zclGeneral_ProcessInScenesServer_41:
        JNZ     ??zclGeneral_ProcessInScenesServer_42
// 2792           {
// 2793             // The Scene doesn't exist so add it
// 2794             zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine117_0 & 0xFFFF
// 2795           }
??CrossCallReturnLabel_229:
        LCALL   ??zclGeneral_AddScene?relay
        SJMP    ??zclGeneral_ProcessInScenesServer_43
// 2796           else if ( sceneChanged )
??zclGeneral_ProcessInScenesServer_42:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JNC     ??zclGeneral_ProcessInScenesServer_43
// 2797           {
// 2798             // The Scene already exists so update only NV
// 2799             zclGeneral_ScenesSave();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay
// 2800           }
// 2801         }
        SJMP    ??zclGeneral_ProcessInScenesServer_43
// 2802         else
// 2803         {
// 2804           status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_38:
        MOV     ?V0 + 0,#-0x77
        SJMP    ??zclGeneral_ProcessInScenesServer_43
// 2805         }
// 2806       }
// 2807       else
// 2808       {
// 2809         status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_36:
        MOV     ?V0 + 0,#-0x7b
// 2810       }
// 2811 
// 2812       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_43:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_6:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_295:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
// 2813       {
// 2814         // Addressed to this device (not to a group) - send a response back
// 2815         zclGeneral_SendSceneStoreResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2816                                            status, scene.groupID, scene.ID,
// 2817                                            true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL   ?Subroutine33 & 0xFFFF
// 2818       }
??CrossCallReturnLabel_350:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_347:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 92)
        MOV     R5,?V0 + 0
        MOV     R4,#0x4
??zclGeneral_ProcessInScenesServer_31:
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_330:
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_320:
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??zclGeneral_SendSceneResponse?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
        LJMP    ??zclGeneral_ProcessInScenesServer_19 & 0xFFFF
// 2819       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2820       break;
// 2821 
// 2822     case COMMAND_SCENE_RECALL:
// 2823       pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_5:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_248:
        LCALL   ??zclGeneral_FindScene?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
// 2824       if ( pScene && pCBs->pfnSceneRecallReq )
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_44 & 0xFFFF
        MOV     A,?V0 + 10
        ADD     A,#0x1c
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_324:
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_284:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_44 & 0xFFFF
// 2825       {
// 2826         zclSceneReq_t req;
// 2827 
// 2828         req.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_52:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine110_0 & 0xFFFF
// 2829         req.scene = pScene;
??CrossCallReturnLabel_189:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
// 2830 
// 2831         pCBs->pfnSceneRecallReq( &req );
        ; Setup parameters for indirect call
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?CALL_IND
        LJMP    ??zclGeneral_ProcessInScenesServer_44 & 0xFFFF
// 2832       }
// 2833       // No response
// 2834       break;
// 2835 
// 2836     case COMMAND_SCENE_GET_MEMBERSHIP:
// 2837       // Find all the Scenes corresponding to the Group ID
// 2838       if ( scene.groupID == 0x0000 ||
// 2839            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_6:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_285:
        JZ      ??zclGeneral_ProcessInScenesServer_45
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_249:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??zclGeneral_ProcessInScenesServer_46
// 2840       {
// 2841         // Allocate space for the scene list
// 2842         sceneList = zcl_mem_alloc( ZCL_GEN_MAX_SCENES );
??zclGeneral_ProcessInScenesServer_45:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x10
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
// 2843         if ( sceneList != NULL )
        MOV     A,R2
        ORL     A,?V0 + 13
        JZ      ??zclGeneral_ProcessInScenesServer_47
// 2844         {
// 2845           sceneCnt = zclGeneral_FindAllScenesForGroup( pInMsg->msg->endPoint,
// 2846                                                        scene.groupID, sceneList );
        ; Setup parameters for call to function zclGeneral_FindAllScenesForGroup
        MOV     R4,?V0 + 12
        MOV     R5,?V0 + 13
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_250:
        LCALL   ??zclGeneral_FindAllScenesForGroup?relay
        MOV     A,R1
        MOV     ?V0 + 8,A
// 2847           status = ZCL_STATUS_SUCCESS;
        MOV     ?V0 + 0,R6
// 2848           if ( ! UNICAST_MSG( pInMsg->msg ) )
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_2:
        JNZ     ??zclGeneral_ProcessInScenesServer_48
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_291:
        JZ      ??zclGeneral_ProcessInScenesServer_49
// 2849           {
// 2850             // Addressed to the Group - ONLY send a response if an entry within the
// 2851             // Scene Table corresponds to the Group ID
// 2852             if ( sceneCnt == 0 )
??zclGeneral_ProcessInScenesServer_48:
        MOV     A,?V0 + 8
        JNZ     ??zclGeneral_ProcessInScenesServer_49
        LJMP    ??zclGeneral_ProcessInScenesServer_50 & 0xFFFF
// 2853             {
// 2854               sendRsp = FALSE;
// 2855             }
// 2856           }
// 2857         }
// 2858         else
// 2859         {
// 2860           // Couldn't allocate space for the scene list!
// 2861           status = ZCL_STATUS_INSUFFICIENT_SPACE;
??zclGeneral_ProcessInScenesServer_47:
        MOV     ?V0 + 0,#-0x77
        SJMP    ??zclGeneral_ProcessInScenesServer_49
// 2862         }
// 2863       }
// 2864       else
// 2865       {
// 2866         // The Group is not in the Group Table - send a response back
// 2867         status = ZCL_STATUS_INVALID_FIELD;
??zclGeneral_ProcessInScenesServer_46:
        MOV     ?V0 + 0,#-0x7b
// 2868       }
??zclGeneral_ProcessInScenesServer_49:
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_3:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_51 & 0xFFFF
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_292:
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_51 & 0xFFFF
// 2869 
// 2870 #ifdef ZCL_LIGHT_LINK_ENHANCE //ZLL allows response to unicast only
// 2871       if ( sendRsp && UNICAST_MSG( pInMsg->msg ) )
// 2872 #else
// 2873       if ( sendRsp )
// 2874 #endif //ZCL_LIGHT_LINK_ENHANCE
// 2875       {
// 2876         zclGeneral_SendSceneGetMembershipResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2877                                     status, zclGeneral_ScenesRemaingCapacity(), sceneCnt, sceneList,
// 2878                                     scene.groupID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine129_0 & 0xFFFF
// 2879       }
??CrossCallReturnLabel_336:
        ; Setup parameters for call to function zclGeneral_SendSceneGetMembershipResponse
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_351:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 91)
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 93)
        MOV     A,?V0 + 8
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 94)
        MOV     A,#0x10
        CLR     C
        SUBB    A,R1
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_326:
        LCALL   ??zclGeneral_SendSceneGetMembershipResponse?rel
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
        LJMP    ??zclGeneral_ProcessInScenesServer_51 & 0xFFFF
// 2880 
// 2881       if ( sceneList != NULL )
// 2882         zcl_mem_free( sceneList );
// 2883 
// 2884       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2885       break;
// 2886 
// 2887 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2888     case COMMAND_SCENE_COPY:
// 2889       {
// 2890         uint8 mode;
// 2891         uint16 groupIDFrom, groupIDTo;
// 2892         uint8 sceneIDFrom, sceneIDTo;
// 2893 
// 2894         pData = pInMsg->pData; // different payload format
??zclGeneral_ProcessInScenesServer_7:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
// 2895 
// 2896         mode = *pData++;
        MOV     DPL,?V0 + 0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 14,A
        LCALL   ?Subroutine35 & 0xFFFF
// 2897         groupIDFrom = BUILD_UINT16( pData[0], pData[1] ); // from group ID
??CrossCallReturnLabel_337:
        MOV     ?V0 + 2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 3,A
// 2898         pData += 2;
        LCALL   ?Subroutine92 & 0xFFFF
// 2899         sceneIDFrom = *pData++; // from scene ID
??CrossCallReturnLabel_144:
        MOV     DPL,?V0 + 0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        LCALL   ?Subroutine35 & 0xFFFF
// 2900         groupIDTo = BUILD_UINT16( pData[0], pData[1] ); // to group ID
??CrossCallReturnLabel_338:
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
// 2901         pData += 2;
// 2902         if ( (mode & SCENE_COPY_MODE_ALL_BIT) == 0 )
        MOV     A,?V0 + 14
        MOV     C,0xE0 /* A   */.0
        JC      ??CrossCallReturnLabel_140
// 2903         {
// 2904           sceneIDTo = *pData++; // to scene ID
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine88 & 0xFFFF
// 2905         }
// 2906 
// 2907         // Make sure the groups exist
// 2908         if ( ( aps_FindGroup( pInMsg->msg->endPoint, groupIDFrom ) != NULL ) &&
// 2909              ( aps_FindGroup( pInMsg->msg->endPoint, groupIDTo ) != NULL ) )
??CrossCallReturnLabel_140:
        ; Setup parameters for call to function aps_FindGroup
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_52 & 0xFFFF
        ; Setup parameters for call to function aps_FindGroup
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_234:
        LCALL   ??aps_FindGroup?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_52 & 0xFFFF
// 2910         {
// 2911           // Allocate space for the scene list
// 2912           sceneList = zcl_mem_alloc( (mode & SCENE_COPY_MODE_ALL_BIT) ? ZCL_GEN_MAX_SCENES : 1 );
        MOV     A,?V0 + 14
        MOV     C,0xE0 /* A   */.0
        JNC     ??zclGeneral_ProcessInScenesServer_53
        MOV     R2,#0x10
        SJMP    ??zclGeneral_ProcessInScenesServer_54
??zclGeneral_ProcessInScenesServer_53:
        MOV     R2,#0x1
??zclGeneral_ProcessInScenesServer_54:
        MOV     R3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
// 2913           if ( sceneList == NULL )
        MOV     A,R2
        ORL     A,?V0 + 13
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_55 & 0xFFFF
// 2914           {
// 2915             status = ZCL_STATUS_INSUFFICIENT_SPACE; // Couldn't allocate space for the scene list!
// 2916           }
// 2917           else
// 2918           {
// 2919             status = ZCL_STATUS_SUCCESS;
        MOV     ?V0 + 0,#0x0
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_231:
        MOV     A,?V0 + 14
        MOV     C,0xE0 /* A   */.0
        JNC     ??zclGeneral_ProcessInScenesServer_56
// 2920             if ( mode & SCENE_COPY_MODE_ALL_BIT ) // Copy all scenes
// 2921             {
// 2922               sceneCnt = zclGeneral_FindAllScenesForGroup( pInMsg->msg->endPoint,
// 2923                                                            groupIDFrom, sceneList );
        ; Setup parameters for call to function zclGeneral_FindAllScenesForGroup
        MOV     R4,?V0 + 12
        MOV     R5,?V0 + 13
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??zclGeneral_FindAllScenesForGroup?relay
        MOV     A,R1
        MOV     ?V0 + 8,A
        SJMP    ??zclGeneral_ProcessInScenesServer_57
// 2924             }
// 2925             else // Copy single scene
// 2926             {
// 2927               // Make sure the scene exists
// 2928               pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDFrom, sceneIDFrom );
??zclGeneral_ProcessInScenesServer_56:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     R4,?V0 + 8
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??zclGeneral_FindScene?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
// 2929               if ( pScene != NULL )
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_52 & 0xFFFF
// 2930               {
// 2931                 sceneList[0] = sceneIDFrom;
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOV     A,?V0 + 8
        MOVX    @DPTR,A
// 2932                 sceneCnt = 1;
        MOV     ?V0 + 8,#0x1
// 2933               }
// 2934               else
// 2935               {
// 2936                 status = ZCL_STATUS_INVALID_FIELD; // Scene not found
// 2937               }
// 2938             }
// 2939           }
// 2940 
// 2941           if ( status == ZCL_STATUS_SUCCESS )
// 2942           {
// 2943             uint8 numScenesToAdd = 0;
??zclGeneral_ProcessInScenesServer_57:
        MOV     ?V0 + 9,#0x0
// 2944             uint8 i;
// 2945             for ( i = 0; i < sceneCnt; i++ )
        MOV     ?V0 + 1,#0x0
        SJMP    ??zclGeneral_ProcessInScenesServer_58
// 2946             {
// 2947               if ( zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDTo, sceneList[i] ) == NULL )
??zclGeneral_ProcessInScenesServer_59:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     ?V0 + 10,?V0 + 1
        MOV     A,?V0 + 12
        ADD     A,?V0 + 10
        MOV     DPL,A
        MOV     A,?V0 + 13
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_321:
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_235:
        LCALL   ??zclGeneral_FindScene?relay
        MOV     ?V0 + 11,R3
        MOV     A,R2
        ORL     A,?V0 + 11
        JNZ     ??zclGeneral_ProcessInScenesServer_60
// 2948               {
// 2949                 numScenesToAdd++;
        INC     ?V0 + 9
// 2950               }
// 2951             }
??zclGeneral_ProcessInScenesServer_60:
        INC     ?V0 + 1
??zclGeneral_ProcessInScenesServer_58:
        MOV     A,?V0 + 1
        CLR     C
        SUBB    A,?V0 + 8
        JC      ??zclGeneral_ProcessInScenesServer_59
// 2952             if ( zclGeneral_ScenesRemaingCapacity() >= numScenesToAdd )
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL   ??zclGeneral_CountAllScenes?relay
        MOV     A,R1
        MOV     R0,A
        MOV     A,#0x10
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        SUBB    A,0xE0 /* A   */
        MOV     R1,A
        MOV     ?V0 + 10,?V0 + 9
        CLR     C
        MOV     A,R0
        SUBB    A,?V0 + 10
        MOV     A,R1
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_55 & 0xFFFF
// 2953             {
// 2954               // Copy the scenes
// 2955               for ( i = 0; i < sceneCnt; i++ )
        MOV     ?V0 + 1,#0x0
        SJMP    ??zclGeneral_ProcessInScenesServer_61
// 2956               {
// 2957                 // Ignore scene ID from and scene ID to fields
// 2958                 pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDFrom, sceneList[i] );
// 2959                 if ( pScene != NULL )
// 2960                 {
// 2961                   zclGeneral_Scene_t *pToScene;
// 2962                   scene = *pScene;
// 2963                   scene.groupID = groupIDTo;
// 2964                   scene.ID = ( (mode & SCENE_COPY_MODE_ALL_BIT) ? sceneList[i] : sceneIDTo );
??zclGeneral_ProcessInScenesServer_62:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
??zclGeneral_ProcessInScenesServer_63:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2965 
// 2966                   pToScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDTo, scene.ID );
// 2967                   if( pToScene != NULL )
        MOV     ?V0 + 9,A
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     R4,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_236:
        LCALL   ??zclGeneral_FindScene?relay
        MOV     ?V0 + 11,R3
        MOV     A,R2
        ORL     A,?V0 + 11
        JZ      ??zclGeneral_ProcessInScenesServer_64
// 2968                   {
// 2969                     zclGeneral_RemoveScene( pInMsg->msg->endPoint, groupIDTo, scene.ID );
        ; Setup parameters for call to function zclGeneral_RemoveScene
        MOV     R4,?V0 + 9
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        LCALL   ??Subroutine116_0 & 0xFFFF
// 2970                   }
??CrossCallReturnLabel_237:
        LCALL   ??zclGeneral_RemoveScene?relay
// 2971                   // Add the scene
// 2972                   zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
??zclGeneral_ProcessInScenesServer_64:
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_232:
        LCALL   ??zclGeneral_AddScene?relay
??zclGeneral_ProcessInScenesServer_65:
        INC     ?V0 + 1
??zclGeneral_ProcessInScenesServer_61:
        MOV     A,?V0 + 1
        CLR     C
        SUBB    A,?V0 + 8
        JNC     ??zclGeneral_ProcessInScenesServer_66
        MOV     ?V0 + 4,?V0 + 1
        MOV     A,?V0 + 12
        ADD     A,?V0 + 4
        MOV     R0,A
        MOV     A,?V0 + 13
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_262:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine139_0 & 0xFFFF
??CrossCallReturnLabel_371:
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_233:
        LCALL   ??zclGeneral_FindScene?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        JZ      ??zclGeneral_ProcessInScenesServer_65
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,R3
        MOV     DPL,R2
        MOV     A,#0x37
        LCALL   ?MOVE_LONG8_XDATA_XDATA
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     A,?V0 + 14
        MOV     C,0xE0 /* A   */.0
        JC      $+5
        LJMP    ??zclGeneral_ProcessInScenesServer_62 & 0xFFFF
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine139_0 & 0xFFFF
// 2973                 }
// 2974               }
// 2975             }
??CrossCallReturnLabel_372:
        LJMP    ??zclGeneral_ProcessInScenesServer_63 & 0xFFFF
// 2976             else
// 2977             {
// 2978               status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_55:
        MOV     ?V0 + 0,#-0x77
        SJMP    ??zclGeneral_ProcessInScenesServer_66
// 2979             }
// 2980           }
// 2981         }
// 2982         else
// 2983         {
// 2984           status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_52:
        MOV     ?V0 + 0,#-0x7b
// 2985         }
// 2986 
// 2987         if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_66:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_7:
        JNZ     ??zclGeneral_ProcessInScenesServer_51
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_296:
        JNZ     ??zclGeneral_ProcessInScenesServer_51
// 2988         {
// 2989           if ( pScene == NULL )
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JNZ     ??zclGeneral_ProcessInScenesServer_67
// 2990           {
// 2991             pScene = &scene;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
// 2992           }
// 2993           // Addressed to this device (not to a group) - send a response back
// 2994           zclGeneral_SendSceneCopyResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2995                                             status, pScene->groupID, pScene->ID,
// 2996                                             true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInScenesServer_67:
        ; Setup parameters for call to function zclGeneral_SendSceneCopyResponse
        LCALL   ?Subroutine33 & 0xFFFF
// 2997         }
??CrossCallReturnLabel_352:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 88)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 91)
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_327:
        LCALL   ??zclGeneral_SendSceneCopyResponse?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 2998 
// 2999         if ( sceneList != NULL )
??zclGeneral_ProcessInScenesServer_51:
        MOV     A,?V0 + 12
        ORL     A,?V0 + 13
        JZ      ??zclGeneral_ProcessInScenesServer_19
// 3000         {
// 3001           zcl_mem_free( sceneList );
??zclGeneral_ProcessInScenesServer_50:
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 12
        MOV     R3,?V0 + 13
        LCALL   ??osal_mem_free?relay
// 3002         }
// 3003       }
// 3004 
// 3005       stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInScenesServer_19:
        MOV     R6,#-0x1
// 3006       break;
        SJMP    ??zclGeneral_ProcessInScenesServer_44
// 3007 #endif // ZCL_LIGHT_LINK_ENHANCE
// 3008 
// 3009     default:
// 3010       stat = ZFailure;
??zclGeneral_ProcessInScenesServer_8:
        INC     R6
// 3011     break;
// 3012   }
// 3013 
// 3014   return ( stat );
??zclGeneral_ProcessInScenesServer_44:
        MOV     A,R6
        MOV     R1,A
        MOV     A,#0x3f
        LJMP    ??Subroutine132_0 & 0xFFFF
          CFI EndBlock cfiBlock698
// 3015 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond699 Using cfiCommon0
          CFI Function zclGeneral_SendOnOff_CmdOnWithTimedOff
          CFI Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_56
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+0
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_140
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond701) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond701) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond701) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond701) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond701) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+0
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker702 Using cfiCommon1
          CFI (cfiPicker702) NoFunction
          CFI (cfiPicker702) Picker
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiPicker702

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond703 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_323
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond704) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond704) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond704) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond704) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond704) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond704) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond704) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond704) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+0
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker705 Using cfiCommon1
          CFI (cfiPicker705) NoFunction
          CFI (cfiPicker705) Picker
        MOV     DPL,A
        MOV     A,?V0 + 11
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiPicker705
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine127_0:
          CFI Block cfiCond706 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_317
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-1
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond708) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-1
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond709) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond709) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond709) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond709) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond709) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond709) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond709) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond709) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond709) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+0
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 92)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond710) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond710) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond710) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond710) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond710) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond710) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond710) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond710) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+0
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-1
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond712) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond712) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond712) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond712) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond712) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond712) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond712) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond712) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond712) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+0
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond713) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond713) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond713) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond713) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond713) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+0
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker714 Using cfiCommon1
          CFI (cfiPicker714) NoFunction
          CFI (cfiPicker714) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiPicker714

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond715 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_326
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 94)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond716) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+0
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 91)
          CFI Block cfiPicker717 Using cfiCommon1
          CFI (cfiPicker717) NoFunction
          CFI (cfiPicker717) Picker
        MOV     R5,A
        MOV     R4,?V0 + 0
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiPicker717
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine128_0:
          CFI Block cfiCond718 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_325
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond719) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond719) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond719) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond719) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond719) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond719) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond719) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond719) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond719) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond719) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond719) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+0
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 94)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond720) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond720) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond720) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond720) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond720) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond720) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond720) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond720) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond720) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond720) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond720) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond720) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond720) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+0
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 91)
          CFI Block cfiPicker721 Using cfiCommon1
          CFI (cfiPicker721) NoFunction
          CFI (cfiPicker721) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_329:
        RET
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiPicker721

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond722 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_18
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond723) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond723) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond723) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond723) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond723) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+0
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 49)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_326
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond724) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond724) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond724) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond724) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond724) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond724) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond724) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond724) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond724) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+0
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 94)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_327
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond725) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+0
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 91)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_325
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+0
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiPicker727 Using cfiCommon1
          CFI (cfiPicker727) NoFunction
          CFI (cfiPicker727) Picker
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_331:
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiPicker727

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond728 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_330
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 92)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_17
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+0
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_18
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond730) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond730) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond730) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond730) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond730) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_SP SP+0
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 49)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_326
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond731) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond731) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond731) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond731) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond731) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond731) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond731) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+0
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 94)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_327
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond732) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond732) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond732) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond732) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond732) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond732) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond732) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond732) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond732) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond732) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond732) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+0
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 91)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_325
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+0
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiPicker734 Using cfiCommon1
          CFI (cfiPicker734) NoFunction
          CFI (cfiPicker734) Picker
        MOV     A,R6
        ADD     A,#0x6
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R7
        RET
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiPicker734

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond735 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+0
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker737 Using cfiCommon1
          CFI (cfiPicker737) NoFunction
          CFI (cfiPicker737) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_145:
        MOV     ?V0 + 1,A
        RET
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiPicker737

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond738 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_84
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+0
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_85
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+0
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker741 Using cfiCommon1
          CFI (cfiPicker741) NoFunction
          CFI (cfiPicker741) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        RET
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiPicker741

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond742 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+0
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker744 Using cfiCommon1
          CFI (cfiPicker744) NoFunction
          CFI (cfiPicker744) Picker
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiPicker744

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond745 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+0
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker747 Using cfiCommon1
          CFI (cfiPicker747) NoFunction
          CFI (cfiPicker747) Picker
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_137:
        MOV     A,#0x2
        RET
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiPicker747

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond748 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_332
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+0
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker750 Using cfiCommon1
          CFI (cfiPicker750) NoFunction
          CFI (cfiPicker750) Picker
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiPicker750
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine129_0:
          CFI Block cfiCond751 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_334
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function zclGeneral_FindScene
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+0
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond753) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond753) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond753) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond753) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond753) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond753) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond753) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+0
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond754) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond754) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond754) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond754) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond754) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond754) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond754) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond754) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+0
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond755) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond755) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond755) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond755) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+0
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker756 Using cfiCommon1
          CFI (cfiPicker756) NoFunction
          CFI (cfiPicker756) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        RET
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiPicker756

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond757 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_337
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond758) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond758) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond758) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond758) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond758) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond758) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond758) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+0
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker759 Using cfiCommon1
          CFI (cfiPicker759) NoFunction
          CFI (cfiPicker759) Picker
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiPicker759
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine130_0:
          CFI Block cfiCond760 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_339
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+0
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond762) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond762) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond762) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+0
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker763 Using cfiCommon1
          CFI (cfiPicker763) NoFunction
          CFI (cfiPicker763) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_345:
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x0
        RET
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiPicker763

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond764 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_348
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond765) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond765) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+0
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+0
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond767) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond767) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond767) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond767) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond767) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond767) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+0
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond768) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond768) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond768) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+0
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker769 Using cfiCommon1
          CFI (cfiPicker769) NoFunction
          CFI (cfiPicker769) Picker
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiPicker769
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine131_0:
          CFI Block cfiCond770 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_346
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond771) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond771) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond771) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+0
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond772) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond772) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond772) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond772) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond772) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond772) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond772) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+0
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond773) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond773) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+0
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond774) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond774) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond774) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond774) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond774) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+0
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond775) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond775) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond775) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond775) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond775) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+0
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+0
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker777 Using cfiCommon1
          CFI (cfiPicker777) NoFunction
          CFI (cfiPicker777) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        RET
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiPicker777

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond778 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond779) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond779) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond779) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond779) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond779) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+0
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond780) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond780) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond780) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond780) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+0
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+0
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker782 Using cfiCommon1
          CFI (cfiPicker782) NoFunction
          CFI (cfiPicker782) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_153:
        RET
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiPicker782

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond783 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_23
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+0
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_8
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond785) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond785) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond785) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond785) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond785) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond785) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond785) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+0
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_9
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+0
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_24
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+0
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_25
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond788) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+0
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_39
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond789) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond789) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond789) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond789) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond789) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond789) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond789) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+0
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_40
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond790) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond790) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond790) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond790) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond790) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+0
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_41
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond791) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond791) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond791) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+0
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_42
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+0
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker793 Using cfiCommon1
          CFI (cfiPicker793) NoFunction
          CFI (cfiPicker793) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        RET
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiPicker793

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond794 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond795) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond795) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond795) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond795) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond795) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond795) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond795) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond795) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond795) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond795) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_SP SP+0
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond796) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond796) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond796) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+0
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+0
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker798 Using cfiCommon1
          CFI (cfiPicker798) NoFunction
          CFI (cfiPicker798) Picker
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_149:
        RET
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiPicker798

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond799 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_34
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond800) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond800) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond800) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond800) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond800) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond800) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond800) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond800) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+0
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_24
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+0
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_25
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+0
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond803 Using cfiCommon0
          CFI (cfiCond803) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond803) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_4
          CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond803) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond803) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond803) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond803) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond803) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond803) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond803) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond803) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond803) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond803) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond803) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond803) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond803) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond803) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond803) CFA_SP SP+0
          CFI (cfiCond803) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_5
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond804) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond804) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond804) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond804) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond804) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond804) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond804) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+0
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_6
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond805) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond805) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond805) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond805) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond805) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+0
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_7
          CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond806) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond806) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond806) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond806) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond806) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond806) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond806) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond806) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond806) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond806) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond806) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond806) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond806) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond806) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond806) CFA_SP SP+0
          CFI (cfiCond806) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_0
          CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond807) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond807) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond807) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond807) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond807) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond807) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond807) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond807) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond807) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond807) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond807) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond807) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond807) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond807) CFA_SP SP+0
          CFI (cfiCond807) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_1
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond808) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond808) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond808) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond808) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond808) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond808) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond808) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond808) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond808) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond808) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond808) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+0
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_2
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond809) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond809) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond809) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond809) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond809) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond809) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond809) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+0
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_3
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond810) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+0
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker811 Using cfiCommon1
          CFI (cfiPicker811) NoFunction
          CFI (cfiPicker811) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiPicker811

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond812 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond813) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond813) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond813) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond813) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond813) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+0
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond814) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond814) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond814) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond814) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond814) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond814) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond814) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond814) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond814) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+0
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond815) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+0
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker816 Using cfiCommon1
          CFI (cfiPicker816) NoFunction
          CFI (cfiPicker816) Picker
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_300:
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R1
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_148:
        RET
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiPicker816

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock817 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R1,A
        MOV     A,#0x3
          CFI EndBlock cfiBlock817
        REQUIRE ??Subroutine132_0
        ; // Fall through to label ??Subroutine132_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine132_0:
          CFI Block cfiBlock818 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock818
        REQUIRE ??Subroutine133_0
        ; // Fall through to label ??Subroutine133_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine133_0:
          CFI Block cfiBlock819 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock819
// 3016 
// 3017 /*********************************************************************
// 3018  * @fn      zclGeneral_ProcessInScenesClient
// 3019  *
// 3020  * @brief   Process in the received Scenes Command.
// 3021  *
// 3022  * @param   pInMsg - pointer to the incoming message
// 3023  *
// 3024  * @return  ZStatus_t
// 3025  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3026 static ZStatus_t zclGeneral_ProcessInScenesClient( zclIncoming_t *pInMsg,
zclGeneral_ProcessInScenesClient:
          CFI Block cfiBlock820 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
        CODE
// 3027                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3028 {
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 90, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 65
        MOV     A,#-0x41
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        LCALL   ?Subroutine40 & 0xFFFF
// 3029   zclGeneral_Scene_t scene;
// 3030   uint8 *pData = pInMsg->pData;
// 3031   uint8 nameLen;
// 3032   zclSceneRsp_t rsp;
// 3033   uint8 i;
// 3034   ZStatus_t stat = ZSuccess;
??CrossCallReturnLabel_333:
        MOV     ?V0 + 10,#0x0
// 3035 
// 3036   zcl_memset( (uint8*)&scene, 0, sizeof( zclGeneral_Scene_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x37
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
// 3037   zcl_memset( (uint8*)&rsp, 0, sizeof( zclSceneRsp_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xa
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
// 3038 
// 3039   // Get the status field first
// 3040   rsp.status = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine61 & 0xFFFF
// 3041 
// 3042   if ( pInMsg->hdr.commandID == COMMAND_SCENE_GET_MEMBERSHIP_RSP )
??CrossCallReturnLabel_100:
        MOV     A,?V0 + 8
        ADD     A,#0x7
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 9
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_119:
        XRL     A,#0x6
        JNZ     ??zclGeneral_ProcessInScenesClient_0
// 3043   {
// 3044     rsp.capacity = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine65 & 0xFFFF
// 3045   }
??CrossCallReturnLabel_107:
        INC     R6
        MOV     R7,DPH
// 3046 
// 3047   scene.groupID = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInScenesClient_0:
        LCALL   ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_202:
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine55 & 0xFFFF
// 3048   pData += 2;   // Move past group ID
// 3049 
// 3050   switch ( pInMsg->hdr.commandID )
??CrossCallReturnLabel_86:
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,?V0 + 0
        ADD     A,#0x1e
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_117:
        JZ      ??zclGeneral_ProcessInScenesClient_1
        DEC     A
        JZ      ??zclGeneral_ProcessInScenesClient_2
        DEC     A
        JZ      ??zclGeneral_ProcessInScenesClient_1
        DEC     A
        JZ      ??zclGeneral_ProcessInScenesClient_1
        DEC     A
        JZ      ??zclGeneral_ProcessInScenesClient_1
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesClient_3 & 0xFFFF
        LJMP    ??zclGeneral_ProcessInScenesClient_4 & 0xFFFF
// 3051   {
// 3052     case COMMAND_SCENE_VIEW_RSP:
// 3053       // Parse the rest of the incoming message
// 3054       scene.ID = *pData++; // Not applicable to Remove All Response command
??zclGeneral_ProcessInScenesClient_2:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine36 & 0xFFFF
// 3055       scene.transTime = BUILD_UINT16( pData[0], pData[1] );
??CrossCallReturnLabel_194:
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine55 & 0xFFFF
// 3056       pData += 2;
// 3057       nameLen = *pData++; // Name length
??CrossCallReturnLabel_87:
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 3058       if ( nameLen > (ZCL_GEN_SCENE_NAME_LEN-1) )
        CLR     C
        SUBB    A,#0x10
        JC      ??zclGeneral_ProcessInScenesClient_5
// 3059         nameLen = (ZCL_GEN_SCENE_NAME_LEN-1);
        MOV     ?V0 + 7,#0xf
// 3060 
// 3061       scene.name[0] = nameLen;
??zclGeneral_ProcessInScenesClient_5:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
// 3062       zcl_memcpy( &(scene.name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 4,R6
        MOV     ?V0 + 5,R7
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV     ?V0 + 4,?V0 + 7
        MOV     R4,?V0 + 4
        MOV     R5,#0x0
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 3063 
// 3064       pData += nameLen; // move past name, use original length
// 3065 
// 3066       //*** Do something with the extension field(s)
// 3067 
// 3068       // Fall through to callback - break is left off intentionally
// 3069 
// 3070     case COMMAND_SCENE_ADD_RSP:
// 3071     case COMMAND_SCENE_REMOVE_RSP:
// 3072     case COMMAND_SCENE_REMOVE_ALL_RSP:
// 3073     case COMMAND_SCENE_STORE_RSP:
// 3074       if ( pCBs->pfnSceneRsp )
??zclGeneral_ProcessInScenesClient_1:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_286:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInScenesClient_6 & 0xFFFF
// 3075       {
// 3076         rsp.srcAddr = &(pInMsg->msg->srcAddr);
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ??Subroutine121_0 & 0xFFFF
// 3077         rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_268:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3078         rsp.scene = &scene;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine25 & 0xFFFF
// 3079 
// 3080         pCBs->pfnSceneRsp( &rsp );
// 3081       }
??CrossCallReturnLabel_366:
        LCALL   ?CALL_IND
        LJMP    ??zclGeneral_ProcessInScenesClient_6 & 0xFFFF
// 3082       break;
// 3083 
// 3084     case COMMAND_SCENE_GET_MEMBERSHIP_RSP:
// 3085       {
// 3086         uint8 *sceneList = NULL;
??zclGeneral_ProcessInScenesClient_3:
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
// 3087 
// 3088         if ( rsp.status == ZCL_STATUS_SUCCESS )
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JNZ     ??zclGeneral_ProcessInScenesClient_7
// 3089         {
// 3090           uint8 sceneCnt = *pData++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 3091 
// 3092           if ( sceneCnt > 0 )
        MOV     A,?V0 + 6
        JZ      ??zclGeneral_ProcessInScenesClient_7
// 3093           {
// 3094             // Allocate space for the scene list
// 3095             sceneList = zcl_mem_alloc( sceneCnt );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
// 3096             if ( sceneList != NULL )
        MOV     A,R2
        ORL     A,?V0 + 5
        JZ      ??zclGeneral_ProcessInScenesClient_7
// 3097             {
// 3098               rsp.sceneCnt = sceneCnt;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
// 3099               for ( i = 0; i < sceneCnt; i++ )
        MOV     R0,#0x0
        SJMP    ??zclGeneral_ProcessInScenesClient_8
// 3100                 sceneList[i] = *pData++;
??zclGeneral_ProcessInScenesClient_9:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     ?V0 + 12,R0
        MOV     A,R2
        ADD     A,?V0 + 12
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_322:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_101:
        INC     R0
??zclGeneral_ProcessInScenesClient_8:
        MOV     A,R0
        CLR     C
        SUBB    A,?V0 + 6
        JC      ??zclGeneral_ProcessInScenesClient_9
// 3101             }
// 3102           }
// 3103         }
// 3104 
// 3105         if ( pCBs->pfnSceneRsp )
??zclGeneral_ProcessInScenesClient_7:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_287:
        JZ      ??zclGeneral_ProcessInScenesClient_10
// 3106         {
// 3107           rsp.srcAddr = &(pInMsg->msg->srcAddr);
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ??Subroutine121_0 & 0xFFFF
// 3108           rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_269:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3109           rsp.sceneList = sceneList;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
// 3110           rsp.scene = &scene;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine25 & 0xFFFF
// 3111 
// 3112           pCBs->pfnSceneRsp( &rsp);
// 3113         }
??CrossCallReturnLabel_367:
        LCALL   ?CALL_IND
// 3114 
// 3115         if ( sceneList != NULL )
??zclGeneral_ProcessInScenesClient_10:
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JZ      ??zclGeneral_ProcessInScenesClient_6
// 3116         {
// 3117           zcl_mem_free( sceneList );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclGeneral_ProcessInScenesClient_6
// 3118         }
// 3119       }
// 3120       break;
// 3121 
// 3122     default:
// 3123       stat = ZFailure;
??zclGeneral_ProcessInScenesClient_4:
        MOV     ?V0 + 10,#0x1
// 3124       break;
// 3125   }
// 3126 
// 3127   return ( stat );
??zclGeneral_ProcessInScenesClient_6:
        MOV     R1,?V0 + 10
        MOV     A,#0x41
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock820
// 3128 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond821 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond822) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond822) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond822) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+0
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker823 Using cfiCommon1
          CFI (cfiPicker823) NoFunction
          CFI (cfiPicker823) Picker
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_147:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiPicker823

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond824 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_118
          CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond825) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond825) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond825) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond825) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond825) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond825) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond825) CFA_SP SP+0
          CFI (cfiCond825) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_119
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond826) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+0
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker827 Using cfiCommon1
          CFI (cfiPicker827) NoFunction
          CFI (cfiPicker827) Picker
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiPicker827

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond828 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+0
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker830 Using cfiCommon1
          CFI (cfiPicker830) NoFunction
          CFI (cfiPicker830) Picker
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiPicker830

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond831 Using cfiCommon0
          CFI Function zclGeneral_AddScene
          CFI Conditional ??CrossCallReturnLabel_105
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond832) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond832) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond832) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+0
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond833 Using cfiCommon0
          CFI (cfiCond833) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond833) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond833) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond833) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond833) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond833) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond833) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond833) CFA_SP SP+0
          CFI (cfiCond833) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker834 Using cfiCommon1
          CFI (cfiPicker834) NoFunction
          CFI (cfiPicker834) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiCond833
          CFI EndBlock cfiPicker834

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond835 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond836) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond836) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond836) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond836) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond836) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond836) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond836) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond836) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond836) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond836) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond836) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond836) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond836) CFA_SP SP+0
          CFI (cfiCond836) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker837 Using cfiCommon1
          CFI (cfiPicker837) NoFunction
          CFI (cfiPicker837) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiPicker837

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond838 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_86
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond839) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond839) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond839) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond839) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond839) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond839) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond839) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+0
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker840 Using cfiCommon1
          CFI (cfiPicker840) NoFunction
          CFI (cfiPicker840) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_143:
        RET
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiPicker840

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond841 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
          CFI Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_111
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond842) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+0
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_86
          CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond843) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond843) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond843) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond843) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond843) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond843) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond843) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond843) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond843) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond843) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond843) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond843) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond843) CFA_SP SP+0
          CFI (cfiCond843) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_87
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond844) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond844) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+0
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker845 Using cfiCommon1
          CFI (cfiPicker845) NoFunction
          CFI (cfiPicker845) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiPicker845
// 3129 #endif // ZCL_SCENES
// 3130 
// 3131 #ifdef ZCL_ON_OFF
// 3132 /*********************************************************************
// 3133  * @fn      zclGeneral_ProcessInCmdOnOff
// 3134  *
// 3135  * @brief   Process in the received On/Off Command.
// 3136  *
// 3137  * @param   pInMsg - pointer to the incoming message
// 3138  *
// 3139  * @return  ZStatus_t
// 3140  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3141 static ZStatus_t zclGeneral_ProcessInOnOff( zclIncoming_t *pInMsg,
zclGeneral_ProcessInOnOff:
          CFI Block cfiBlock846 Using cfiCommon0
          CFI Function zclGeneral_ProcessInOnOff
        CODE
// 3142                                             zclGeneral_AppCallbacks_t *pCBs )
// 3143 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 3144   ZStatus_t stat = ZSuccess;
        MOV     R6,#0x0
// 3145 
// 3146   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInOnOff_0 & 0xFFFF
// 3147   {
// 3148     switch ( pInMsg->hdr.commandID )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_126:
        MOV     A,R7
        JZ      ??zclGeneral_ProcessInOnOff_1
        DEC     A
        JZ      ??zclGeneral_ProcessInOnOff_1
        DEC     A
        JZ      ??zclGeneral_ProcessInOnOff_1
        ADD     A,#-0x3e
        JZ      ??zclGeneral_ProcessInOnOff_2
        DEC     A
        JZ      ??zclGeneral_ProcessInOnOff_3
        DEC     A
        JZ      ??zclGeneral_ProcessInOnOff_4
        LJMP    ??zclGeneral_ProcessInOnOff_5 & 0xFFFF
// 3149     {
// 3150       case COMMAND_OFF:
// 3151       case COMMAND_ON:
// 3152       case COMMAND_TOGGLE:
// 3153         if ( pCBs->pfnOnOff )
??zclGeneral_ProcessInOnOff_1:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_354:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInOnOff_0 & 0xFFFF
// 3154         {
// 3155           pCBs->pfnOnOff( pInMsg->hdr.commandID );
        ; Setup parameters for indirect call
        MOV     A,R7
        MOV     R1,A
        LJMP    ??CrossCallReturnLabel_374 & 0xFFFF
// 3156         }
// 3157         break;
// 3158 
// 3159 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 3160       case COMMAND_OFF_WITH_EFFECT:
// 3161         if ( pCBs->pfnOnOff_OffWithEffect )
??zclGeneral_ProcessInOnOff_2:
        MOV     A,R4
        ADD     A,#0xa
        MOV     R4,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_42:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInOnOff_0 & 0xFFFF
// 3162         {
// 3163           zclOffWithEffect_t cmd;
// 3164 
// 3165           cmd.srcAddr = &(pInMsg->msg->srcAddr);
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_136:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine110_0 & 0xFFFF
// 3166           cmd.effectId = pInMsg->pData[0];
??CrossCallReturnLabel_190:
        LCALL   ?Subroutine21 & 0xFFFF
// 3167           cmd.effectVariant = pInMsg->pData[1];
// 3168 
// 3169           pCBs->pfnOnOff_OffWithEffect( &cmd );
// 3170         }
??CrossCallReturnLabel_12:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_92:
        LCALL   ??Subroutine139_0 & 0xFFFF
??CrossCallReturnLabel_373:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_171:
        SJMP    ??zclGeneral_ProcessInOnOff_6
// 3171         break;
// 3172 
// 3173       case COMMAND_ON_WITH_RECALL_GLOBAL_SCENE:
// 3174         if ( pCBs->pfnOnOff_OnWithRecallGlobalScene )
??zclGeneral_ProcessInOnOff_3:
        MOV     A,R4
        ADD     A,#0xc
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_355:
        JZ      ??zclGeneral_ProcessInOnOff_0
// 3175         {
// 3176           pCBs->pfnOnOff_OnWithRecallGlobalScene();
        ; Setup parameters for indirect call
        SJMP    ??CrossCallReturnLabel_374
// 3177         }
// 3178         break;
// 3179 
// 3180       case COMMAND_ON_WITH_TIMED_OFF:
// 3181         if ( pCBs->pfnOnOff_OnWithTimedOff )
??zclGeneral_ProcessInOnOff_4:
        MOV     A,R4
        ADD     A,#0xe
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_313:
        JZ      ??zclGeneral_ProcessInOnOff_0
// 3182         {
// 3183           zclOnWithTimedOff_t cmd;
// 3184 
// 3185           cmd.onOffCtrl.byte = pInMsg->pData[0];
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_13:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine38 & 0xFFFF
// 3186           cmd.onTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_47:
        MOV     ?V0 + 0,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        LCALL   ??Subroutine111_0 & 0xFFFF
// 3187           cmd.offWaitTime = BUILD_UINT16( pInMsg->pData[3], pInMsg->pData[4] );
??CrossCallReturnLabel_182:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_82:
        INC     DPTR
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_195:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 3188           pCBs->pfnOnOff_OnWithTimedOff( &cmd );
??CrossCallReturnLabel_263:
        ; Setup parameters for indirect call
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
??zclGeneral_ProcessInOnOff_6:
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R4
        MOV     DPH,R5
// 3189         }
        LCALL   ??Subroutine139_0 & 0xFFFF
??CrossCallReturnLabel_374:
        LCALL   ?CALL_IND
        SJMP    ??zclGeneral_ProcessInOnOff_0
// 3190         break;
// 3191 #endif // ZCL_LIGHT_LINK_ENHANCE
// 3192 
// 3193       default:
// 3194         stat = ZFailure;
??zclGeneral_ProcessInOnOff_5:
        INC     R6
// 3195         break;
// 3196     }
// 3197   }
// 3198   // no Client command
// 3199 
// 3200   return ( stat );
??zclGeneral_ProcessInOnOff_0:
        MOV     A,R6
        MOV     R1,A
        MOV     A,#0xa
        SJMP    ??Subroutine136_0
          CFI EndBlock cfiBlock846
// 3201 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond847 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_156
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+0
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function zclGeneral_SendIdentifyTriggerEffect
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_157
          CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond849) CFA_SP SP+0
          CFI (cfiCond849) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond850 Using cfiCommon0
          CFI (cfiCond850) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond850) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_158
          CFI (cfiCond850) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond850) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond850) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond850) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond850) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond850) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond850) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond850) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond850) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond850) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond850) CFA_SP SP+0
          CFI (cfiCond850) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function zclGeneral_SendOnOff_CmdOffWithEffect
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_159
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+0
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function zclGeneral_SendOnOff_CmdOnWithTimedOff
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_160
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+0
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_161
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+0
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function zclGeneral_ScenesInit
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_162
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+0
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function zclGeneral_SendGroupRequest
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_163
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+0
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function zclGeneral_SendGroupResponse
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_164
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+0
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_165
          CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond857) CFA_SP SP+0
          CFI (cfiCond857) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_166
          CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond858) CFA_SP SP+0
          CFI (cfiCond858) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function zclGeneral_SendSceneCopy
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_167
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+0
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function zclGeneral_SendSceneCopyResponse
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_168
          CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond860) CFA_SP SP+0
          CFI (cfiCond860) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond861) CFA_SP SP+0
          CFI (cfiCond861) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+0
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker863 Using cfiCommon1
          CFI (cfiPicker863) NoFunction
          CFI (cfiPicker863) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function osal_nv_write
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiPicker863

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond864 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond865 Using cfiCommon0
          CFI (cfiCond865) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond865) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_52
          CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond865) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond865) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond865) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond865) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond865) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond865) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond865) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond865) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond865) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond865) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond865) CFA_SP SP+0
          CFI (cfiCond865) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond866 Using cfiCommon0
          CFI (cfiCond866) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond866) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond866) CFA_SP SP+0
          CFI (cfiCond866) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker867 Using cfiCommon1
          CFI (cfiPicker867) NoFunction
          CFI (cfiPicker867) Picker
        MOVX    A,@DPTR
        ADD     A,#0x6
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond864
          CFI EndBlock cfiCond865
          CFI EndBlock cfiCond866
          CFI EndBlock cfiPicker867

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond868 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond869 Using cfiCommon0
          CFI (cfiCond869) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond869) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond869) CFA_SP SP+0
          CFI (cfiCond869) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+0
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker871 Using cfiCommon1
          CFI (cfiPicker871) NoFunction
          CFI (cfiPicker871) Picker
        MOV     A,R2
        ADD     A,#0x8
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        RET
          CFI EndBlock cfiCond868
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiPicker871

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond872 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_90
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond873 Using cfiCommon0
          CFI (cfiCond873) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond873) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond873) CFA_SP SP+0
          CFI (cfiCond873) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+0
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+0
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_SP SP+0
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond877) CFA_SP SP+0
          CFI (cfiCond877) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker878 Using cfiCommon1
          CFI (cfiPicker878) NoFunction
          CFI (cfiPicker878) Picker
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond872
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiPicker878

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond879 Using cfiCommon0
          CFI Function zclGeneral_ProcessInOnOff
          CFI Conditional ??CrossCallReturnLabel_355
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond880) CFA_SP SP+0
          CFI (cfiCond880) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker881 Using cfiCommon1
          CFI (cfiPicker881) NoFunction
          CFI (cfiPicker881) Picker
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     DPH,A
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiPicker881
        REQUIRE ??Subroutine134_0
        ; // Fall through to label ??Subroutine134_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine134_0:
          CFI Block cfiCond882 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_353
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond883) CFA_SP SP+0
          CFI (cfiCond883) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+0
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond885) CFA_SP SP+0
          CFI (cfiCond885) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker886 Using cfiCommon1
          CFI (cfiPicker886) NoFunction
          CFI (cfiPicker886) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_359:
        MOV     A,DPL
        ORL     A,DPH
        RET
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiPicker886

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock887 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R4,#0x3
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock887
        REQUIRE ??Subroutine135_0
        ; // Fall through to label ??Subroutine135_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine135_0:
          CFI Block cfiBlock888 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
          CFI EndBlock cfiBlock888
        REQUIRE ??Subroutine136_0
        ; // Fall through to label ??Subroutine136_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine136_0:
          CFI Block cfiBlock889 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock889
        REQUIRE ??Subroutine137_0
        ; // Fall through to label ??Subroutine137_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine137_0:
          CFI Block cfiBlock890 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock890
// 3202 #endif // ZCL_ON_OFF
// 3203 
// 3204 #ifdef ZCL_ON_OFF
// 3205 /*********************************************************************
// 3206  * @fn      zclGeneral_ProcessInManuCmdOnOff
// 3207  *
// 3208  * @brief   Process in the received On/Off Command.
// 3209  *
// 3210  * @param   pInMsg - pointer to the incoming message
// 3211  *
// 3212  * @return  ZStatus_t
// 3213  */
// 3214 static ZStatus_t zclGeneral_ProcessInManuOnOff( zclIncoming_t *pInMsg,
// 3215                                             zclGeneral_AppCallbacks_t *pCBs )//add my own function
// 3216 {
// 3217   ZStatus_t stat = ZSuccess;
// 3218 
// 3219 #ifdef DALI_LIGHT
// 3220   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 3221   {
// 3222     switch ( pInMsg->hdr.commandID )
// 3223     {
// 3224       case COMMAND_OFF:
// 3225        dali_cmd = pInMsg->pData[0];
// 3226        dali_cmd = (dali_cmd << 1) | 0x01;
// 3227        dali_cmd = dali_cmd << 8;
// 3228        DALI_Send(dali_cmd,&dali_answer,&dali_answer_state);
// 3229        stat = ZSuccess;
// 3230        break;
// 3231       case COMMAND_ON:
// 3232        dali_cmd = pInMsg->pData[0];
// 3233        dali_cmd = (dali_cmd << 1) | 0x01;
// 3234        dali_cmd = (dali_cmd << 8) | 0x05;
// 3235        DALI_Send(dali_cmd,&dali_answer,&dali_answer_state);
// 3236        stat = ZSuccess;
// 3237         break;
// 3238 
// 3239       default:
// 3240         stat = ZFailure;
// 3241         break;
// 3242     }
// 3243   }
// 3244   // no Client command
// 3245 
// 3246 #endif
// 3247   return ( stat );
// 3248 }
// 3249 #endif // ZCL_ON_OFF
// 3250 
// 3251 #ifdef ZCL_LEVEL_CTRL
// 3252 /*********************************************************************
// 3253  * @fn      zclGeneral_ProcessInLevelControl
// 3254  *
// 3255  * @brief   Process in the received Level Control Command.
// 3256  *
// 3257  * @param   pInMsg - pointer to the incoming message
// 3258  *
// 3259  * @return  ZStatus_t
// 3260  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3261 static ZStatus_t zclGeneral_ProcessInLevelControl( zclIncoming_t *pInMsg,
zclGeneral_ProcessInLevelControl:
          CFI Block cfiBlock891 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
        CODE
// 3262                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3263 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 3264   uint8 withOnOff = FALSE;
        MOV     R7,#0x0
// 3265   ZStatus_t stat = ZSuccess;
        MOV     R6,#0x0
// 3266 
// 3267   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x8
        JZ      $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3268   {
// 3269     switch ( pInMsg->hdr.commandID )
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_127:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??zclGeneral_ProcessInLevelControl_1
        DEC     A
        JZ      ??zclGeneral_ProcessInLevelControl_2
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_4 & 0xFFFF
        DEC     A
        JZ      ??zclGeneral_ProcessInLevelControl_5
        DEC     A
        JZ      ??zclGeneral_ProcessInLevelControl_6
        DEC     A
        JZ      ??zclGeneral_ProcessInLevelControl_7
        DEC     A
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_4 & 0xFFFF
        LJMP    ??zclGeneral_ProcessInLevelControl_8 & 0xFFFF
// 3270     {
// 3271       case COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF:
// 3272         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_5:
        INC     R7
// 3273         // fall through
// 3274       case COMMAND_LEVEL_MOVE_TO_LEVEL:
// 3275         if ( pCBs->pfnLevelControlMoveToLevel )
??zclGeneral_ProcessInLevelControl_1:
        MOV     A,R4
        ADD     A,#0x10
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_314:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3276         {
// 3277           zclLCMoveToLevel_t cmd;
// 3278 
// 3279           cmd.level = pInMsg->pData[0];
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_14:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine38 & 0xFFFF
// 3280           cmd.transitionTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
??CrossCallReturnLabel_48:
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_196:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 3281           cmd.withOnOff = withOnOff;
??CrossCallReturnLabel_264:
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R7
        MOVX    @DPTR,A
// 3282 
// 3283           pCBs->pfnLevelControlMoveToLevel( &cmd );
        ; Setup parameters for indirect call
        MOV     A,#0x3
        SJMP    ??zclGeneral_ProcessInLevelControl_9
// 3284         }
// 3285         break;
// 3286 
// 3287       case COMMAND_LEVEL_MOVE_WITH_ON_OFF:
// 3288         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_6:
        INC     R7
// 3289         // fall through
// 3290       case COMMAND_LEVEL_MOVE:
// 3291         if ( pCBs->pfnLevelControlMove )
??zclGeneral_ProcessInLevelControl_2:
        MOV     A,R4
        ADD     A,#0x12
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_315:
        JNZ     $+5
        LJMP    ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3292         {
// 3293           zclLCMove_t cmd;
// 3294 
// 3295           cmd.moveMode = pInMsg->pData[0];
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_15:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine58 & 0xFFFF
// 3296           cmd.rate = pInMsg->pData[1];
??CrossCallReturnLabel_93:
        LCALL   ??Subroutine139_0 & 0xFFFF
??CrossCallReturnLabel_375:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 3297           cmd.withOnOff = withOnOff;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R7
        LCALL   ?Subroutine90 & 0xFFFF
// 3298 
// 3299           pCBs->pfnLevelControlMove( &cmd );
// 3300         }
??CrossCallReturnLabel_172:
        SJMP    ??zclGeneral_ProcessInLevelControl_10
// 3301         break;
// 3302 
// 3303       case COMMAND_LEVEL_STEP_WITH_ON_OFF:
// 3304         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_7:
        INC     R7
// 3305         // fall through
// 3306       case COMMAND_LEVEL_STEP:
// 3307         if ( pCBs->pfnLevelControlStep )
??zclGeneral_ProcessInLevelControl_3:
        MOV     A,R4
        ADD     A,#0x14
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_316:
        JZ      ??zclGeneral_ProcessInLevelControl_0
// 3308         {
// 3309           zclLCStep_t cmd;
// 3310 
// 3311           cmd.stepMode = pInMsg->pData[0];
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_16:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine58 & 0xFFFF
// 3312           cmd.amount =  pInMsg->pData[1];
??CrossCallReturnLabel_94:
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_58:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine58 & 0xFFFF
// 3313           cmd.transitionTime = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
??CrossCallReturnLabel_95:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_66:
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_83:
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_197:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 3314           cmd.withOnOff = withOnOff;
??CrossCallReturnLabel_265:
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R7
        MOVX    @DPTR,A
// 3315 
// 3316           pCBs->pfnLevelControlStep( &cmd );
        ; Setup parameters for indirect call
        MOV     A,#0x7
??zclGeneral_ProcessInLevelControl_9:
        LCALL   ?XSTACK_DISP0_8
??zclGeneral_ProcessInLevelControl_10:
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R4
        MOV     DPH,R5
// 3317         }
        LCALL   ??Subroutine139_0 & 0xFFFF
??CrossCallReturnLabel_376:
        SJMP    ??zclGeneral_ProcessInLevelControl_11
// 3318         break;
// 3319 
// 3320       case COMMAND_LEVEL_STOP:
// 3321       case COMMAND_LEVEL_STOP_WITH_ON_OFF:
// 3322         // Both Stop commands are identical
// 3323         if ( pCBs->pfnLevelControlStop )
??zclGeneral_ProcessInLevelControl_4:
        MOV     A,R4
        ADD     A,#0x16
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_356:
        JZ      ??zclGeneral_ProcessInLevelControl_0
// 3324         {
// 3325           pCBs->pfnLevelControlStop();
        ; Setup parameters for indirect call
??zclGeneral_ProcessInLevelControl_11:
        LCALL   ?CALL_IND
        SJMP    ??zclGeneral_ProcessInLevelControl_0
// 3326         }
// 3327         break;
// 3328 
// 3329       default:
// 3330         stat = ZFailure;
??zclGeneral_ProcessInLevelControl_8:
        INC     R6
// 3331         break;
// 3332     }
// 3333   }
// 3334   // no Client command
// 3335 
// 3336   return ( stat );
??zclGeneral_ProcessInLevelControl_0:
        MOV     A,R6
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 9)
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock891
// 3337 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond892 Using cfiCommon0
          CFI Function zclGeneral_ProcessInOnOff
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+0
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker894 Using cfiCommon1
          CFI (cfiPicker894) NoFunction
          CFI (cfiPicker894) Picker
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiPicker894

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond895 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+0
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker897 Using cfiCommon1
          CFI (cfiPicker897) NoFunction
          CFI (cfiPicker897) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_358:
        RET
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiPicker897

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond898 Using cfiCommon0
          CFI Function zclGeneral_ProcessInOnOff
          CFI Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_355
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_356
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+0
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_353
          CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond900) CFA_SP SP+0
          CFI (cfiCond900) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_354
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+0
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_358, ??CrossCallReturnLabel_65
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+0
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_358, ??CrossCallReturnLabel_66
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+0
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond904 Using cfiCommon0
          CFI (cfiCond904) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond904) Conditional ??CrossCallReturnLabel_357, ??CrossCallReturnLabel_47
          CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond904) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond904) CFA_SP SP+0
          CFI (cfiCond904) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond905 Using cfiCommon0
          CFI (cfiCond905) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond905) Conditional ??CrossCallReturnLabel_357, ??CrossCallReturnLabel_48
          CFI (cfiCond905) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond905) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond905) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond905) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond905) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond905) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond905) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond905) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond905) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond905) CFA_SP SP+0
          CFI (cfiCond905) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker906 Using cfiCommon1
          CFI (cfiPicker906) NoFunction
          CFI (cfiPicker906) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_363:
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiCond904
          CFI EndBlock cfiCond905
          CFI EndBlock cfiPicker906

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond907 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+0
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker909 Using cfiCommon1
          CFI (cfiPicker909) NoFunction
          CFI (cfiPicker909) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_139:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiPicker909

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond910 Using cfiCommon0
          CFI Function zclGeneral_ProcessInOnOff
          CFI Conditional ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+0
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker912 Using cfiCommon1
          CFI (cfiPicker912) NoFunction
          CFI (cfiPicker912) Picker
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_357:
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiPicker912

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond913 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_366
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond914) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond914) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond914) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond914) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+0
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker915 Using cfiCommon1
          CFI (cfiPicker915) NoFunction
          CFI (cfiPicker915) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiPicker915
        REQUIRE ??Subroutine138_0
        ; // Fall through to label ??Subroutine138_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine138_0:
          CFI Block cfiCond916 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_368
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond917) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+0
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond918) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond918) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond918) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond918) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond918) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond918) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+0
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond919) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond919) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond919) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond919) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond919) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+0
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker920 Using cfiCommon1
          CFI (cfiPicker920) NoFunction
          CFI (cfiPicker920) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_365:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiPicker920
        REQUIRE ??Subroutine139_0
        ; // Fall through to label ??Subroutine139_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine139_0:
          CFI Block cfiCond921 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_370
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond922) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond922) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond922) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond922) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond922) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond922) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond922) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond922) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond922) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond922) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+0
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond923) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond923) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond923) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond923) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond923) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond923) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond923) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond923) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond923) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond923) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond923) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond923) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond923) CFA_SP SP+0
          CFI (cfiCond923) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond924 Using cfiCommon0
          CFI (cfiCond924) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond924) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond924) CFA_SP SP+0
          CFI (cfiCond924) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+0
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+0
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+0
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond928) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond928) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond928) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond928) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond928) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond928) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+0
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond929) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond929) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond929) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+0
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond930) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond930) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond930) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond930) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond930) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond930) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond930) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond930) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond930) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond930) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond930) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond930) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond930) CFA_SP SP+0
          CFI (cfiCond930) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond931 Using cfiCommon0
          CFI (cfiCond931) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond931) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond931) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond931) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond931) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond931) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond931) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond931) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond931) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond931) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond931) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond931) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond931) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond931) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond931) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond931) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond931) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond931) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond931) CFA_SP SP+0
          CFI (cfiCond931) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker932 Using cfiCommon1
          CFI (cfiPicker932) NoFunction
          CFI (cfiPicker932) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_378:
        RET
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiCond931
          CFI EndBlock cfiPicker932

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond933 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_23
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+0
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_366
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+0
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_367
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond936) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond936) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond936) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond936) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+0
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_368
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+0
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_369
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond938) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond938) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond938) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond938) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond938) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond938) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond938) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+0
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond939 Using cfiCommon0
          CFI (cfiCond939) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond939) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_370
          CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond939) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond939) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond939) CFA_SP SP+0
          CFI (cfiCond939) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_371
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond940) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond940) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond940) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond940) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond940) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond940) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond940) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond940) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond940) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+0
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_372
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond941) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond941) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond941) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond941) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond941) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond941) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond941) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond941) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond941) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond941) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond941) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+0
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_373
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+0
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_374
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+0
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_375
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+0
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_376
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+0
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker946 Using cfiCommon1
          CFI (cfiPicker946) NoFunction
          CFI (cfiPicker946) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiPicker946

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond947 Using cfiCommon0
          CFI Function zclGeneral_ProcessInOnOff
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+0
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+0
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+0
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+0
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker952 Using cfiCommon1
          CFI (cfiPicker952) NoFunction
          CFI (cfiPicker952) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_138:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiPicker952

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond953 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_58
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+0
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_12
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+0
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function zclGeneral_ProcessInOnOff
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_13
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+0
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_14
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+0
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond958 Using cfiCommon0
          CFI (cfiCond958) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond958) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_15
          CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond958) CFA_SP SP+0
          CFI (cfiCond958) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_16
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+0
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker960 Using cfiCommon1
          CFI (cfiPicker960) NoFunction
          CFI (cfiPicker960) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_342:
        MOV     DPH,A
        MOV     DPL,R2
        RET
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiPicker960
// 3338 #endif // ZCL_LEVEL_CTRL
// 3339 
// 3340 #ifdef ZCL_LEVEL_CTRL
// 3341 /*********************************************************************
// 3342  * @fn      zclGeneral_ProcessInManuLevelControl
// 3343  *
// 3344  * @brief   Process in the received Level Control Command.
// 3345  *
// 3346  * @param   pInMsg - pointer to the incoming message
// 3347  *
// 3348  * @return  ZStatus_t
// 3349  */
// 3350 static ZStatus_t zclGeneral_ProcessInManuLevelControl( zclIncoming_t *pInMsg,
// 3351                                                    zclGeneral_AppCallbacks_t *pCBs )//add my own function
// 3352 {
// 3353   ZStatus_t stat = ZSuccess;
// 3354 
// 3355 #ifdef DALI_LIGHT
// 3356   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 3357   {
// 3358     switch ( pInMsg->hdr.commandID )
// 3359     {
// 3360       case COMMAND_LEVEL_MOVE_TO_LEVEL:
// 3361        dali_cmd = pInMsg->pData[3];
// 3362        dali_cmd = (dali_cmd << 1) | 0x00;
// 3363        dali_cmd = (dali_cmd << 8) | (pInMsg->pData[0]);
// 3364        DALI_Send(dali_cmd,&dali_answer,&dali_answer_state);
// 3365        stat = ZSuccess;
// 3366         break;
// 3367 
// 3368       default:
// 3369         stat = ZFailure;
// 3370         break;
// 3371     }
// 3372   }
// 3373   // no Client command
// 3374 
// 3375 #endif
// 3376   return ( stat );
// 3377 }
// 3378 #endif // ZCL_LEVEL_CTRL
// 3379 
// 3380 #ifdef ZCL_ALARMS
// 3381 /*********************************************************************
// 3382  * @fn      zclGeneral_AddAlarm
// 3383  *
// 3384  * @brief   Add an alarm for a cluster
// 3385  *
// 3386  * @param   endpoint -
// 3387  * @param   alarm - new alarm item
// 3388  *
// 3389  * @return  ZStatus_t
// 3390  */
// 3391 ZStatus_t zclGeneral_AddAlarm( uint8 endpoint, zclGeneral_Alarm_t *alarm )
// 3392 {
// 3393   zclGenAlarmItem_t *pNewItem;
// 3394   zclGenAlarmItem_t *pLoop;
// 3395 
// 3396   // Fill in the new profile list
// 3397   pNewItem = zcl_mem_alloc( sizeof( zclGenAlarmItem_t ) );
// 3398   if ( pNewItem == NULL )
// 3399     return ( ZMemError );
// 3400 
// 3401   // Fill in the plugin record.
// 3402   pNewItem->next = (zclGenAlarmItem_t *)NULL;
// 3403   pNewItem->endpoint =  endpoint;
// 3404   zcl_memcpy( (uint8*)(&pNewItem->alarm), (uint8*)alarm, sizeof ( zclGeneral_Alarm_t ) );
// 3405 
// 3406   // Find spot in list
// 3407   if (  zclGenAlarmTable == NULL )
// 3408   {
// 3409     zclGenAlarmTable = pNewItem;
// 3410   }
// 3411   else
// 3412   {
// 3413     // Look for end of list
// 3414     pLoop = zclGenAlarmTable;
// 3415     while ( pLoop->next != NULL )
// 3416       pLoop = pLoop->next;
// 3417 
// 3418     // Put new item at end of list
// 3419     pLoop->next = pNewItem;
// 3420   }
// 3421 
// 3422   return ( ZSuccess );
// 3423 }
// 3424 
// 3425 /*********************************************************************
// 3426  * @fn      zclGeneral_FindAlarm
// 3427  *
// 3428  * @brief   Find an alarm with alarmCode and clusterID
// 3429  *
// 3430  * @param   endpoint -
// 3431  * @param   groupID - what group the scene belongs to
// 3432  * @param   sceneID - ID to look for scene
// 3433  *
// 3434  * @return  a pointer to the alarm information, NULL if not found
// 3435  */
// 3436 zclGeneral_Alarm_t *zclGeneral_FindAlarm( uint8 endpoint, uint8 alarmCode, uint16 clusterID )
// 3437 {
// 3438   zclGenAlarmItem_t *pLoop;
// 3439 
// 3440   // Look for the alarm
// 3441   pLoop = zclGenAlarmTable;
// 3442   while ( pLoop )
// 3443   {
// 3444     if ( pLoop->endpoint == endpoint &&
// 3445          pLoop->alarm.code == alarmCode && pLoop->alarm.clusterID == clusterID )
// 3446     {
// 3447       return ( &(pLoop->alarm) );
// 3448     }
// 3449     pLoop = pLoop->next;
// 3450   }
// 3451 
// 3452   return ( (zclGeneral_Alarm_t *)NULL );
// 3453 }
// 3454 
// 3455 /*********************************************************************
// 3456  * @fn      zclGeneral_FindEarliestAlarm
// 3457  *
// 3458  * @brief   Find an alarm with the earliest timestamp
// 3459  *
// 3460  * @param   endpoint -
// 3461  *
// 3462  * @return  a pointer to the alarm information, NULL if not found
// 3463  */
// 3464 zclGeneral_Alarm_t *zclGeneral_FindEarliestAlarm( uint8 endpoint )
// 3465 {
// 3466   zclGenAlarmItem_t *pLoop;
// 3467   zclGenAlarmItem_t earliestAlarm;
// 3468   zclGenAlarmItem_t *pEarliestAlarm = &earliestAlarm;
// 3469 
// 3470   pEarliestAlarm->alarm.timeStamp = 0xFFFFFFFF;
// 3471 
// 3472   // Look for alarm with earliest time
// 3473   pLoop = zclGenAlarmTable;
// 3474   while ( pLoop )
// 3475   {
// 3476     if ( pLoop->endpoint == endpoint &&
// 3477          pLoop->alarm.timeStamp < pEarliestAlarm->alarm.timeStamp )
// 3478     {
// 3479       pEarliestAlarm = pLoop;
// 3480     }
// 3481     pLoop = pLoop->next;
// 3482   }
// 3483 
// 3484   if ( pEarliestAlarm->alarm.timeStamp != 0xFFFFFFFF )
// 3485     return ( &(pEarliestAlarm->alarm) );
// 3486 
// 3487   // No alarm
// 3488   return ( (zclGeneral_Alarm_t *)NULL );
// 3489 }
// 3490 
// 3491 /*********************************************************************
// 3492  * @fn      zclGeneral_ResetAlarm
// 3493  *
// 3494  * @brief   Remove a scene with endpoint and sceneID
// 3495  *
// 3496  * @param   endpoint -
// 3497  * @param   alarmCode -
// 3498  * @param   clusterID -
// 3499  *
// 3500  * @return  TRUE if removed, FALSE if not found
// 3501  */
// 3502 void zclGeneral_ResetAlarm( uint8 endpoint, uint8 alarmCode, uint16 clusterID )
// 3503 {
// 3504   zclGenAlarmItem_t *pLoop;
// 3505   zclGenAlarmItem_t *pPrev;
// 3506 
// 3507   // Look for end of list
// 3508   pLoop = zclGenAlarmTable;
// 3509   pPrev = NULL;
// 3510   while ( pLoop )
// 3511   {
// 3512     if ( pLoop->endpoint == endpoint &&
// 3513          pLoop->alarm.code == alarmCode && pLoop->alarm.clusterID == clusterID )
// 3514     {
// 3515       if ( pPrev == NULL )
// 3516         zclGenAlarmTable = pLoop->next;
// 3517       else
// 3518         pPrev->next = pLoop->next;
// 3519 
// 3520       // Free the memory
// 3521       zcl_mem_free( pLoop );
// 3522 
// 3523       // Notify the Application so that if the alarm condition still active then
// 3524       // a new notification will be generated, and a new alarm record will be
// 3525       // added to the alarm log
// 3526       // zclGeneral_NotifyReset( alarmCode, clusterID ); // callback function?
// 3527       return;
// 3528     }
// 3529     pPrev = pLoop;
// 3530     pLoop = pLoop->next;
// 3531   }
// 3532 }
// 3533 
// 3534 /*********************************************************************
// 3535  * @fn      zclGeneral_ResetAllAlarms
// 3536  *
// 3537  * @brief   Remove all alarms with endpoint
// 3538  *
// 3539  * @param   endpoint -
// 3540  * @param   notifyApp -
// 3541  *
// 3542  * @return  none
// 3543  */
// 3544 void zclGeneral_ResetAllAlarms( uint8 endpoint, uint8 notifyApp )
// 3545 {
// 3546   zclGenAlarmItem_t *pLoop;
// 3547   zclGenAlarmItem_t *pPrev;
// 3548   zclGenAlarmItem_t *pNext;
// 3549 
// 3550   // Look for end of list
// 3551   pLoop = zclGenAlarmTable;
// 3552   pPrev = NULL;
// 3553   while ( pLoop )
// 3554   {
// 3555     if (  pLoop->endpoint == endpoint )
// 3556     {
// 3557       if ( pPrev == NULL )
// 3558         zclGenAlarmTable = pLoop->next;
// 3559       else
// 3560         pPrev->next = pLoop->next;
// 3561 
// 3562       pNext = pLoop->next;
// 3563 
// 3564       // Free the memory
// 3565       zcl_mem_free( pLoop );
// 3566 
// 3567       pLoop = pNext;
// 3568     }
// 3569     else
// 3570     {
// 3571       pPrev = pLoop;
// 3572       pLoop = pLoop->next;
// 3573     }
// 3574   }
// 3575 
// 3576   if ( notifyApp )
// 3577   {
// 3578     // Notify the Application so that if any alarm conditions still active then
// 3579     // a new notification will be generated, and a new alarm record will be
// 3580     // added to the alarm log
// 3581     // zclGeneral_NotifyResetAll(); // callback function?
// 3582   }
// 3583 }
// 3584 
// 3585 /*********************************************************************
// 3586  * @fn      zclGeneral_ProcessInAlarmsServer
// 3587  *
// 3588  * @brief   Process in the received Alarms Command.
// 3589  *
// 3590  * @param   pInMsg - pointer to the incoming message
// 3591  *
// 3592  * @return  ZStatus_t
// 3593  */
// 3594 static ZStatus_t zclGeneral_ProcessInAlarmsServer( zclIncoming_t *pInMsg,
// 3595                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3596 {
// 3597   zclAlarm_t alarm;
// 3598   zclGeneral_Alarm_t *pAlarm;
// 3599   uint8 *pData = pInMsg->pData;
// 3600   ZStatus_t stat = ZSuccess;
// 3601 
// 3602   switch ( pInMsg->hdr.commandID )
// 3603   {
// 3604     case COMMAND_ALARMS_RESET:
// 3605       if ( pCBs->pfnAlarm )
// 3606       {
// 3607         alarm.cmdID = pInMsg->hdr.commandID;
// 3608         alarm.alarmCode = pData[0];
// 3609         alarm.clusterID = BUILD_UINT16( pData[1], pData[2] );
// 3610 
// 3611         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3612       }
// 3613       else
// 3614       {
// 3615         stat = ZCL_STATUS_FAILURE;
// 3616       }
// 3617       break;
// 3618 
// 3619     case COMMAND_ALARMS_RESET_ALL:
// 3620       if ( pCBs->pfnAlarm )
// 3621       {
// 3622         alarm.cmdID = pInMsg->hdr.commandID;
// 3623 
// 3624         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3625       }
// 3626       else
// 3627       {
// 3628         stat = ZCL_STATUS_FAILURE;
// 3629       }
// 3630       break;
// 3631 
// 3632     case COMMAND_ALARMS_GET:
// 3633       if ( pCBs->pfnAlarm )
// 3634       {
// 3635         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3636         alarm.cmdID = pInMsg->hdr.commandID;
// 3637 
// 3638         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3639 
// 3640         pAlarm = zclGeneral_FindEarliestAlarm( pInMsg->msg->endPoint );
// 3641         if ( pAlarm )
// 3642         {
// 3643           // Send a response back
// 3644           zclGeneral_SendAlarmGetRespnose( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 3645                                            ZCL_STATUS_SUCCESS, pAlarm->code,
// 3646                                            pAlarm->clusterID, pAlarm->timeStamp,
// 3647                                            true, pInMsg->hdr.transSeqNum );
// 3648           // Remove the entry from the Alarm table
// 3649           zclGeneral_ResetAlarm( pInMsg->msg->endPoint, pAlarm->code, pAlarm->clusterID );
// 3650         }
// 3651         else
// 3652         {
// 3653           // Send a response back
// 3654           zclGeneral_SendAlarmGetRespnose( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 3655                                            ZCL_STATUS_NOT_FOUND, 0, 0, 0,
// 3656                                            true, pInMsg->hdr.transSeqNum );
// 3657         }
// 3658         stat = ZCL_STATUS_CMD_HAS_RSP;
// 3659       }
// 3660       else
// 3661       {
// 3662         stat = ZCL_STATUS_FAILURE;
// 3663       }
// 3664       break;
// 3665 
// 3666     case COMMAND_ALARMS_RESET_LOG:
// 3667       if ( pCBs->pfnAlarm )
// 3668       {
// 3669         alarm.cmdID = pInMsg->hdr.commandID;
// 3670 
// 3671         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3672 
// 3673         zclGeneral_ResetAllAlarms( pInMsg->msg->endPoint, FALSE );
// 3674       }
// 3675       else
// 3676       {
// 3677         stat = ZCL_STATUS_FAILURE;
// 3678       }
// 3679       break;
// 3680 
// 3681 #ifdef SE_UK_EXT
// 3682     case COMMAND_ALARMS_PUBLISH_EVENT_LOG:
// 3683       if ( pCBs->pfnPublishEventLog )
// 3684       {
// 3685         zclPublishEventLog_t eventLog;
// 3686 
// 3687         eventLog.logID = *pData++;
// 3688         eventLog.cmdIndex = *pData++;
// 3689         eventLog.totalCmds = *pData++;
// 3690 
// 3691         // First try to find out number of Sub Log Payloads
// 3692         eventLog.numSubLogs = (pInMsg->pDataLen-3)/(1+4); // event ID + event time
// 3693         if ( eventLog.numSubLogs > 0 )
// 3694         {
// 3695           // Try to alloc space for Log Payload
// 3696           eventLog.pLogs = (zclEventLogPayload_t *)zcl_mem_alloc( sizeof( zclEventLogPayload_t ) *
// 3697                                                                    eventLog.numSubLogs );
// 3698           if ( eventLog.pLogs != NULL )
// 3699           {
// 3700             // Copy Log Payload
// 3701             for ( uint8 i = 0; i < eventLog.numSubLogs; i++ )
// 3702             {
// 3703               eventLog.pLogs[i].eventId = *pData++;
// 3704               eventLog.pLogs[i].eventTime = zcl_build_uint32( pData, 4 );
// 3705               pData += 4;
// 3706             }
// 3707           }
// 3708           else
// 3709           {
// 3710             stat = ZCL_STATUS_SOFTWARE_FAILURE;
// 3711           }
// 3712         }
// 3713         else
// 3714         {
// 3715           eventLog.pLogs = NULL;
// 3716         }
// 3717 
// 3718         if ( stat == ZSuccess )
// 3719         {
// 3720           pCBs->pfnPublishEventLog( &(pInMsg->msg->srcAddr), &eventLog );
// 3721         }
// 3722 
// 3723         if ( eventLog.pLogs != NULL )
// 3724         {
// 3725           zcl_mem_free( eventLog.pLogs );
// 3726         }
// 3727       }
// 3728       break;
// 3729 #endif // SE_UK_EXT
// 3730 
// 3731     default:
// 3732       stat = ZCL_STATUS_UNSUP_CLUSTER_COMMAND;
// 3733       break;
// 3734   }
// 3735 
// 3736   return ( stat );
// 3737 }
// 3738 
// 3739 /*********************************************************************
// 3740  * @fn      zclGeneral_ProcessInAlarmsClient
// 3741  *
// 3742  * @brief   Process in the received Alarms Command.
// 3743  *
// 3744  * @param   pInMsg - pointer to the incoming message
// 3745  *
// 3746  * @return  ZStatus_t
// 3747  */
// 3748 static ZStatus_t zclGeneral_ProcessInAlarmsClient( zclIncoming_t *pInMsg,
// 3749                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3750 {
// 3751   uint8 *pData = pInMsg->pData;
// 3752   zclAlarm_t alarm;
// 3753   ZStatus_t stat = ZSuccess;
// 3754 
// 3755   zcl_memset( (uint8*)&alarm, 0, sizeof( zclAlarm_t ) );
// 3756 
// 3757   switch ( pInMsg->hdr.commandID )
// 3758   {
// 3759     case COMMAND_ALARMS_ALARM:
// 3760       if ( pCBs->pfnAlarm )
// 3761       {
// 3762         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3763         alarm.cmdID = pInMsg->hdr.commandID;
// 3764         alarm.alarmCode = pData[0];
// 3765         alarm.clusterID = BUILD_UINT16( pData[1], pData[2] );
// 3766 
// 3767         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3768       }
// 3769       else
// 3770       {
// 3771         stat = ZCL_STATUS_FAILURE;
// 3772       }
// 3773       break;
// 3774 
// 3775     case COMMAND_ALARMS_GET_RSP:
// 3776       if ( pCBs->pfnAlarm )
// 3777       {
// 3778         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3779         alarm.cmdID = pInMsg->hdr.commandID;
// 3780         alarm.alarmCode = *pData++;
// 3781         alarm.clusterID = BUILD_UINT16( pData[0], pData[1] );
// 3782 
// 3783         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3784       }
// 3785       else
// 3786       {
// 3787         stat = ZCL_STATUS_FAILURE;
// 3788       }
// 3789       break;
// 3790 
// 3791 #ifdef SE_UK_EXT
// 3792     case COMMAND_ALARMS_GET_EVENT_LOG:
// 3793       if ( pCBs->pfnGetEventLog )
// 3794       {
// 3795         zclGetEventLog_t eventLog;
// 3796 
// 3797         eventLog.logID = *pData++;
// 3798         eventLog.startTime = zcl_build_uint32( pData, 4 );
// 3799         pData += 4;
// 3800         eventLog.endTime = zcl_build_uint32( pData, 4 );
// 3801         pData += 4;
// 3802         eventLog.numEvents = *pData;
// 3803 
// 3804         pCBs->pfnGetEventLog( pInMsg->msg->endPoint, &(pInMsg->msg->srcAddr),
// 3805                               &eventLog, pInMsg->hdr.transSeqNum );
// 3806       }
// 3807       break;
// 3808 #endif // SE_UK_EXT
// 3809 
// 3810     default:
// 3811       stat = ZCL_STATUS_UNSUP_CLUSTER_COMMAND;
// 3812       break;
// 3813   }
// 3814 
// 3815   return ( stat );
// 3816 }
// 3817 #endif // ZCL_ALARMS
// 3818 
// 3819 #ifdef ZCL_LOCATION
// 3820 /*********************************************************************
// 3821  * @fn      zclGeneral_ProcessInLocationServer
// 3822  *
// 3823  * @brief   Process in the received Location Command.
// 3824  *
// 3825  * @param   pInMsg - pointer to the incoming message
// 3826  *
// 3827  * @return  ZStatus_t
// 3828  */
// 3829 static ZStatus_t zclGeneral_ProcessInLocationServer( zclIncoming_t *pInMsg,
// 3830                                                      zclGeneral_AppCallbacks_t *pCBs )
// 3831 {
// 3832   uint8 *pData = pInMsg->pData;
// 3833   zclLocation_t cmd;
// 3834   ZStatus_t stat = ZSuccess;
// 3835 
// 3836   zcl_memset( (uint8*)&cmd, 0, sizeof( zclLocation_t ) );
// 3837 
// 3838   switch ( pInMsg->hdr.commandID )
// 3839   {
// 3840     case COMMAND_LOCATION_SET_ABSOLUTE:
// 3841       cmd.un.absLoc.coordinate1 = BUILD_UINT16( pData[0], pData[1] );
// 3842       pData += 2;
// 3843       cmd.un.absLoc.coordinate2 = BUILD_UINT16( pData[0], pData[1] );
// 3844       pData += 2;
// 3845       cmd.un.absLoc.coordinate3 = BUILD_UINT16( pData[0], pData[1] );
// 3846       pData += 2;
// 3847       cmd.un.absLoc.power = BUILD_UINT16( pData[0], pData[1] );
// 3848       pData += 2;
// 3849       cmd.un.absLoc.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3850 
// 3851       if ( pCBs->pfnLocation )
// 3852       {
// 3853         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3854         cmd.cmdID = pInMsg->hdr.commandID;
// 3855 
// 3856         // Update the absolute location info
// 3857         pCBs->pfnLocation( &cmd );
// 3858       }
// 3859       break;
// 3860 
// 3861     case COMMAND_LOCATION_SET_DEV_CFG:
// 3862       cmd.un.devCfg.power = BUILD_UINT16( pData[0], pData[1] );
// 3863       pData += 2;
// 3864       cmd.un.devCfg.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3865       pData += 2;
// 3866       cmd.un.devCfg.calcPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3867       pData += 2;
// 3868       cmd.un.devCfg.numMeasurements = *pData++;
// 3869       cmd.un.devCfg.reportPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3870 
// 3871       if ( pCBs->pfnLocation )
// 3872       {
// 3873         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3874         cmd.cmdID = pInMsg->hdr.commandID;
// 3875 
// 3876         // Update the device configuration info
// 3877         pCBs->pfnLocation( &cmd );
// 3878       }
// 3879       break;
// 3880 
// 3881     case COMMAND_LOCATION_GET_DEV_CFG:
// 3882       cmd.un.ieeeAddr = pData;
// 3883 
// 3884       if ( pCBs->pfnLocation )
// 3885       {
// 3886         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3887         cmd.cmdID = pInMsg->hdr.commandID;
// 3888         cmd.seqNum = pInMsg->hdr.transSeqNum;
// 3889 
// 3890         // Retreive the Device Configuration
// 3891         pCBs->pfnLocation( &cmd );
// 3892       }
// 3893       stat = ZCL_STATUS_CMD_HAS_RSP;
// 3894       break;
// 3895 
// 3896     case COMMAND_LOCATION_GET_DATA:
// 3897       cmd.un.loc.bitmap.locByte = *pData++;
// 3898       cmd.un.loc.numResponses = *pData++;
// 3899 
// 3900       if ( cmd.un.loc.brdcastResponse == 0 ) // command is sent as a unicast
// 3901         zcl_memcpy( cmd.un.loc.targetAddr, pData, 8 );
// 3902 
// 3903       if ( pCBs->pfnLocation )
// 3904       {
// 3905         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3906         cmd.cmdID = pInMsg->hdr.commandID;
// 3907         cmd.seqNum = pInMsg->hdr.transSeqNum;
// 3908 
// 3909         // Retreive the Location Data
// 3910         pCBs->pfnLocation( &cmd );
// 3911       }
// 3912       stat = ZCL_STATUS_CMD_HAS_RSP;
// 3913       break;
// 3914 
// 3915     default:
// 3916       stat = ZFailure;
// 3917       break;
// 3918   }
// 3919 
// 3920   return ( stat );
// 3921 }
// 3922 
// 3923 /*********************************************************************
// 3924  * @fn      zclGeneral_ProcessInLocationDataRsp
// 3925  *
// 3926  * @brief   Process in the received Location Command.
// 3927  *
// 3928  * @param   pInMsg - pointer to the incoming message
// 3929  *
// 3930  * @return  ZStatus_t
// 3931  */
// 3932 static void zclGeneral_ProcessInLocationDataRsp( zclIncoming_t *pInMsg,
// 3933                                                  zclGeneral_AppCallbacks_t *pCBs )
// 3934 {
// 3935   uint8 *pData = pInMsg->pData;
// 3936   zclLocationRsp_t rsp;
// 3937 
// 3938   zcl_memset( (uint8*)&rsp, 0, sizeof( zclLocationRsp_t ) );
// 3939 
// 3940   if ( pCBs->pfnLocationRsp )
// 3941   {
// 3942     if ( pInMsg->hdr.commandID == COMMAND_LOCATION_DATA_RSP )
// 3943       rsp.un.loc.status = *pData++;
// 3944 
// 3945     if ( pInMsg->hdr.commandID != COMMAND_LOCATION_DATA_RSP ||
// 3946          rsp.un.loc.status == ZCL_STATUS_SUCCESS )
// 3947     {
// 3948       rsp.un.loc.data.type = *pData++;
// 3949       rsp.un.loc.data.absLoc.coordinate1 = BUILD_UINT16( pData[0], pData[1] );
// 3950       pData += 2;
// 3951       rsp.un.loc.data.absLoc.coordinate2 = BUILD_UINT16( pData[0], pData[1] );
// 3952       pData += 2;
// 3953 
// 3954       if ( locationType2D( rsp.un.loc.data.type ) == 0 )
// 3955       {
// 3956         rsp.un.loc.data.absLoc.coordinate3 = BUILD_UINT16( pData[0], pData[1] );
// 3957         pData += 2;
// 3958       }
// 3959 
// 3960       if ( pInMsg->hdr.commandID != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 3961       {
// 3962         rsp.un.loc.data.absLoc.power = BUILD_UINT16( pData[0], pData[1] );
// 3963         pData += 2;
// 3964         rsp.un.loc.data.absLoc.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3965         pData += 2;
// 3966       }
// 3967 
// 3968       if ( locationTypeAbsolute( rsp.un.loc.data.type ) == 0 )
// 3969       {
// 3970         if ( pInMsg->hdr.commandID != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 3971           rsp.un.loc.data.calcLoc.locationMethod = *pData++;
// 3972 
// 3973         rsp.un.loc.data.calcLoc.qualityMeasure = *pData++;
// 3974         rsp.un.loc.data.calcLoc.locationAge = BUILD_UINT16( pData[0], pData[1] );
// 3975       }
// 3976     }
// 3977 
// 3978     rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3979     rsp.cmdID = pInMsg->hdr.commandID;
// 3980 
// 3981     // Notify the Application
// 3982     pCBs->pfnLocationRsp( &rsp );
// 3983   }
// 3984 }
// 3985 
// 3986 /*********************************************************************
// 3987  * @fn      zclGeneral_ProcessInLocationClient
// 3988  *
// 3989  * @brief   Process in the received Location Command.
// 3990  *
// 3991  * @param   pInMsg - pointer to the incoming message
// 3992  *
// 3993  * @return  ZStatus_t
// 3994  */
// 3995 static ZStatus_t zclGeneral_ProcessInLocationClient( zclIncoming_t *pInMsg,
// 3996                                                      zclGeneral_AppCallbacks_t *pCBs )
// 3997 {
// 3998   uint8 *pData = pInMsg->pData;
// 3999   zclLocationRsp_t rsp;
// 4000   ZStatus_t stat = ZSuccess;
// 4001 
// 4002   zcl_memset( (uint8*)&rsp, 0, sizeof( zclLocationRsp_t ) );
// 4003 
// 4004   switch ( pInMsg->hdr.commandID )
// 4005   {
// 4006     case COMMAND_LOCATION_DEV_CFG_RSP:
// 4007       if ( pCBs->pfnLocationRsp )
// 4008       {
// 4009         rsp.un.devCfg.status = *pData++;
// 4010         if ( rsp.un.devCfg.status == ZCL_STATUS_SUCCESS )
// 4011         {
// 4012           rsp.un.devCfg.data.power = BUILD_UINT16( pData[0], pData[1] );
// 4013           pData += 2;
// 4014           rsp.un.devCfg.data.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 4015           pData += 2;
// 4016           rsp.un.devCfg.data.calcPeriod = BUILD_UINT16( pData[0], pData[1] );
// 4017           pData += 2;
// 4018           rsp.un.devCfg.data.numMeasurements = *pData++;
// 4019           rsp.un.devCfg.data.reportPeriod = BUILD_UINT16( pData[0], pData[1] );
// 4020 
// 4021           rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 4022           rsp.cmdID = pInMsg->hdr.commandID;
// 4023 
// 4024           // Notify the Application
// 4025           pCBs->pfnLocationRsp( &rsp );
// 4026         }
// 4027       }
// 4028       break;
// 4029 
// 4030     case COMMAND_LOCATION_DATA_RSP:
// 4031     case COMMAND_LOCATION_DATA_NOTIF:
// 4032     case COMMAND_LOCATION_COMPACT_DATA_NOTIF:
// 4033       zclGeneral_ProcessInLocationDataRsp( pInMsg, pCBs );
// 4034       break;
// 4035 
// 4036     case COMMAND_LOCATION_RSSI_PING:
// 4037       if ( pCBs->pfnLocationRsp )
// 4038       {
// 4039         rsp.un.locationType = *pData;
// 4040 
// 4041         rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 4042         rsp.cmdID = pInMsg->hdr.commandID;
// 4043 
// 4044         // Notify the Application
// 4045         pCBs->pfnLocationRsp( &rsp );
// 4046       }
// 4047       break;
// 4048 
// 4049     default:
// 4050       stat = ZFailure;
// 4051       break;
// 4052   }
// 4053 
// 4054   return ( stat );
// 4055 }
// 4056 #endif // ZCL_LOCATION
// 4057 
// 4058 #ifdef ZCL_SCENES
// 4059 #if !defined ( ZCL_STANDALONE )
// 4060 /*********************************************************************
// 4061  * @fn      zclGeneral_ScenesInitNV
// 4062  *
// 4063  * @brief   Initialize the NV Scene Table Items
// 4064  *
// 4065  * @param   none
// 4066  *
// 4067  * @return  number of scenes
// 4068  */
// 4069 static uint8 zclGeneral_ScenesInitNV( void )
// 4070 {
// 4071   uint8  status;
// 4072   uint16 size;
// 4073 
// 4074   size = (uint16)((sizeof ( nvGenScenesHdr_t ))
// 4075                   + ( sizeof( zclGenSceneNVItem_t ) * ZCL_GEN_MAX_SCENES ));
// 4076 
// 4077   status = zcl_nv_item_init( ZCD_NV_SCENE_TABLE, size, NULL );
// 4078 
// 4079   if ( status != ZSUCCESS )
// 4080   {
// 4081     zclGeneral_ScenesSetDefaultNV();
// 4082   }
// 4083 
// 4084   return status;
// 4085 }
// 4086 #endif // ZCL_STANDALONE
// 4087 
// 4088 #if !defined ( ZCL_STANDALONE )
// 4089 /*********************************************************************
// 4090  * @fn          zclGeneral_ScenesSetDefaultNV
// 4091  *
// 4092  * @brief       Write the defaults to NV
// 4093  *
// 4094  * @param       none
// 4095  *
// 4096  * @return      none
// 4097  */
// 4098 static void zclGeneral_ScenesSetDefaultNV( void )
// 4099 {
// 4100   nvGenScenesHdr_t hdr;
// 4101 
// 4102   // Initialize the header
// 4103   hdr.numRecs = 0;
// 4104 
// 4105   // Save off the header
// 4106   zcl_nv_write( ZCD_NV_SCENE_TABLE, 0, sizeof( nvGenScenesHdr_t ), &hdr );
// 4107 }
// 4108 #endif // ZCL_STANDALONE
// 4109 
// 4110 #if !defined ( ZCL_STANDALONE )
// 4111 /*********************************************************************
// 4112  * @fn          zclGeneral_ScenesWriteNV
// 4113  *
// 4114  * @brief       Save the Scene Table in NV
// 4115  *
// 4116  * @param       none
// 4117  *
// 4118  * @return      none
// 4119  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 4120 static void zclGeneral_ScenesWriteNV( void )
zclGeneral_ScenesWriteNV:
          CFI Block cfiBlock961 Using cfiCommon0
          CFI Function zclGeneral_ScenesWriteNV
        CODE
// 4121 {
        FUNCALL zclGeneral_ScenesWriteNV, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesWriteNV, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 73, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesWriteNV, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 73, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 58
        MOV     A,#-0x3a
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4122   nvGenScenesHdr_t hdr;
// 4123   zclGenSceneItem_t *pLoop;
// 4124   zclGenSceneNVItem_t item;
// 4125 
// 4126   hdr.numRecs = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 4127 
// 4128   // Look for end of list
// 4129   pLoop = zclGenSceneTable;
        MOV     DPTR,#zclGenSceneTable
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        LJMP    ??zclGeneral_ScenesWriteNV_0 & 0xFFFF
// 4130   while ( pLoop )
// 4131   {
// 4132     // Build the record
// 4133     item.endpoint = pLoop->endpoint;
??zclGeneral_ScenesWriteNV_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine65 & 0xFFFF
// 4134     zcl_memcpy( &(item.scene), &(pLoop->scene), sizeof ( zclGeneral_Scene_t ) );
??CrossCallReturnLabel_106:
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R2
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 72)
        MOV     R4,#0x37
        MOV     R5,#0x0
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4135 
// 4136     // Save the record to NV
// 4137     zcl_nv_write( ZCD_NV_SCENE_TABLE,
// 4138             (uint16)((sizeof( nvGenScenesHdr_t )) + (hdr.numRecs * sizeof ( zclGenSceneNVItem_t ))),
// 4139                     sizeof ( zclGenSceneNVItem_t ), &item );
        ; Setup parameters for call to function osal_nv_write
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 71)
        MOV     ?V0 + 0,#0x38
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 73)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_63:
        MOV     B,#0x38
        MUL     AB
        MOV     R0,A
        MOV     R2,B
        MOV     B,#0x38
        MOV     A,R1
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_112:
        LCALL   ??osal_nv_write?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4140 
// 4141     hdr.numRecs++;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOVX    @DPTR,A
// 4142 
// 4143     pLoop = pLoop->next;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine46 & 0xFFFF
// 4144   }
??CrossCallReturnLabel_64:
        MOV     R6,A
        MOV     A,R1
??zclGeneral_ScenesWriteNV_0:
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JZ      $+5
        LJMP    ??zclGeneral_ScenesWriteNV_1 & 0xFFFF
// 4145 
// 4146   // Save off the header
// 4147   zcl_nv_write( ZCD_NV_SCENE_TABLE, 0, sizeof( nvGenScenesHdr_t ), &hdr );
        ; Setup parameters for call to function osal_nv_write
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 71)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 73)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        LCALL   ??osal_nv_write?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4148 }
        MOV     A,#0x3a
        LJMP    ??Subroutine107_0 & 0xFFFF
          CFI EndBlock cfiBlock961
// 4149 #endif // ZCL_STANDALONE
// 4150 
// 4151 #if !defined ( ZCL_STANDALONE )
// 4152 /*********************************************************************
// 4153  * @fn          zclGeneral_ScenesRestoreFromNV
// 4154  *
// 4155  * @brief       Restore the Scene table from NV
// 4156  *
// 4157  * @param       none
// 4158  *
// 4159  * @return      Number of entries restored
// 4160  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 4161 static uint16 zclGeneral_ScenesRestoreFromNV( void )
zclGeneral_ScenesRestoreFromNV:
          CFI Block cfiBlock962 Using cfiCommon0
          CFI Function zclGeneral_ScenesRestoreFromNV
        CODE
// 4162 {
        FUNCALL zclGeneral_ScenesRestoreFromNV, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 74, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 74, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesRestoreFromNV, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 74, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 74, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesRestoreFromNV, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 70, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 70, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 58
        MOV     A,#-0x3a
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 70)
// 4163   uint16 x;
// 4164   nvGenScenesHdr_t hdr;
// 4165 
// 4166   zclGenSceneNVItem_t item;
// 4167   uint16 numAdded = 0;
        MOV     R6,#0x0
        MOV     R7,#0x0
// 4168 
// 4169   if ( zcl_nv_read( ZCD_NV_SCENE_TABLE, 0, sizeof(nvGenScenesHdr_t), &hdr ) == ZSuccess )
        ; Setup parameters for call to function osal_nv_read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,R6
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 74)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        LCALL   ??osal_nv_read?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 70)
        MOV     A,R1
        JNZ     ??zclGeneral_ScenesRestoreFromNV_0
// 4170   {
// 4171     // Read in the device list
// 4172     for ( x = 0; x < hdr.numRecs; x++ )
        MOV     ?V0 + 0,R6
        SJMP    ??zclGeneral_ScenesRestoreFromNV_1
// 4173     {
// 4174       if ( zcl_nv_read( ZCD_NV_SCENE_TABLE,
// 4175                 (uint16)(sizeof(nvGenScenesHdr_t) + (x * sizeof ( zclGenSceneNVItem_t ))),
// 4176                                   sizeof ( zclGenSceneNVItem_t ), &item ) == ZSUCCESS )
??zclGeneral_ScenesRestoreFromNV_2:
        ; Setup parameters for call to function osal_nv_read
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV     ?V0 + 2,#0x38
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 74)
        MOV     A,?V0 + 0
        MOV     B,#0x38
        MUL     AB
        MOV     R0,A
        MOV     R2,B
        MOV     B,#0x38
        MOV     A,?V0 + 1
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_113:
        LCALL   ??osal_nv_read?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 70)
        MOV     A,R1
        JNZ     ??zclGeneral_ScenesRestoreFromNV_3
// 4177       {
// 4178         // Add the scene
// 4179         if ( zclGeneral_AddScene( item.endpoint, &(item.scene) ) == ZSuccess )
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??zclGeneral_AddScene?relay
        MOV     A,R1
        JNZ     ??zclGeneral_ScenesRestoreFromNV_3
// 4180         {
// 4181           numAdded++;
        MOV     A,R6
        ADD     A,#0x1
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 4182         }
// 4183       }
// 4184     }
??zclGeneral_ScenesRestoreFromNV_3:
        MOV     A,?V0 + 0
        ADD     A,#0x1
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
??zclGeneral_ScenesRestoreFromNV_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine48 & 0xFFFF
// 4185   }
??CrossCallReturnLabel_77:
        CLR     C
        MOV     A,?V0 + 0
        SUBB    A,R0
        MOV     A,?V0 + 1
        SUBB    A,R1
        JC      ??zclGeneral_ScenesRestoreFromNV_2
// 4186 
// 4187   return ( numAdded );
??zclGeneral_ScenesRestoreFromNV_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,#0x3a
        LJMP    ??Subroutine108_0 & 0xFFFF
          CFI EndBlock cfiBlock962
// 4188 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond963 Using cfiCommon0
          CFI Function zclGeneral_ScenesWriteNV
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond964 Using cfiCommon0
          CFI (cfiCond964) Function zclGeneral_ScenesRestoreFromNV
          CFI (cfiCond964) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond964) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond964) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond964) CFA_SP SP+0
          CFI (cfiCond964) CFA_XSP16 add(XSP16, 74)
          CFI Block cfiPicker965 Using cfiCommon1
          CFI (cfiPicker965) NoFunction
          CFI (cfiPicker965) Picker
        MUL     AB
        ADD     A,R2
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R5,A
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        RET
          CFI EndBlock cfiCond963
          CFI EndBlock cfiCond964
          CFI EndBlock cfiPicker965
// 4189 #endif // ZCL_STANDALONE
// 4190 
// 4191 #if !defined ( ZCL_STANDALONE )
// 4192 /*********************************************************************
// 4193  * @fn          zclGeneral_ScenesInit
// 4194  *
// 4195  * @brief       Initialize the scenes table
// 4196  *
// 4197  * @param       none
// 4198  *
// 4199  * @return      none
// 4200  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 4201 void zclGeneral_ScenesInit( void )
zclGeneral_ScenesInit:
          CFI Block cfiBlock966 Using cfiCommon0
          CFI Function zclGeneral_ScenesInit
        CODE
// 4202 {
        FUNCALL zclGeneral_ScenesInit, osal_nv_item_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, zclGeneral_ScenesRestoreFromNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 4203   // Initialize NV items
// 4204   zclGeneral_ScenesInitNV();
        ; Setup parameters for call to function osal_nv_item_init
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#-0x7e
        MOV     R5,#0x3
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        LCALL   ??osal_nv_item_init?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        JZ      ??zclGeneral_ScenesInit_0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x6f
        MOV     R3,#0x0
        LCALL   ??osal_nv_write?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 4205 
// 4206   // Restore the Scene table
// 4207   zclGeneral_ScenesRestoreFromNV();
??zclGeneral_ScenesInit_0:
        ; Setup parameters for call to function zclGeneral_ScenesRestoreFromNV
        LCALL   ??zclGeneral_ScenesRestoreFromNV?relay
// 4208 }
        LJMP    ??Subroutine135_0 & 0xFFFF
          CFI EndBlock cfiBlock966
// 4209 #endif // ZCL_STANDALONE
// 4210 
// 4211 #if !defined ( ZCL_STANDALONE )
// 4212 /*********************************************************************
// 4213  * @fn          zclGeneral_ScenesSave
// 4214  *
// 4215  * @brief       Save the scenes table
// 4216  *
// 4217  * @param       none
// 4218  *
// 4219  * @return      none
// 4220  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 4221 void zclGeneral_ScenesSave( void )
zclGeneral_ScenesSave:
          CFI Block cfiBlock967 Using cfiCommon0
          CFI Function zclGeneral_ScenesSave
        CODE
// 4222 {
        FUNCALL zclGeneral_ScenesSave, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 4223   // Update NV
// 4224   zclGeneral_ScenesWriteNV();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL   ??zclGeneral_ScenesWriteNV?relay
// 4225 }
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock967

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_RegisterCmdCallbacks?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RegisterCmdCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentify?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentifyEZModeInvoke?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyEZModeInvoke

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentifyUpdateCommState?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyUpdateCommState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentifyTriggerEffect?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyTriggerEffect

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendIdentifyQueryResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyQueryResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendGroupRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendAddGroupRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendAddGroupRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendGroupGetMembershipRequest?rela:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupGetMembershipRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendGroupResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendGroupViewResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupViewResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendAddSceneRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendAddSceneRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneViewRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneViewRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneGetMembershipResponse?rel:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneGetMembershipResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneCopy?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneCopy

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendSceneCopyResponse?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneCopyResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendOnOff_CmdOffWithEffect?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendOnOff_CmdOffWithEffect

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendOnOff_CmdOnWithTimedOff?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendOnOff_CmdOnWithTimedOff

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlMoveToLevelRequest:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlMoveToLevelRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlMoveRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlMoveRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlStepRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlStepRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlStopRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlStopRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_FindCallbacks?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_HdlIncoming?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_HdlIncoming

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_HdlInSpecificCommands?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_HdlInSpecificCommands

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInIdentity?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInIdentity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_AddGroup?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_AddGroup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInGroupsServer?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInGroupsServer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInGroupsClient?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInGroupsClient

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_AddScene?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_AddScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_FindScene?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_FindAllScenesForGroup?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindAllScenesForGroup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_RemoveScene?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RemoveScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_RemoveAllScenes?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RemoveAllScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_CountScenes?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_CountScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_CountAllScenes?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_CountAllScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ReadSceneCountCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ReadSceneCountCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInScenesServer?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInScenesServer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInScenesClient?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInScenesClient

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInOnOff?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInOnOff

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ProcessInLevelControl?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInLevelControl

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ScenesWriteNV?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesWriteNV

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ScenesRestoreFromNV?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesRestoreFromNV

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ScenesInit?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_ScenesSave?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesSave

        END
// 4226 #endif // ZCL_STANDALONE
// 4227 
// 4228 #endif // ZCL_SCENES
// 4229 
// 4230 /***************************************************************************
// 4231 ****************************************************************************/
// 
// 11 813 bytes in segment BANKED_CODE
//    282 bytes in segment BANK_RELAYS
//      5 bytes in segment XDATA_Z
// 
// 12 095 bytes of CODE  memory
//      5 bytes of XDATA memory
//
//Errors: none
//Warnings: none
