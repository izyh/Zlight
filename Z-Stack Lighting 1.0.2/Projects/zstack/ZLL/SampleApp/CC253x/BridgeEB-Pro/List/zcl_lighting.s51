///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            29/May/2014  14:49:49 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\Texas Instruments\Z-Stack Lighting             /
//                          1.0.2\Components\stack\zcl\zcl_lighting.c         /
//    Command line       =  -f "D:\Texas Instruments\Z-Stack Lighting         /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wRouter.cfg" (-DCPU32MHZ      /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f "D:\Texas        /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO     /
//                          -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f "D:\Texas              /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wZCL.cfg" "D:\Texas           /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Components\stack\zcl\zcl_lighting.c" -D     /
//                          FEATURE_GREEN_POWER -D SECURE=1 -D                /
//                          TC_LINKKEY_JOIN -D ZDSECMGR_TC_DEVICE_MAX=2 -D    /
//                          NV_RESTORE -D HOLD_AUTO_START -D INTER_PAN -D     /
//                          ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D             /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D MT_ZDO_CB_FUNC -D   /
//                          MT_UTIL_FUNC -D MT_ZDO_MGMT -D LCD_SUPPORTED -D   /
//                          HAL_LCD=FALSE -D HAL_KEY=FALSE -D ZCL_BASIC -D    /
//                          ZCL_READ -D ZCL_WRITE -D ZCL_IDENTIFY -D          /
//                          ZCL_ON_OFF -D ZCL_SCENES -D ZCL_GROUPS -D         /
//                          ZCL_LIGHT_LINK_ENHANCE -D ZCL_LEVEL_CTRL -D       /
//                          ZCL_COLOR_CTRL -D xMAX_CHANNELS_24GHZ=0x02108800  /
//                          -lC "D:\Texas Instruments\Z-Stack Lighting        /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Bridge /
//                          EB-Pro\List\" -lA "D:\Texas Instruments\Z-Stack   /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\BridgeEB-Pro\List\" --diag_suppress            /
//                          Pe001,Pa010 -o "D:\Texas Instruments\Z-Stack      /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\BridgeEB-Pro\Obj\" -e --debug --core=plain     /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I "D:\Texas                 /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\" -I   /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\Sou /
//                          rce\" -I "D:\Texas Instruments\Z-Stack Lighting   /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          Source\" -I "D:\Texas Instruments\Z-Stack         /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\..\..\..\HomeAutomation\Source\" -I "D:\Texas  /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\HomeAutomation\SampleLight\Source\" -I         /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\ZMain\TI2530DB\" -I "D:\Texas                  /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\hal\include\" -I "D:\Texas    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\hal\target\CC2530EB\" -I      /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\include\" -I "D:\Texas    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\high_level\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\" -I      /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\single_ch /
//                          ip\" -I "D:\Texas Instruments\Z-Stack Lighting    /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mt\" -I "D:\Texas             /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\osal\include\" -I "D:\Texas   /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\services\saddr\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\services\sdata\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\af\" -I "D:\Texas       /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\nwk\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sapi\" -I "D:\Texas     /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sec\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sys\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\zcl\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\zdo\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\zmac\" -I "D:\Texas           /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\zmac\f8w\" -Ohz               /
//                          --require_prototypes                              /
//    List file          =  D:\Texas Instruments\Z-Stack Lighting             /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Bridge /
//                          EB-Pro\List\zcl_lighting.s51                      /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_lighting

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?SS_SHR
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??zclLighting_ColorControl_Send_ColorLoopSetCmd
        FUNCTION ??zclLighting_ColorControl_Send_ColorLoopSetCmd,0203H
        PUBLIC ??zclLighting_ColorControl_Send_EnhancedMoveHue
        FUNCTION ??zclLighting_ColorControl_Send_EnhancedMoveHue,0203H
        PUBLIC ??zclLighting_ColorControl_Send_EnhancedMoveToH
        FUNCTION ??zclLighting_ColorControl_Send_EnhancedMoveToH,0203H
        PUBLIC ??zclLighting_ColorControl_Send_EnhancedMoveToH_1
        FUNCTION ??zclLighting_ColorControl_Send_EnhancedMoveToH_1,0203H
        PUBLIC ??zclLighting_ColorControl_Send_EnhancedStepHue
        FUNCTION ??zclLighting_ColorControl_Send_EnhancedStepHue,0203H
        PUBLIC ??zclLighting_ColorControl_Send_MoveColorCmd?re
        FUNCTION ??zclLighting_ColorControl_Send_MoveColorCmd?re,0203H
        PUBLIC ??zclLighting_ColorControl_Send_MoveHueCmd?rela
        FUNCTION ??zclLighting_ColorControl_Send_MoveHueCmd?rela,0203H
        PUBLIC ??zclLighting_ColorControl_Send_MoveSaturationC
        FUNCTION ??zclLighting_ColorControl_Send_MoveSaturationC,0203H
        PUBLIC ??zclLighting_ColorControl_Send_MoveToColorCmd?
        FUNCTION ??zclLighting_ColorControl_Send_MoveToColorCmd?,0203H
        PUBLIC ??zclLighting_ColorControl_Send_MoveToColorTemp
        FUNCTION ??zclLighting_ColorControl_Send_MoveToColorTemp,0203H
        PUBLIC ??zclLighting_ColorControl_Send_MoveToHueAndSat
        FUNCTION ??zclLighting_ColorControl_Send_MoveToHueAndSat,0203H
        PUBLIC ??zclLighting_ColorControl_Send_MoveToHueCmd?re
        FUNCTION ??zclLighting_ColorControl_Send_MoveToHueCmd?re,0203H
        PUBLIC ??zclLighting_ColorControl_Send_MoveToSaturatio
        FUNCTION ??zclLighting_ColorControl_Send_MoveToSaturatio,0203H
        PUBLIC ??zclLighting_ColorControl_Send_StepColorCmd?re
        FUNCTION ??zclLighting_ColorControl_Send_StepColorCmd?re,0203H
        PUBLIC ??zclLighting_ColorControl_Send_StepHueCmd?rela
        FUNCTION ??zclLighting_ColorControl_Send_StepHueCmd?rela,0203H
        PUBLIC ??zclLighting_ColorControl_Send_StepSaturationC
        FUNCTION ??zclLighting_ColorControl_Send_StepSaturationC,0203H
        FUNCTION ??zclLighting_FindCallbacks?relay,0203H
        FUNCTION ??zclLighting_HdlIncoming?relay,0203H
        FUNCTION ??zclLighting_ProcessInCmd_ColorControl_ColorLo,0203H
        FUNCTION ??zclLighting_ProcessInCmd_ColorControl_MoveToC,0203H
        FUNCTION ??zclLighting_ProcessInColorControlCmds?relay,0203H
        FUNCTION ??zclLighting_ProcessInManuBallastConfigCmds?re,0203H
        PUBLIC ??zclLighting_RegisterCmdCallbacks?relay
        FUNCTION ??zclLighting_RegisterCmdCallbacks?relay,0203H
        PUBWEAK P0DIR
        PUBWEAK _A_P0
        PUBLIC zclLighting_ColorControl_Send_ColorLoopSetCmd
        FUNCTION zclLighting_ColorControl_Send_ColorLoopSetCmd,021203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC zclLighting_ColorControl_Send_EnhancedMoveHueCmd
        FUNCTION zclLighting_ColorControl_Send_EnhancedMoveHueCmd,021203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
        FUNCTION zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
        FUNCTION zclLighting_ColorControl_Send_EnhancedMoveToHueCmd,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclLighting_ColorControl_Send_EnhancedStepHueCmd
        FUNCTION zclLighting_ColorControl_Send_EnhancedStepHueCmd,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC zclLighting_ColorControl_Send_MoveColorCmd
        FUNCTION zclLighting_ColorControl_Send_MoveColorCmd,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclLighting_ColorControl_Send_MoveHueCmd
        FUNCTION zclLighting_ColorControl_Send_MoveHueCmd,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclLighting_ColorControl_Send_MoveSaturationCmd
        FUNCTION zclLighting_ColorControl_Send_MoveSaturationCmd,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclLighting_ColorControl_Send_MoveToColorCmd
        FUNCTION zclLighting_ColorControl_Send_MoveToColorCmd,021203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
        FUNCTION zclLighting_ColorControl_Send_MoveToColorTemperatureCmd,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
        FUNCTION zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclLighting_ColorControl_Send_MoveToHueCmd
        FUNCTION zclLighting_ColorControl_Send_MoveToHueCmd,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclLighting_ColorControl_Send_MoveToSaturationCmd
        FUNCTION zclLighting_ColorControl_Send_MoveToSaturationCmd,021203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclLighting_ColorControl_Send_StepColorCmd
        FUNCTION zclLighting_ColorControl_Send_StepColorCmd,021203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclLighting_ColorControl_Send_StepHueCmd
        FUNCTION zclLighting_ColorControl_Send_StepHueCmd,021203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclLighting_ColorControl_Send_StepSaturationCmd
        FUNCTION zclLighting_ColorControl_Send_StepSaturationCmd,021203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        FUNCTION zclLighting_FindCallbacks,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclLighting_HdlIncoming,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        FUNCTION zclLighting_ProcessInCmd_ColorControl_ColorLoopSet,0203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 17, STACK
        FUNCTION zclLighting_ProcessInCmd_ColorControl_MoveToColor,0203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 15, STACK
        FUNCTION zclLighting_ProcessInColorControlCmds,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        FUNCTION zclLighting_ProcessInManuBallastConfigCmds,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclLighting_RegisterCmdCallbacks
        FUNCTION zclLighting_RegisterCmdCallbacks,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
StubAPS_InterPan    SYMBOL "StubAPS_InterPan"
??StubAPS_InterPan?relay SYMBOL "?relay", StubAPS_InterPan
osal_mem_alloc      SYMBOL "osal_mem_alloc"
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
zcl_SendCommand     SYMBOL "zcl_SendCommand"
??zcl_SendCommand?relay SYMBOL "?relay", zcl_SendCommand
zcl_registerPlugin  SYMBOL "zcl_registerPlugin"
??zcl_registerPlugin?relay SYMBOL "?relay", zcl_registerPlugin
zclLighting_ColorControl_Send_ColorLoopSetCmd SYMBOL "zclLighting_ColorControl_Send_ColorLoopSetCmd"
??zclLighting_ColorControl_Send_ColorLoopSetCmd SYMBOL "?relay", zclLighting_ColorControl_Send_ColorLoopSetCmd
zclLighting_ColorControl_Send_EnhancedMoveHueCmd SYMBOL "zclLighting_ColorControl_Send_EnhancedMoveHueCmd"
??zclLighting_ColorControl_Send_EnhancedMoveHue SYMBOL "?relay", zclLighting_ColorControl_Send_EnhancedMoveHueCmd
zclLighting_ColorControl_Send_EnhancedMoveToHueCmd SYMBOL "zclLighting_ColorControl_Send_EnhancedMoveToHueCmd"
??zclLighting_ColorControl_Send_EnhancedMoveToH SYMBOL "?relay", zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd SYMBOL "zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd"
??zclLighting_ColorControl_Send_EnhancedMoveToH_1 SYMBOL "?relay", zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
zclLighting_ColorControl_Send_EnhancedStepHueCmd SYMBOL "zclLighting_ColorControl_Send_EnhancedStepHueCmd"
??zclLighting_ColorControl_Send_EnhancedStepHue SYMBOL "?relay", zclLighting_ColorControl_Send_EnhancedStepHueCmd
zclLighting_ColorControl_Send_MoveColorCmd SYMBOL "zclLighting_ColorControl_Send_MoveColorCmd"
??zclLighting_ColorControl_Send_MoveColorCmd?re SYMBOL "?relay", zclLighting_ColorControl_Send_MoveColorCmd
zclLighting_ColorControl_Send_MoveHueCmd SYMBOL "zclLighting_ColorControl_Send_MoveHueCmd"
??zclLighting_ColorControl_Send_MoveHueCmd?rela SYMBOL "?relay", zclLighting_ColorControl_Send_MoveHueCmd
zclLighting_ColorControl_Send_MoveSaturationCmd SYMBOL "zclLighting_ColorControl_Send_MoveSaturationCmd"
??zclLighting_ColorControl_Send_MoveSaturationC SYMBOL "?relay", zclLighting_ColorControl_Send_MoveSaturationCmd
zclLighting_ColorControl_Send_MoveToColorCmd SYMBOL "zclLighting_ColorControl_Send_MoveToColorCmd"
??zclLighting_ColorControl_Send_MoveToColorCmd? SYMBOL "?relay", zclLighting_ColorControl_Send_MoveToColorCmd
zclLighting_ColorControl_Send_MoveToColorTemperatureCmd SYMBOL "zclLighting_ColorControl_Send_MoveToColorTemperatureCmd"
??zclLighting_ColorControl_Send_MoveToColorTemp SYMBOL "?relay", zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd SYMBOL "zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd"
??zclLighting_ColorControl_Send_MoveToHueAndSat SYMBOL "?relay", zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
zclLighting_ColorControl_Send_MoveToHueCmd SYMBOL "zclLighting_ColorControl_Send_MoveToHueCmd"
??zclLighting_ColorControl_Send_MoveToHueCmd?re SYMBOL "?relay", zclLighting_ColorControl_Send_MoveToHueCmd
zclLighting_ColorControl_Send_MoveToSaturationCmd SYMBOL "zclLighting_ColorControl_Send_MoveToSaturationCmd"
??zclLighting_ColorControl_Send_MoveToSaturatio SYMBOL "?relay", zclLighting_ColorControl_Send_MoveToSaturationCmd
zclLighting_ColorControl_Send_StepColorCmd SYMBOL "zclLighting_ColorControl_Send_StepColorCmd"
??zclLighting_ColorControl_Send_StepColorCmd?re SYMBOL "?relay", zclLighting_ColorControl_Send_StepColorCmd
zclLighting_ColorControl_Send_StepHueCmd SYMBOL "zclLighting_ColorControl_Send_StepHueCmd"
??zclLighting_ColorControl_Send_StepHueCmd?rela SYMBOL "?relay", zclLighting_ColorControl_Send_StepHueCmd
zclLighting_ColorControl_Send_StepSaturationCmd SYMBOL "zclLighting_ColorControl_Send_StepSaturationCmd"
??zclLighting_ColorControl_Send_StepSaturationC SYMBOL "?relay", zclLighting_ColorControl_Send_StepSaturationCmd
zclLighting_RegisterCmdCallbacks SYMBOL "zclLighting_RegisterCmdCallbacks"
??zclLighting_RegisterCmdCallbacks?relay SYMBOL "?relay", zclLighting_RegisterCmdCallbacks

        EXTERN ??StubAPS_InterPan?relay
        FUNCTION ??StubAPS_InterPan?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??zcl_SendCommand?relay
        FUNCTION ??zcl_SendCommand?relay,00H
        EXTERN ??zcl_registerPlugin?relay
        FUNCTION ??zcl_registerPlugin?relay,00H
        EXTERN StubAPS_InterPan
        FUNCTION StubAPS_InterPan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dalishortaddr
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendCommand
        FUNCTION zcl_SendCommand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerPlugin
        FUNCTION zcl_registerPlugin,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\Texas Instruments\Z-Stack Lighting 1.0.2\Components\stack\zcl\zcl_lighting.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_lighting.c
//    3   Revised:        $Date: 2013-07-03 15:56:37 -0700 (Wed, 03 Jul 2013) $
//    4   Revision:       $Revision: 34689 $
//    5 
//    6   Description:    Zigbee Cluster Library -  Lighting
//    7 
//    8 
//    9   Copyright 2006-2013 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "zcl.h"
//   44 #include "zcl_general.h"
//   45 #include "zcl_lighting.h"
//   46 
//   47 #if defined ( INTER_PAN )
//   48   #include "stub_aps.h"
//   49 #endif
//   50 
//   51 #include "dali_thread.h"
//   52 #include "hal_uart.h"

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1
//   53 #include "MT_UART.h"
//   54 
//   55 #include "onboard.h"
//   56 
//   57 /*********************************************************************
//   58  * MACROS
//   59  */
//   60 
//   61 /*********************************************************************
//   62  * CONSTANTS
//   63  */
//   64 
//   65 /*********************************************************************
//   66  * TYPEDEFS
//   67  */
//   68 typedef struct zclLightingCBRec
//   69 {
//   70   struct zclLightingCBRec     *next;
//   71   uint8                       endpoint; // Used to link it into the endpoint descriptor
//   72   zclLighting_AppCallbacks_t  *CBs;     // Pointer to Callback function
//   73 } zclLightingCBRec_t;
//   74 
//   75 /*********************************************************************
//   76  * GLOBAL VARIABLES
//   77  */
//   78 
//   79 /*********************************************************************
//   80  * GLOBAL FUNCTIONS
//   81  */
//   82 
//   83 /*********************************************************************
//   84  * LOCAL VARIABLES
//   85  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   86 static zclLightingCBRec_t *zclLightingCBs = (zclLightingCBRec_t *)NULL;
zclLightingCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   87 static uint8 zclLightingPluginRegisted = FALSE;
zclLightingPluginRegisted:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   88 
//   89 //uint16 dali_cmd;
//   90 //uint8 dalishortaddr ,dali_answer ,dali_answer_state;//define my own variables
//   91 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   92 static uint8 flag;
flag:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   93 
//   94 /*********************************************************************
//   95  * LOCAL FUNCTIONS
//   96  */
//   97 static ZStatus_t zclLighting_HdlIncoming( zclIncoming_t *pInHdlrMsg );
//   98 static ZStatus_t zclLighting_HdlInSpecificCommands( zclIncoming_t *pInMsg );
//   99 static ZStatus_t zclLighting_HdlInManuSpecCommands( zclIncoming_t *pInMsg );//define my own function
//  100 static zclLighting_AppCallbacks_t *zclLighting_FindCallbacks( uint8 endpoint );
//  101 
//  102 static ZStatus_t zclLighting_ProcessInColorControlCmds( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  103 static ZStatus_t zclLighting_ProcessInManuBallastConfigCmds( zclIncoming_t *pInMsg,zclLighting_AppCallbacks_t *pCBs );  //define my own function
//  104 
//  105 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToHue( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  106 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveHue( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  107 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_StepHue( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  108 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToSaturation( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  109 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveSaturation( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  110 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_StepSaturation( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  111 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToHueAndSaturation( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  112 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToColor( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  113 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveColor( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  114 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_StepColor( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  115 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToColorTemperature( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  116 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  117 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_EnhancedMoveToHue( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  118 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_EnhancedMoveHue( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  119 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_EnhancedStepHue( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  120 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_EnhancedMoveToHueAndSaturation( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  121 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_ColorLoopSet( zclIncoming_t *pInMsg, zclLighting_AppCallbacks_t *pCBs );
//  122 #endif // ZCL_LIGHT_LINK_ENHANCE
//  123 
//  124 /*********************************************************************
//  125  * @fn      zclLighting_RegisterCmdCallbacks
//  126  *
//  127  * @brief   Register an applications command callbacks
//  128  *
//  129  * @param   endpoint - application's endpoint
//  130  * @param   callbacks - pointer to the callback record.
//  131  *
//  132  * @return  ZMemError if not able to allocate
//  133  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  134 ZStatus_t zclLighting_RegisterCmdCallbacks( uint8 endpoint, zclLighting_AppCallbacks_t *callbacks )
zclLighting_RegisterCmdCallbacks:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclLighting_RegisterCmdCallbacks
        CODE
//  135 {
        FUNCALL zclLighting_RegisterCmdCallbacks, zcl_registerPlugin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclLighting_RegisterCmdCallbacks, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R1
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  136   zclLightingCBRec_t *pNewItem;
//  137   zclLightingCBRec_t *pLoop;
//  138 
//  139   // Register as a ZCL Plugin
//  140   if ( zclLightingPluginRegisted == FALSE )
        MOV     DPTR,#zclLightingPluginRegisted
        MOVX    A,@DPTR
        JNZ     ??zclLighting_RegisterCmdCallbacks_0
//  141   {
//  142     zcl_registerPlugin( ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  143                         ZCL_CLUSTER_ID_LIGHTING_BALLAST_CONFIG,
//  144                         zclLighting_HdlIncoming );
        ; Setup parameters for call to function zcl_registerPlugin
        MOV     ?V0 + 2,#??zclLighting_HdlIncoming?relay & 0xff
        MOV     ?V0 + 3,#(??zclLighting_HdlIncoming?relay >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#0x1
        MOV     R5,#0x3
        MOV     R2,#0x0
        MOV     R3,#0x3
        LCALL   ??zcl_registerPlugin?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  145     zclLightingPluginRegisted = TRUE;
        MOV     DPTR,#zclLightingPluginRegisted
        MOV     A,#0x1
        MOVX    @DPTR,A
//  146   }
//  147 
//  148   // Fill in the new profile list
//  149   pNewItem = zcl_mem_alloc( sizeof( zclLightingCBRec_t ) );
??zclLighting_RegisterCmdCallbacks_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,?V0 + 2
        MOV     R1,?V0 + 3
//  150   if ( pNewItem == NULL )
        MOV     A,R0
        ORL     A,R1
        JNZ     ??zclLighting_RegisterCmdCallbacks_1
//  151     return (ZMemError);
        MOV     R1,#0x10
        SJMP    ??zclLighting_RegisterCmdCallbacks_2
//  152 
//  153   pNewItem->next = (zclLightingCBRec_t *)NULL;
??zclLighting_RegisterCmdCallbacks_1:
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine60 & 0xFFFF
//  154   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_162:
        MOV     A,?V0 + 0
        LCALL   ?Subroutine45 & 0xFFFF
//  155   pNewItem->CBs = callbacks;
??CrossCallReturnLabel_79:
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  156 
//  157   // Find spot in list
//  158   if ( zclLightingCBs == NULL )
        MOV     DPTR,#zclLightingCBs
        LCALL   ??Subroutine74_0 & 0xFFFF
??CrossCallReturnLabel_138:
        MOV     DPTR,#zclLightingCBs
        JZ      ??zclLighting_RegisterCmdCallbacks_3
//  159   {
//  160     zclLightingCBs = pNewItem;
//  161   }
//  162   else
//  163   {
//  164     // Look for end of list
//  165     pLoop = zclLightingCBs;
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??zclLighting_RegisterCmdCallbacks_4
//  166     while ( pLoop->next != NULL )
//  167       pLoop = pLoop->next;
??zclLighting_RegisterCmdCallbacks_5:
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
??zclLighting_RegisterCmdCallbacks_4:
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine74_0 & 0xFFFF
??CrossCallReturnLabel_139:
        JNZ     ??zclLighting_RegisterCmdCallbacks_5
//  168 
//  169     // Put new item at end of list
//  170     pLoop->next = pNewItem;
        MOV     DPL,R4
        MOV     DPH,R5
//  171   }
??zclLighting_RegisterCmdCallbacks_3:
        LCALL   ?Subroutine62 & 0xFFFF
//  172 
//  173   return ( ZSuccess );
??CrossCallReturnLabel_103:
        MOV     R1,#0x0
??zclLighting_RegisterCmdCallbacks_2:
        LJMP    ??Subroutine73_0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  174 }
//  175 
//  176 /*********************************************************************
//  177  * @fn      zclLighting_ColorControl_Send_MoveToHueCmd
//  178  *
//  179  * @brief   Call to send out a Move To Hue Command
//  180  *
//  181  * @param   srcEP - Sending application's endpoint
//  182  * @param   dstAddr - where you want the message to go
//  183  * @param   hue - target hue value
//  184  * @param   direction - direction of hue change
//  185  * @param   transitionTime - tame taken to move to the target hue in 1/10 sec increments
//  186  * @param   disableDefaultRsp - whether to disable the Default Response command
//  187  * @param   seqNum - sequence number
//  188  *
//  189  * @return  ZStatus_t
//  190  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  191 ZStatus_t zclLighting_ColorControl_Send_MoveToHueCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_MoveToHueCmd:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToHueCmd
        CODE
//  192                                                       uint8 hue, uint8 direction, uint16 transitionTime,
//  193                                                       uint8 disableDefaultRsp, uint8 seqNum )
//  194 {
        FUNCALL zclLighting_ColorControl_Send_MoveToHueCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     ?V0 + 0,R5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
//  195   uint8 buf[4];
//  196 
//  197   buf[0] = hue;
//  198   buf[1] = direction;
??CrossCallReturnLabel_38:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
//  199   buf[2] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_26:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  200   buf[3] = HI_UINT16( transitionTime );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  201 
//  202   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  203                           COMMAND_LIGHTING_MOVE_TO_HUE, TRUE,
//  204                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 4, buf );
??CrossCallReturnLabel_113:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 1,#0x0
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1
//  205 }
//  206 
//  207 /*********************************************************************
//  208  * @fn      zclLighting_ColorControl_Send_MoveHueCmd
//  209  *
//  210  * @brief   Call to send out a Move To Hue Command
//  211  *
//  212  * @param   srcEP - Sending application's endpoint
//  213  * @param   dstAddr - where you want the message to go
//  214  * @param   moveMode - LIGHTING_MOVE_HUE_STOP, LIGHTING_MOVE_HUE_UP,
//  215  *                     LIGHTING_MOVE_HUE_DOWN
//  216  * @param   rate - the movement in steps per second, where step is
//  217  *                 a change in the device's hue of one unit
//  218  * @param   disableDefaultRsp - whether to disable the Default Response command
//  219  * @param   seqNum - sequence number
//  220  *
//  221  * @return  ZStatus_t
//  222  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  223 ZStatus_t zclLighting_ColorControl_Send_MoveHueCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_MoveHueCmd:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveHueCmd
        CODE
//  224                                                     uint8 moveMode, uint8 rate,
//  225                                                     uint8 disableDefaultRsp, uint8 seqNum )
//  226 {
        FUNCALL zclLighting_ColorControl_Send_MoveHueCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine7 & 0xFFFF
//  227   uint8 buf[2];
//  228 
//  229   buf[0] = moveMode;
//  230   buf[1] = rate;
??CrossCallReturnLabel_4:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        LCALL   ??Subroutine70_0 & 0xFFFF
//  231 
//  232   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  233                           COMMAND_LIGHTING_MOVE_HUE, TRUE,
//  234                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_130:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock2
//  235 }
//  236 
//  237 /*********************************************************************
//  238  * @fn      zclLighting_ColorControl_Send_StepHueCmd
//  239  *
//  240  * @brief   Call to send out a Step Hue Command
//  241  *
//  242  * @param   srcEP - Sending application's endpoint
//  243  * @param   dstAddr - where you want the message to go
//  244  * @param   stepMode -	LIGHTING_STEP_HUE_UP, LIGHTING_STEP_HUE_DOWN
//  245  * @param   stepSize -  change to the current value of the device's hue
//  246  * @param   transitionTime - the movement in steps per 1/10 second
//  247  * @param   disableDefaultRsp - whether to disable the Default Response command
//  248  * @param   seqNum - sequence number
//  249  *
//  250  * @return  ZStatus_t
//  251  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  252 ZStatus_t zclLighting_ColorControl_Send_StepHueCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_StepHueCmd:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_StepHueCmd
        CODE
//  253                                   uint8 stepMode, uint8 stepSize, uint8 transitionTime,
//  254                                   uint8 disableDefaultRsp, uint8 seqNum )
//  255 {
        FUNCALL zclLighting_ColorControl_Send_StepHueCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine7 & 0xFFFF
//  256   uint8 buf[3];
//  257 
//  258   buf[0] = stepMode;
//  259   buf[1] = stepSize;
??CrossCallReturnLabel_5:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
//  260   buf[2] = transitionTime;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine68_0 & 0xFFFF
//  261 
//  262   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  263                           COMMAND_LIGHTING_STEP_HUE, TRUE,
//  264                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_119:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 2,#0x3
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x2
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock3
//  265 }
//  266 
//  267 /*********************************************************************
//  268  * @fn      zclLighting_ColorControl_Send_MoveToSaturationCmd
//  269  *
//  270  * @brief   Call to send out a Move To Saturation Command
//  271  *
//  272  * @param   srcEP - Sending application's endpoint
//  273  * @param   dstAddr - where you want the message to go
//  274  * @param   saturation - target saturation value
//  275  * @param   transitionTime - time taken move to the target saturation,
//  276  *                           in 1/10 second units
//  277  * @param   disableDefaultRsp - whether to disable the Default Response command
//  278  * @param   seqNum - sequence number
//  279  *
//  280  * @return  ZStatus_t
//  281  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  282 ZStatus_t zclLighting_ColorControl_Send_MoveToSaturationCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_MoveToSaturationCmd:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToSaturationCmd
        CODE
//  283                                          uint8 saturation, uint16 transitionTime,
//  284                                          uint8 disableDefaultRsp, uint8 seqNum )
//  285 {
        FUNCALL zclLighting_ColorControl_Send_MoveToSaturationCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine22 & 0xFFFF
//  286   uint8 buf[3];
//  287 
//  288   buf[0] = saturation;
??CrossCallReturnLabel_36:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine25 & 0xFFFF
//  289   buf[1] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_42:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  290   buf[2] = HI_UINT16( transitionTime );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  291 
//  292   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  293                           COMMAND_LIGHTING_MOVE_TO_SATURATION, TRUE,
//  294                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_114:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 2,#0x3
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x3
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock4
//  295 }
//  296 
//  297 /*********************************************************************
//  298  * @fn      zclLighting_ColorControl_Send_MoveSaturationCmd
//  299  *
//  300  * @brief   Call to send out a Move Saturation Command
//  301  *
//  302  * @param   srcEP - Sending application's endpoint
//  303  * @param   dstAddr - where you want the message to go
//  304  * @param   moveMode - LIGHTING_MOVE_SATURATION_STOP, LIGHTING_MOVE_SATURATION_UP,
//  305  *                     LIGHTING_MOVE_SATURATION_DOWN
//  306  * @param   rate - rate of movement in step/sec; step is the device's saturation of one unit
//  307  * @param   disableDefaultRsp - whether to disable the Default Response command
//  308  * @param   seqNum - sequence number
//  309  *
//  310  * @return  ZStatus_t
//  311  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  312 ZStatus_t zclLighting_ColorControl_Send_MoveSaturationCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_MoveSaturationCmd:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveSaturationCmd
        CODE
//  313                                                            uint8 moveMode, uint8 rate,
//  314                                                            uint8 disableDefaultRsp, uint8 seqNum )
//  315 {
        FUNCALL zclLighting_ColorControl_Send_MoveSaturationCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine7 & 0xFFFF
//  316   uint8 buf[2];
//  317 
//  318   buf[0] = moveMode;
//  319   buf[1] = rate;
??CrossCallReturnLabel_6:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        LCALL   ??Subroutine70_0 & 0xFFFF
//  320 
//  321   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  322                           COMMAND_LIGHTING_MOVE_SATURATION, TRUE,
//  323                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_131:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#0x4
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock5

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiCond6 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveHueCmd
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function zclLighting_ColorControl_Send_StepHueCmd
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+0
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function zclLighting_ColorControl_Send_MoveSaturationCmd
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond8) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond8) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond8) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond8) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond8) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond8) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond8) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond8) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond8) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond8) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond8) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond8) CFA_SP SP+0
          CFI (cfiCond8) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond9 Using cfiCommon0
          CFI (cfiCond9) Function zclLighting_ColorControl_Send_StepSaturationCmd
          CFI (cfiCond9) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond9) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond9) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond9) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond9) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond9) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond9) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond9) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond9) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond9) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond9) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond9) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond9) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond9) CFA_SP SP+0
          CFI (cfiCond9) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker10 Using cfiCommon1
          CFI (cfiPicker10) NoFunction
          CFI (cfiPicker10) Picker
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_84:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiCond9
          CFI EndBlock cfiPicker10
//  324 }
//  325 
//  326 /*********************************************************************
//  327  * @fn      zclLighting_ColorControl_Send_StepSaturationCmd
//  328  *
//  329  * @brief   Call to send out a Step Saturation Command
//  330  *
//  331  * @param   srcEP - Sending application's endpoint
//  332  * @param   dstAddr - where you want the message to go
//  333  * @param   stepMode -  LIGHTING_STEP_SATURATION_UP, LIGHTING_STEP_SATURATION_DOWN
//  334  * @param   stepSize -  change to the current value of the device's hue
//  335  * @param   transitionTime - time to perform a single step in 1/10 of second
//  336  * @param   disableDefaultRsp - whether to disable the Default Response command
//  337  * @param   seqNum - sequence number
//  338  *
//  339  * @return  ZStatus_t
//  340  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  341 ZStatus_t zclLighting_ColorControl_Send_StepSaturationCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_StepSaturationCmd:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_StepSaturationCmd
        CODE
//  342                                          uint8 stepMode, uint8 stepSize, uint8 transitionTime,
//  343                                          uint8 disableDefaultRsp, uint8 seqNum )
//  344 {
        FUNCALL zclLighting_ColorControl_Send_StepSaturationCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine7 & 0xFFFF
//  345   uint8 buf[3];
//  346 
//  347   buf[0] = stepMode;
//  348   buf[1] = stepSize;
??CrossCallReturnLabel_7:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
//  349   buf[2] = transitionTime;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        LCALL   ??Subroutine68_0 & 0xFFFF
//  350 
//  351   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  352                           COMMAND_LIGHTING_STEP_SATURATION, TRUE,
//  353                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_120:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 2,#0x3
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x5
          CFI EndBlock cfiBlock11
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
//  354 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,#0x3
        LJMP    ??Subroutine72_0 & 0xFFFF
          CFI EndBlock cfiBlock12
//  355 
//  356 /*********************************************************************
//  357  * @fn      zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
//  358  *
//  359  * @brief   Call to send out a Move To Hue And Saturation Command
//  360  *
//  361  * @param   srcEP - Sending application's endpoint
//  362  * @param   dstAddr - where you want the message to go
//  363  * @param   hue - a target hue
//  364  * @param   saturation - a target saturation
//  365  * @param   transitionTime -  time to move, equal of the value of the field in 1/10 seconds
//  366  * @param   disableDefaultRsp - whether to disable the Default Response command
//  367  * @param   seqNum - sequence number
//  368  *
//  369  * @return  ZStatus_t
//  370  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  371 ZStatus_t zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
        CODE
//  372                                                    uint8 hue, uint8 saturation, uint16 transitionTime,
//  373                                                    uint8 disableDefaultRsp, uint8 seqNum )
//  374 {
        FUNCALL zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     ?V0 + 0,R5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine23 & 0xFFFF
//  375   uint8 buf[4];
//  376 
//  377   buf[0] = hue;
//  378   buf[1] = saturation;
??CrossCallReturnLabel_39:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
//  379   buf[2] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_27:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  380   buf[3] = HI_UINT16( transitionTime );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  381 
//  382   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  383                           COMMAND_LIGHTING_MOVE_TO_HUE_AND_SATURATION, TRUE,
//  384                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 4, buf );
??CrossCallReturnLabel_115:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 1,#0x6
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock13
//  385 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToHueCmd
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function zclLighting_ColorControl_Send_MoveToSaturationCmd
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+0
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+0
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function zclLighting_ColorControl_Send_EnhancedMoveHueCmd
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+0
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+0
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function zclLighting_ColorControl_Send_ColorLoopSetCmd
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+0
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker20 Using cfiCommon1
          CFI (cfiPicker20) NoFunction
          CFI (cfiPicker20) Picker
        MOV     A,R1
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiPicker20
        REQUIRE ??Subroutine68_0
        ; // Fall through to label ??Subroutine68_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine68_0:
          CFI Block cfiCond21 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_StepHueCmd
          CFI Conditional ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function zclLighting_ColorControl_Send_StepSaturationCmd
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+0
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function zclLighting_ColorControl_Send_MoveToHueCmd
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond23) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond23) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond23) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond23) CFA_SP SP+0
          CFI (cfiCond23) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond24 Using cfiCommon0
          CFI (cfiCond24) Function zclLighting_ColorControl_Send_MoveToSaturationCmd
          CFI (cfiCond24) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond24) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond24) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond24) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond24) CFA_SP SP+0
          CFI (cfiCond24) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+0
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function zclLighting_ColorControl_Send_EnhancedMoveHueCmd
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+0
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+0
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function zclLighting_ColorControl_Send_ColorLoopSetCmd
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+0
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker29 Using cfiCommon1
          CFI (cfiPicker29) NoFunction
          CFI (cfiPicker29) Picker
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_133:
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        RET
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiPicker29

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond30 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToHueCmd
          CFI Conditional ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond31 Using cfiCommon0
          CFI (cfiCond31) Function zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
          CFI (cfiCond31) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond31) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond31) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond31) CFA_SP SP+0
          CFI (cfiCond31) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker32 Using cfiCommon1
          CFI (cfiPicker32) NoFunction
          CFI (cfiPicker32) Picker
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R7
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond30
          CFI EndBlock cfiCond31
          CFI EndBlock cfiPicker32
//  386 
//  387 /*********************************************************************
//  388  * @fn      zclLighting_ColorControl_Send_MoveToColorCmd
//  389  *
//  390  * @brief   Call to send out a Move To Color Command
//  391  *
//  392  * @param   srcEP - Sending application's endpoint
//  393  * @param   dstAddr - where you want the message to go
//  394  * @param   colorX - a target color X
//  395  * @param   colorY - a target color Y
//  396  * @param   transitionTime -  time to move, equal of the value of the field in 1/10 seconds
//  397  * @param   disableDefaultRsp - whether to disable the Default Response command
//  398  * @param   seqNum - sequence number
//  399  *
//  400  * @return  ZStatus_t
//  401  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  402 ZStatus_t zclLighting_ColorControl_Send_MoveToColorCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_MoveToColorCmd:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToColorCmd
        CODE
//  403                                        uint16 colorX, uint16 colorY, uint16 transitionTime,
//  404                                        uint8 disableDefaultRsp, uint8 seqNum )
//  405 {
        FUNCALL zclLighting_ColorControl_Send_MoveToColorCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine6 & 0xFFFF
//  406   uint8 buf[6];
//  407 
//  408   buf[0] = LO_UINT16( colorX );
//  409   buf[1] = HI_UINT16( colorX );
??CrossCallReturnLabel_0:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
//  410   buf[2] = LO_UINT16( colorY );
??CrossCallReturnLabel_28:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  411   buf[3] = HI_UINT16( colorY );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine29 & 0xFFFF
//  412   buf[4] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_51:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  413   buf[5] = HI_UINT16( transitionTime );
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine38 & 0xFFFF
//  414 
//  415   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  416                           COMMAND_LIGHTING_MOVE_TO_COLOR, TRUE,
//  417                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 6, buf );
??CrossCallReturnLabel_125:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0 + 0,#0x6
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,?V0 + 2
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0 + 0,#0x7
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,#0x6
        LJMP    ??Subroutine71_0 & 0xFFFF
          CFI EndBlock cfiBlock33
//  418 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond34 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToHueCmd
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+0
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function zclLighting_ColorControl_Send_MoveToColorCmd
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+0
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+0
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker38 Using cfiCommon1
          CFI (cfiPicker38) NoFunction
          CFI (cfiPicker38) Picker
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_186:
        MOV     A,#0x2
        RET
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiPicker38
//  419 
//  420 /*********************************************************************
//  421  * @fn      zclLighting_ColorControl_Send_MoveColorCmd
//  422  *
//  423  * @brief   Call to send out a Move Color Command
//  424  *
//  425  * @param   srcEP - Sending application's endpoint
//  426  * @param   dstAddr - where you want the message to go
//  427  * @param   rateX - rate of movement in steps per second. A step is a change
//  428  *                  in the device's CurrentX attribute of one unit.
//  429  * @param   rateY - rate of movement in steps per second. A step is a change
//  430  *                  in the device's CurrentY attribute of one unit.
//  431  * @param   disableDefaultRsp - whether to disable the Default Response command
//  432  * @param   seqNum - sequence number
//  433  *
//  434  * @return  ZStatus_t
//  435  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  436 ZStatus_t zclLighting_ColorControl_Send_MoveColorCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_MoveColorCmd:
          CFI Block cfiBlock39 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveColorCmd
        CODE
//  437                                                       int16 rateX, int16 rateY,
//  438                                                       uint8 disableDefaultRsp, uint8 seqNum )
//  439 {
        FUNCALL zclLighting_ColorControl_Send_MoveColorCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R1
        MOV     R6,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
//  440   uint8 buf[4];
//  441 
//  442   buf[0] = LO_UINT16( rateX );
        LCALL   ?Subroutine43 & 0xFFFF
//  443   buf[1] = HI_UINT16( rateX );
??CrossCallReturnLabel_121:
        LCALL   ?SS_SHR
        INC     A
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
//  444   buf[2] = LO_UINT16( rateY );
??CrossCallReturnLabel_55:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine69_0 & 0xFFFF
//  445   buf[3] = HI_UINT16( rateY );
??CrossCallReturnLabel_123:
        LCALL   ?SS_SHR
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        LCALL   ??Subroutine70_0 & 0xFFFF
//  446 
//  447   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  448                           COMMAND_LIGHTING_MOVE_COLOR, TRUE,
//  449                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 4, buf );
??CrossCallReturnLabel_132:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 0,#0x4
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x8
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,#0x4
          CFI EndBlock cfiBlock39
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2
//  450 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock40 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock40
//  451 
//  452 /*********************************************************************
//  453  * @fn      zclLighting_ColorControl_Send_StepColorCmd
//  454  *
//  455  * @brief   Call to send out a Step Color Command
//  456  *
//  457  * @param   srcEP - Sending application's endpoint
//  458  * @param   dstAddr - where you want the message to go
//  459  * @param   stepX - change to be added to the device's CurrentX attribute
//  460  * @param   stepY - change to be added to the device's CurrentY attribute
//  461  * @param   transitionTime -  time to perform the color change, equal of
//  462  *                            the value of the field in 1/10 seconds
//  463  * @param   disableDefaultRsp - whether to disable the Default Response command
//  464  * @param   seqNum - sequence number
//  465  *
//  466  * @return  ZStatus_t
//  467  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  468 ZStatus_t zclLighting_ColorControl_Send_StepColorCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_StepColorCmd:
          CFI Block cfiBlock41 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_StepColorCmd
        CODE
//  469                                          int16 stepX, int16 stepY, uint16 transitionTime,
//  470                                          uint8 disableDefaultRsp, uint8 seqNum )
//  471 {
        FUNCALL zclLighting_ColorControl_Send_StepColorCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
//  472   uint8 buf[6];
//  473 
//  474   buf[0] = LO_UINT16( stepX );
        LCALL   ?Subroutine43 & 0xFFFF
//  475   buf[1] = HI_UINT16( stepX );
??CrossCallReturnLabel_122:
        LCALL   ?SS_SHR
        INC     A
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
//  476   buf[2] = LO_UINT16( stepY );
??CrossCallReturnLabel_56:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine69_0 & 0xFFFF
//  477   buf[3] = HI_UINT16( stepY );
??CrossCallReturnLabel_124:
        LCALL   ?SS_SHR
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine29 & 0xFFFF
//  478   buf[4] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_52:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  479   buf[5] = HI_UINT16( transitionTime );
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine38 & 0xFFFF
//  480 
//  481   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  482                           COMMAND_LIGHTING_STEP_COLOR, TRUE,
//  483                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 6, buf );
??CrossCallReturnLabel_126:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,#0x6
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R5
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 0,#0x9
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x6
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock41
//  484 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond42 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveColorCmd
          CFI Conditional ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond43) CFA_SP SP+0
          CFI (cfiCond43) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker44 Using cfiCommon1
          CFI (cfiPicker44) NoFunction
          CFI (cfiPicker44) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiPicker44
        REQUIRE ??Subroutine69_0
        ; // Fall through to label ??Subroutine69_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine69_0:
          CFI Block cfiCond45 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveColorCmd
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+0
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function zclLighting_ColorControl_Send_MoveColorCmd
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+0
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+0
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker49 Using cfiCommon1
          CFI (cfiPicker49) NoFunction
          CFI (cfiPicker49) Picker
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        MOV     A,#0x8
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiPicker49

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond50 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToColorCmd
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+0
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+0
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+0
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+0
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker55 Using cfiCommon1
          CFI (cfiPicker55) NoFunction
          CFI (cfiPicker55) Picker
        MOV     A,R1
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiPicker55
        REQUIRE ??Subroutine70_0
        ; // Fall through to label ??Subroutine70_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine70_0:
          CFI Block cfiCond56 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveHueCmd
          CFI Conditional ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function zclLighting_ColorControl_Send_MoveSaturationCmd
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+0
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function zclLighting_ColorControl_Send_MoveColorCmd
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+0
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function zclLighting_ColorControl_Send_MoveToColorCmd
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+0
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+0
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+0
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+0
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+0
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker64 Using cfiCommon1
          CFI (cfiPicker64) NoFunction
          CFI (cfiPicker64) Picker
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_134:
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiPicker64

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond65 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveColorCmd
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+0
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker67 Using cfiCommon1
          CFI (cfiPicker67) NoFunction
          CFI (cfiPicker67) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     A,#0x2
        RET
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiPicker67
//  485 
//  486 /*********************************************************************
//  487  * @fn      zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
//  488  *
//  489  * @brief   Call to send out a Move To Color Temperature Command
//  490  *
//  491  * @param   srcEP - Sending application's endpoint
//  492  * @param   dstAddr - where you want the message to go
//  493  * @param   colorTemperature - a target color temperature
//  494  * @param   transitionTime -  time to perform the color change, equal of
//  495  *                            the value of the field in 1/10 seconds
//  496  * @param   disableDefaultRsp - whether to disable the Default Response command
//  497  * @param   seqNum - sequence number
//  498  *
//  499  * @return  ZStatus_t
//  500  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  501 ZStatus_t zclLighting_ColorControl_Send_MoveToColorTemperatureCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_MoveToColorTemperatureCmd:
          CFI Block cfiBlock68 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
        CODE
//  502                                                        uint16 colorTemperature, uint16 transitionTime,
//  503                                                        uint8 disableDefaultRsp, uint8 seqNum )
//  504 {
        FUNCALL zclLighting_ColorControl_Send_MoveToColorTemperatureCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine6 & 0xFFFF
//  505   uint8 buf[4];
//  506 
//  507   buf[0] = LO_UINT16( colorTemperature );
//  508   buf[1] = HI_UINT16( colorTemperature );
??CrossCallReturnLabel_1:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine18 & 0xFFFF
//  509   buf[2] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_29:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  510   buf[3] = HI_UINT16( transitionTime );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine38 & 0xFFFF
//  511 
//  512   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  513                           COMMAND_LIGHTING_MOVE_TO_COLOR_TEMPERATURE, TRUE,
//  514                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 4, buf );
??CrossCallReturnLabel_127:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 0,#0x4
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,?V0 + 2
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#0xa
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,#0x4
        SJMP    ??Subroutine71_0
          CFI EndBlock cfiBlock68
//  515 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock69 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x2
          CFI EndBlock cfiBlock69
        REQUIRE ??Subroutine71_0
        ; // Fall through to label ??Subroutine71_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine71_0:
          CFI Block cfiBlock70 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Valid
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock70
//  516 
//  517 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  518 /*********************************************************************
//  519  * @fn      zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
//  520  *
//  521  * @brief   Call to send out an Enhanced Move To Hue Command
//  522  *
//  523  * @param   srcEP - Sending application's endpoint
//  524  * @param   dstAddr - where you want the message to go
//  525  * @param   enhancedHue - a target extended hue for lamp
//  526  * @param   direction - direction of hue change
//  527  * @param   transitionTime -  time to perform the color change, equal of
//  528  *                            the value of the field in 1/10 seconds
//  529  * @param   disableDefaultRsp - whether to disable the Default Response command
//  530  * @param   seqNum - sequence number
//  531  *
//  532  * @return  ZStatus_t
//  533  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  534 ZStatus_t zclLighting_ColorControl_Send_EnhancedMoveToHueCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_EnhancedMoveToHueCmd:
          CFI Block cfiBlock71 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
        CODE
//  535                                                               uint16 enhancedHue, uint8 direction,
//  536                                                               uint16 transitionTime, uint8 disableDefaultRsp,
//  537                                                               uint8 seqNum )
//  538 {
        FUNCALL zclLighting_ColorControl_Send_EnhancedMoveToHueCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine6 & 0xFFFF
//  539   uint8 buf[5];
//  540 
//  541   buf[0] = LO_UINT16( enhancedHue );
//  542   buf[1] = HI_UINT16( enhancedHue );
??CrossCallReturnLabel_2:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
//  543   buf[2] = direction;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
//  544   buf[3] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_30:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  545   buf[4] = HI_UINT16( transitionTime );
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine38 & 0xFFFF
//  546 
//  547   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  548                           COMMAND_LIGHTING_ENHANCED_MOVE_TO_HUE, TRUE,
//  549                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 5, buf );
??CrossCallReturnLabel_128:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,#0x5
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V0 + 2
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 0,#0x40
          CFI EndBlock cfiBlock71
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
//  550 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock72 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x5
        LJMP    ??Subroutine71_0 & 0xFFFF
          CFI EndBlock cfiBlock72

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiCond73 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToColorCmd
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+0
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+0
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+0
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker77 Using cfiCommon1
          CFI (cfiPicker77) NoFunction
          CFI (cfiPicker77) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     A,R4
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiPicker77
//  551 
//  552 /*********************************************************************
//  553  * @fn      zclLighting_ColorControl_Send_EnhancedMoveHueCmd
//  554  *
//  555  * @brief   Call to send out an Enhanced Move Hue Command
//  556  *
//  557  * @param   srcEP - Sending application's endpoint
//  558  * @param   dstAddr - where you want the message to go
//  559  * @param   moveMode - LIGHTING_MOVE_HUE_STOP, LIGHTING_MOVE_HUE_UP,
//  560  *                     LIGHTING_MOVE_HUE_DOWN
//  561  * @param   rate - the movement in steps per second, where step is
//  562  *                 a change in the device's hue of one unit
//  563  * @param   disableDefaultRsp - whether to disable the Default Response command
//  564  * @param   seqNum - sequence number
//  565  *
//  566  * @return  ZStatus_t
//  567  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  568 ZStatus_t zclLighting_ColorControl_Send_EnhancedMoveHueCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_EnhancedMoveHueCmd:
          CFI Block cfiBlock78 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_EnhancedMoveHueCmd
        CODE
//  569                                                             uint8 moveMode, uint16 rate,
//  570                                                             uint8 disableDefaultRsp, uint8 seqNum )
//  571 {
        FUNCALL zclLighting_ColorControl_Send_EnhancedMoveHueCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine22 & 0xFFFF
//  572   uint8 buf[3];
//  573 
//  574   buf[0] = moveMode;
??CrossCallReturnLabel_37:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine25 & 0xFFFF
//  575   buf[1] = LO_UINT16( rate );
??CrossCallReturnLabel_43:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  576   buf[2] = HI_UINT16( rate );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  577 
//  578   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  579                           COMMAND_LIGHTING_ENHANCED_MOVE_HUE, TRUE,
//  580                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_116:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 2,#0x3
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x41
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock78
//  581 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond79 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToSaturationCmd
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function zclLighting_ColorControl_Send_EnhancedMoveHueCmd
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+0
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+0
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker82 Using cfiCommon1
          CFI (cfiPicker82) NoFunction
          CFI (cfiPicker82) Picker
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_188:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiPicker82

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond83 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToSaturationCmd
          CFI Conditional ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function zclLighting_ColorControl_Send_EnhancedMoveHueCmd
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+0
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker85 Using cfiCommon1
          CFI (cfiPicker85) NoFunction
          CFI (cfiPicker85) Picker
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_85:
        MOV     A,#0xf
        RET
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiPicker85

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond86 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveHueCmd
          CFI Conditional ??CrossCallReturnLabel_84, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function zclLighting_ColorControl_Send_StepHueCmd
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_84, ??CrossCallReturnLabel_5
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+0
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function zclLighting_ColorControl_Send_MoveSaturationCmd
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_84, ??CrossCallReturnLabel_6
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+0
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function zclLighting_ColorControl_Send_StepSaturationCmd
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_84, ??CrossCallReturnLabel_7
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+0
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function zclLighting_ColorControl_Send_MoveToSaturationCmd
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_85, ??CrossCallReturnLabel_36
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+0
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function zclLighting_ColorControl_Send_EnhancedMoveHueCmd
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_85, ??CrossCallReturnLabel_37
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+0
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+0
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker93 Using cfiCommon1
          CFI (cfiPicker93) NoFunction
          CFI (cfiPicker93) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R7
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiPicker93

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock94 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x4
          CFI EndBlock cfiBlock94
        REQUIRE ??Subroutine72_0
        ; // Fall through to label ??Subroutine72_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine72_0:
          CFI Block cfiBlock95 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock95
        REQUIRE ??Subroutine73_0
        ; // Fall through to label ??Subroutine73_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine73_0:
          CFI Block cfiBlock96 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock96
//  582 
//  583 /*********************************************************************
//  584  * @fn      zclLighting_ColorControl_Send_EnhancedStepHueCmd
//  585  *
//  586  * @brief   Call to send out an Enhanced Step Hue Command
//  587  *
//  588  * @param   srcEP - Sending application's endpoint
//  589  * @param   dstAddr - where you want the message to go
//  590  * @param   stepMode -	LIGHTING_STEP_HUE_UP, LIGHTING_STEP_HUE_DOWN
//  591  * @param   stepSize -  change to the current value of the device's hue
//  592  * @param   transitionTime - the movement in steps per 1/10 second
//  593  * @param   disableDefaultRsp - whether to disable the Default Response command
//  594  * @param   seqNum - sequence number
//  595  *
//  596  * @return  ZStatus_t
//  597  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  598 ZStatus_t zclLighting_ColorControl_Send_EnhancedStepHueCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_EnhancedStepHueCmd:
          CFI Block cfiBlock97 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
        CODE
//  599                                   uint8 stepMode, uint16 stepSize, uint16 transitionTime,
//  600                                   uint8 disableDefaultRsp, uint8 seqNum )
//  601 {
        FUNCALL zclLighting_ColorControl_Send_EnhancedStepHueCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine47 & 0xFFFF
//  602   uint8 buf[5];
//  603 
//  604   buf[0] = stepMode;
??CrossCallReturnLabel_86:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine25 & 0xFFFF
//  605   buf[1] = LO_UINT16( stepSize );
??CrossCallReturnLabel_44:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  606   buf[2] = HI_UINT16( stepSize );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
//  607   buf[3] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_31:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  608   buf[4] = HI_UINT16( transitionTime );
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  609 
//  610   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  611                           COMMAND_LIGHTING_ENHANCED_STEP_HUE, TRUE,
//  612                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 5, buf );
??CrossCallReturnLabel_117:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0 + 2,#0x5
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0 + 1,#0x42
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     A,R6
        MOV     R1,A
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,#0x5
        LJMP    ??Subroutine72_0 & 0xFFFF
          CFI EndBlock cfiBlock97
//  613 }
//  614 
//  615 /*********************************************************************
//  616  * @fn      zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
//  617  *
//  618  * @brief   Call to send out an Enhanced Move To Hue And Saturation Command
//  619  *
//  620  * @param   srcEP - Sending application's endpoint
//  621  * @param   dstAddr - where you want the message to go
//  622  * @param   Enhanced hue - a target Enhanced hue for lamp
//  623  * @param   saturation - a target saturation
//  624  * @param   transitionTime -  time to move, equal of the value of the field in 1/10 seconds
//  625  * @param   disableDefaultRsp - whether to disable the Default Response command
//  626  * @param   seqNum - sequence number
//  627  *
//  628  * @return  ZStatus_t
//  629  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  630 ZStatus_t zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd( uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd:
          CFI Block cfiBlock98 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
        CODE
//  631                                                   uint16 enhancedHue, uint8 saturation, uint16 transitionTime,
//  632                                                   uint8 disableDefaultRsp, uint8 seqNum )
//  633 {
        FUNCALL zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine6 & 0xFFFF
//  634   uint8 buf[5];
//  635 
//  636   buf[0] = LO_UINT16( enhancedHue );
//  637   buf[1] = HI_UINT16( enhancedHue );
??CrossCallReturnLabel_3:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R5
        MOVX    @DPTR,A
//  638   buf[2] = saturation;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
//  639   buf[3] = LO_UINT16( transitionTime );
??CrossCallReturnLabel_32:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  640   buf[4] = HI_UINT16( transitionTime );
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine38 & 0xFFFF
//  641 
//  642   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  643                           COMMAND_LIGHTING_ENHANCED_MOVE_TO_HUE_AND_SATURATION, TRUE,
//  644                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 5, buf );
??CrossCallReturnLabel_129:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,#0x5
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V0 + 2
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 0,#0x43
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock98
//  645 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond99 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+0
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+0
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function zclLighting_ColorControl_Send_ColorLoopSetCmd
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+0
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker103 Using cfiCommon1
          CFI (cfiPicker103) NoFunction
          CFI (cfiPicker103) Picker
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_187:
        MOV     A,#0x3
        RET
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiPicker103
//  646 
//  647 /*********************************************************************
//  648  * @fn      zclLighting_ColorControl_Send_ColorLoopSetCmd
//  649  *
//  650  * @brief   Call to send out a Color Loop Set Command
//  651  *
//  652  * @param   srcEP - Sending application's endpoint
//  653  * @param   dstAddr - where you want the message to go
//  654  * @param   updateFlags - which color loop attributes to update before the color loop is started.
//  655  * @param   action - action to take for the color loop
//  656  * @param   direction - direction for the color loop (decrement or increment)
//  657  * @param   time - number of seconds over which to perform a full color loop
//  658  * @param   startHue - starting hue to use for the color loop
//  659  * @param   disableDefaultRsp - whether to disable the Default Response command
//  660  * @param   seqNum - sequence number
//  661  *
//  662  * @return  ZStatus_t
//  663  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  664 ZStatus_t zclLighting_ColorControl_Send_ColorLoopSetCmd(uint8 srcEP, afAddrType_t *dstAddr,
zclLighting_ColorControl_Send_ColorLoopSetCmd:
          CFI Block cfiBlock104 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_ColorLoopSetCmd
        CODE
//  665                                                   zclCCColorLoopSet_updateFlags_t updateFlags, uint8 action,
//  666                                                   uint8 direction, uint16 time, uint16 startHue,
//  667                                                   uint8 disableDefaultRsp, uint8 seqNum)
//  668 {
        FUNCALL zclLighting_ColorControl_Send_ColorLoopSetCmd, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0 + 0,R1
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
//  669   uint8 buf[7];
//  670 
//  671   buf[0] = updateFlags.byte;
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//  672   buf[1] = action;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
//  673   buf[2] = direction;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine19 & 0xFFFF
//  674   buf[3] = LO_UINT16( time );
??CrossCallReturnLabel_33:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  675   buf[4] = HI_UINT16( time );
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine29 & 0xFFFF
//  676   buf[5] = LO_UINT16( startHue );
??CrossCallReturnLabel_53:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
//  677   buf[6] = HI_UINT16( startHue );
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
//  678 
//  679   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  680                           COMMAND_LIGHTING_COLOR_LOOP_SET, TRUE,
//  681                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 7, buf );
??CrossCallReturnLabel_118:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 2,#0x7
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R5
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0 + 1,#0x1
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 1,#0x44
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R4,#0x0
        MOV     R5,#0x3
        MOV     R1,?V0 + 0
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x7
        LJMP    ??Subroutine72_0 & 0xFFFF
          CFI EndBlock cfiBlock104
//  682 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond105 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToColorCmd
          CFI Conditional ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+0
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function zclLighting_ColorControl_Send_ColorLoopSetCmd
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+0
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+0
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker109 Using cfiCommon1
          CFI (cfiPicker109) NoFunction
          CFI (cfiPicker109) Picker
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_189:
        RET
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiPicker109

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond110 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToHueCmd
          CFI Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_27
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+0
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function zclLighting_ColorControl_Send_MoveToColorCmd
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_28
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+0
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_29
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+0
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function zclLighting_ColorControl_Send_MoveToSaturationCmd
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_42
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+0
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function zclLighting_ColorControl_Send_EnhancedMoveHueCmd
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_43
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+0
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_44
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+0
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_30
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+0
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_31
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+0
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_32
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+0
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function zclLighting_ColorControl_Send_ColorLoopSetCmd
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_33
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+0
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function zclLighting_ColorControl_Send_MoveToColorCmd
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_51
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+0
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_52
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+0
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function zclLighting_ColorControl_Send_ColorLoopSetCmd
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_53
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+0
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_54
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+0
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_16
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+0
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_17
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+0
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_18
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+0
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_183
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+0
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_184
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+0
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_182
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+0
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_179
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+0
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_180
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+0
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_181
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+0
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker134 Using cfiCommon1
          CFI (cfiPicker134) NoFunction
          CFI (cfiPicker134) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiPicker134
//  683 #endif //ZCL_LIGHT_LINK_ENHANCE
//  684 
//  685 /*********************************************************************
//  686  * @fn      zclLighting_FindCallbacks
//  687  *
//  688  * @brief   Find the callbacks for an endpoint
//  689  *
//  690  * @param   endpoint - endpoint to find the application callbacks for
//  691  *
//  692  * @return  pointer to the callbacks
//  693  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  694 static zclLighting_AppCallbacks_t *zclLighting_FindCallbacks( uint8 endpoint )
zclLighting_FindCallbacks:
          CFI Block cfiBlock135 Using cfiCommon0
          CFI Function zclLighting_FindCallbacks
        CODE
//  695 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  696   zclLightingCBRec_t *pCBs;
//  697 
//  698   pCBs = zclLightingCBs;
        MOV     DPTR,#zclLightingCBs
//  699   while ( pCBs != NULL )
//  700   {
//  701     if ( pCBs->endpoint == endpoint )
//  702       return ( pCBs->CBs );
//  703     pCBs = pCBs->next;
??zclLighting_FindCallbacks_0:
        LCALL   ??Subroutine74_0 & 0xFFFF
??CrossCallReturnLabel_137:
        JZ      ??zclLighting_FindCallbacks_1
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
        MOV     DPL,R2
        MOV     DPH,R3
        JNZ     ??zclLighting_FindCallbacks_0
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine53 & 0xFFFF
//  704   }
??CrossCallReturnLabel_144:
        SJMP    ??zclLighting_FindCallbacks_2
//  705   return ( (zclLighting_AppCallbacks_t *)NULL );
??zclLighting_FindCallbacks_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
??zclLighting_FindCallbacks_2:
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock135
//  706 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond136 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+0
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+0
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+0
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker140 Using cfiCommon1
          CFI (cfiPicker140) NoFunction
          CFI (cfiPicker140) Picker
        MOV     R0,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiPicker140
        REQUIRE ??Subroutine74_0
        ; // Fall through to label ??Subroutine74_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine74_0:
          CFI Block cfiCond141 Using cfiCommon0
          CFI Function zclLighting_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_138
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function zclLighting_RegisterCmdCallbacks
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+0
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function zclLighting_FindCallbacks
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond143) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond143) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond143) CFA_SP SP+-5
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_140
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+0
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+0
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+0
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+0
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker148 Using cfiCommon1
          CFI (cfiPicker148) NoFunction
          CFI (cfiPicker148) Picker
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_147:
        MOV     A,R2
        ORL     A,R3
        RET
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiPicker148

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond149 Using cfiCommon0
          CFI Function zclLighting_FindCallbacks
          CFI Conditional ??CrossCallReturnLabel_144
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_140
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+0
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_141
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+0
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_142
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+0
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_143
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+0
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function zclLighting_RegisterCmdCallbacks
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_138
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+0
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function zclLighting_RegisterCmdCallbacks
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_139
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+0
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function zclLighting_FindCallbacks
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_137
          CFI (cfiCond156) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond156) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond156) CFA_SP SP+-5
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function zclLighting_HdlIncoming
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+0
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function zclLighting_HdlIncoming
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+0
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker159 Using cfiCommon1
          CFI (cfiPicker159) NoFunction
          CFI (cfiPicker159) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiPicker159
//  707 
//  708 /*********************************************************************
//  709  * @fn      zclLighting_HdlIncoming
//  710  *
//  711  * @brief   Callback from ZCL to process incoming Commands specific
//  712  *          to this cluster library or Profile commands for attributes
//  713  *          that aren't in the attribute list
//  714  *
//  715  * @param   pInMsg - pointer to the incoming message
//  716  *
//  717  * @return  ZStatus_t
//  718  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  719 static ZStatus_t zclLighting_HdlIncoming( zclIncoming_t *pInMsg )
zclLighting_HdlIncoming:
          CFI Block cfiBlock160 Using cfiCommon0
          CFI Function zclLighting_HdlIncoming
        CODE
//  720 {   
        FUNCALL zclLighting_HdlIncoming, StubAPS_InterPan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclLighting_HdlIncoming, zclLighting_FindCallbacks
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclLighting_HdlIncoming, zclLighting_ProcessInColorControlCmds
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclLighting_HdlIncoming, zclLighting_FindCallbacks
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclLighting_HdlIncoming, zclLighting_ProcessInManuBallastConfigCmds
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  721   ZStatus_t stat = ZSuccess;
//  722 
//  723 #if defined ( INTER_PAN )
//  724   if ( StubAPS_InterPan( pInMsg->msg->srcAddr.panId, pInMsg->msg->srcAddr.endPoint ) )
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_145:
        ; Setup parameters for call to function StubAPS_InterPan
        MOV     A,R2
        ADD     A,#0xf
        MOV     DPL,A
        MOV     A,R3
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_81:
        MOV     A,R2
        ADD     A,#0x10
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine75_0 & 0xFFFF
??CrossCallReturnLabel_148:
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_146:
        LCALL   ??StubAPS_InterPan?relay
        MOV     A,R1
        JZ      ??zclLighting_HdlIncoming_0
//  725     return ( stat ); // Cluster not supported thru Inter-PAN
        MOV     R1,#0x0
        SJMP    ??zclLighting_HdlIncoming_1
//  726 #endif
//  727   if ( zcl_ClusterCmd( pInMsg->hdr.fc.type ) )
??zclLighting_HdlIncoming_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        ANL     A,#0x3
        XRL     A,#0x1
        JNZ     ??zclLighting_HdlIncoming_2
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R0
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_82:
        MOV     A,R2
        ANL     A,#0x4
        JNZ     ??zclLighting_HdlIncoming_3
//  728   {
//  729     // Is this a manufacturer specific command?
//  730     if ( pInMsg->hdr.fc.manuSpecific == 0 )
//  731     {
//  732       stat = zclLighting_HdlInSpecificCommands( pInMsg );
        ; Setup parameters for call to function zclLighting_FindCallbacks
        LCALL   ??zclLighting_FindCallbacks?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R4
        ORL     A,R5
        JNZ     ??zclLighting_HdlIncoming_4
??zclLighting_HdlIncoming_2:
        MOV     ?V0 + 0,#0x1
        SJMP    ??zclLighting_HdlIncoming_5
??zclLighting_HdlIncoming_4:
        LCALL   ?Subroutine21 & 0xFFFF
//  733     }
??CrossCallReturnLabel_34:
        JNZ     ??zclLighting_HdlIncoming_6
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x3
??zclLighting_HdlIncoming_6:
        JNZ     ??zclLighting_HdlIncoming_7
        ; Setup parameters for call to function zclLighting_ProcessInColorControlCmds
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclLighting_ProcessInColorControlCmds?relay
        SJMP    ??zclLighting_HdlIncoming_8
//  734     else
//  735     {
//  736       // We don't support any manufacturer specific command.
//  737       //stat = ZFailure;
//  738       
//  739       stat = zclLighting_HdlInManuSpecCommands( pInMsg );//define my own function
??zclLighting_HdlIncoming_3:
        ; Setup parameters for call to function zclLighting_FindCallbacks
        LCALL   ??zclLighting_FindCallbacks?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,R4
        ORL     A,R5
        JZ      ??zclLighting_HdlIncoming_2
        LCALL   ?Subroutine21 & 0xFFFF
//  740     }
//  741   }
??CrossCallReturnLabel_35:
        XRL     A,#0x1
        JNZ     ??zclLighting_HdlIncoming_9
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x3
??zclLighting_HdlIncoming_9:
        JNZ     ??zclLighting_HdlIncoming_7
        ; Setup parameters for call to function zclLighting_ProcessInManuBallastConfigCmds
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??zclLighting_ProcessInManuBallastConfigCmds?re
??zclLighting_HdlIncoming_8:
        MOV     A,R1
        SJMP    ??zclLighting_HdlIncoming_10
??zclLighting_HdlIncoming_7:
        MOV     A,#0x1
??zclLighting_HdlIncoming_10:
        MOV     ?V0 + 0,A
//  742   else
//  743   {
//  744     // Handle all the normal (Read, Write...) commands -- should never get here
//  745     stat = ZFailure;
//  746   }
//  747   return ( stat );
??zclLighting_HdlIncoming_5:
        MOV     R1,?V0 + 0
??zclLighting_HdlIncoming_1:
        LJMP    ??Subroutine73_0 & 0xFFFF
          CFI EndBlock cfiBlock160
//  748 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond161 Using cfiCommon0
          CFI Function zclLighting_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function zclLighting_HdlIncoming
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+0
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker163 Using cfiCommon1
          CFI (cfiPicker163) NoFunction
          CFI (cfiPicker163) Picker
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_90:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiPicker163
//  749 
//  750 /*********************************************************************
//  751  * @fn      zclLighting_HdlInSpecificCommands
//  752  *
//  753  * @brief   Callback from ZCL to process incoming Commands specific
//  754  *          to this cluster library
//  755 
//  756  * @param   pInMsg - pointer to the incoming message
//  757  *
//  758  * @return  ZStatus_t
//  759  */
//  760 static ZStatus_t zclLighting_HdlInSpecificCommands( zclIncoming_t *pInMsg )
//  761 {
//  762   ZStatus_t stat = ZSuccess;
//  763   zclLighting_AppCallbacks_t *pCBs;
//  764 
//  765   // make sure endpoint exists
//  766   pCBs = zclLighting_FindCallbacks( pInMsg->msg->endPoint );
//  767   if (pCBs == NULL )
//  768     return ( ZFailure );
//  769 
//  770   switch ( pInMsg->msg->clusterId )
//  771   {
//  772     case ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL:
//  773       stat = zclLighting_ProcessInColorControlCmds( pInMsg, pCBs );
//  774       break;
//  775 
//  776     case ZCL_CLUSTER_ID_LIGHTING_BALLAST_CONFIG:
//  777       // no commands
//  778     default:
//  779       stat = ZFailure;
//  780       break;
//  781   }
//  782 
//  783   return ( stat );
//  784 }
//  785 
//  786 /*********************************************************************
//  787  * @fn      zclLighting_HdlInManuSpecCommands
//  788  *
//  789  * @brief   Callback to process incoming Manufacturer Commands specific
//  790  *          to this cluster library
//  791 
//  792  * @param   pInMsg - pointer to the incoming message
//  793  *
//  794  * @return  ZStatus_t
//  795  */
//  796 static ZStatus_t zclLighting_HdlInManuSpecCommands( zclIncoming_t *pInMsg )  //define my own function
//  797 {
//  798   ZStatus_t stat = ZSuccess;
//  799   zclLighting_AppCallbacks_t *pCBs;
//  800 
//  801   // make sure endpoint exists
//  802   pCBs = zclLighting_FindCallbacks( pInMsg->msg->endPoint );
//  803   if (pCBs == NULL )
//  804     return ( ZFailure );
//  805 
//  806   switch ( pInMsg->msg->clusterId )
//  807   {
//  808     case ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL:
//  809       stat = ZFailure;
//  810       break;
//  811 
//  812     case ZCL_CLUSTER_ID_LIGHTING_BALLAST_CONFIG:
//  813       stat = zclLighting_ProcessInManuBallastConfigCmds( pInMsg, pCBs );
//  814       break;
//  815       
//  816     default:
//  817       stat = ZFailure;
//  818       break;
//  819   }
//  820 
//  821   return ( stat );
//  822 }
//  823 
//  824 /*********************************************************************
//  825  * @fn      zclLighting_ProcessInColorControlCmds
//  826  *
//  827  * @brief   Callback from ZCL to process incoming Commands specific
//  828  *          to this cluster library on a command ID basis
//  829 
//  830  * @param   pInMsg - pointer to the incoming message
//  831  * @param   pCBs - pointer to the application callbacks
//  832  *
//  833  * @return  ZStatus_t
//  834  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  835 static ZStatus_t zclLighting_ProcessInColorControlCmds( zclIncoming_t *pInMsg,
zclLighting_ProcessInColorControlCmds:
          CFI Block cfiBlock164 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
        CODE
//  836                                              zclLighting_AppCallbacks_t *pCBs )
//  837 {
        FUNCALL zclLighting_ProcessInColorControlCmds, zclLighting_ProcessInCmd_ColorControl_MoveToColor
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclLighting_ProcessInColorControlCmds, zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 20
        MOV     A,#-0x14
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
//  838   ZStatus_t stat;
//  839 
//  840   switch ( pInMsg->hdr.commandID )
        MOV     A,R2
        ADD     A,#0x8
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??zclLighting_ProcessInColorControlCmds_0
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_1 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_2 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_4 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_5 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_6 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_7 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_8 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_9 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_10 & 0xFFFF
        ADD     A,#-0x36
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_11 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_12 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_13 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_14 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_15 & 0xFFFF
        ADD     A,#-0x3
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_16 & 0xFFFF
        SJMP    ??zclLighting_ProcessInColorControlCmds_17
//  841   {
//  842     case COMMAND_LIGHTING_MOVE_TO_HUE:
//  843       stat = zclLighting_ProcessInCmd_ColorControl_MoveToHue( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_0:
        LCALL   ??Subroutine81_0 & 0xFFFF
??CrossCallReturnLabel_182:
        JZ      ??zclLighting_ProcessInColorControlCmds_17
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_12:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_23:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_76:
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_54:
        LCALL   ??Subroutine80_0 & 0xFFFF
??CrossCallReturnLabel_172:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_72:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??zclLighting_ProcessInColorControlCmds_18
??zclLighting_ProcessInColorControlCmds_19:
        MOV     ?V0 + 0,#-0x79
        LJMP    ??zclLighting_ProcessInColorControlCmds_20 & 0xFFFF
??zclLighting_ProcessInColorControlCmds_18:
        ; Setup parameters for indirect call
        LJMP    ??zclLighting_ProcessInColorControlCmds_21 & 0xFFFF
??zclLighting_ProcessInColorControlCmds_17:
        MOV     ?V0 + 0,#0x1
        LJMP    ??zclLighting_ProcessInColorControlCmds_20 & 0xFFFF
//  844       break;
//  845 
//  846     case COMMAND_LIGHTING_MOVE_HUE:
//  847       stat = zclLighting_ProcessInCmd_ColorControl_MoveHue( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_1:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_13:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_24:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        JNZ     ??zclLighting_ProcessInColorControlCmds_22
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JZ      ??zclLighting_ProcessInColorControlCmds_22
??zclLighting_ProcessInColorControlCmds_23:
        MOV     ?V0 + 0,#-0x7b
        LJMP    ??zclLighting_ProcessInColorControlCmds_20 & 0xFFFF
??zclLighting_ProcessInColorControlCmds_22:
        MOV     DPL,R4
        MOV     DPH,R5
        SJMP    ??zclLighting_ProcessInColorControlCmds_24
//  848       break;
//  849 
//  850     case COMMAND_LIGHTING_STEP_HUE:
//  851       stat = zclLighting_ProcessInCmd_ColorControl_StepHue( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_2:
        MOV     A,R4
        ADD     A,#0x4
        SJMP    ??zclLighting_ProcessInColorControlCmds_25
//  852       break;
//  853 
//  854     case COMMAND_LIGHTING_MOVE_TO_SATURATION:
//  855       stat = zclLighting_ProcessInCmd_ColorControl_MoveToSaturation( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_3:
        MOV     A,R4
        ADD     A,#0x6
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_140:
        JZ      ??zclLighting_ProcessInColorControlCmds_17
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_10:
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_109:
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_71:
        MOVX    A,@DPTR
        CPL     A
        LJMP    ??zclLighting_ProcessInColorControlCmds_26 & 0xFFFF
//  856       break;
//  857 
//  858     case COMMAND_LIGHTING_MOVE_SATURATION:
//  859       stat = zclLighting_ProcessInCmd_ColorControl_MoveSaturation( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_4:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_14:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_25:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        JNZ     ??zclLighting_ProcessInColorControlCmds_27
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        JNZ     ??zclLighting_ProcessInColorControlCmds_23
??zclLighting_ProcessInColorControlCmds_27:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
??zclLighting_ProcessInColorControlCmds_24:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine82_0 & 0xFFFF
??CrossCallReturnLabel_179:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        ; Setup parameters for indirect call
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        LJMP    ??zclLighting_ProcessInColorControlCmds_28 & 0xFFFF
//  860       break;
//  861 
//  862     case COMMAND_LIGHTING_STEP_SATURATION:
//  863       stat = zclLighting_ProcessInCmd_ColorControl_StepSaturation( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_5:
        MOV     A,R4
        ADD     A,#0xa
??zclLighting_ProcessInColorControlCmds_25:
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_141:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_11:
        MOV     DPH,A
        MOV     DPL,R2
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_59:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_136:
        LJMP    ??zclLighting_ProcessInColorControlCmds_29 & 0xFFFF
//  864       break;
//  865 
//  866     case COMMAND_LIGHTING_MOVE_TO_HUE_AND_SATURATION:
//  867       stat = zclLighting_ProcessInCmd_ColorControl_MoveToHueAndSaturation( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_6:
        MOV     A,R4
        ADD     A,#0xc
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_142:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_61:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_60:
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_77:
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_45:
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_49:
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        CPL     A
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_19 & 0xFFFF
        MOV     A,#-0x1
        XRL     A,?V0 + 0
??zclLighting_ProcessInColorControlCmds_26:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_19 & 0xFFFF
        ; Setup parameters for indirect call
        LJMP    ??zclLighting_ProcessInColorControlCmds_29 & 0xFFFF
//  868       break;
//  869 
//  870     case COMMAND_LIGHTING_MOVE_TO_COLOR:
//  871       stat = zclLighting_ProcessInCmd_ColorControl_MoveToColor( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_7:
        ; Setup parameters for call to function zclLighting_ProcessInCmd_ColorControl_MoveToColor
        LCALL   ??zclLighting_ProcessInCmd_ColorControl_MoveToC
        LJMP    ??zclLighting_ProcessInColorControlCmds_30 & 0xFFFF
//  872       break;
//  873 
//  874     case COMMAND_LIGHTING_MOVE_COLOR:
//  875       stat = zclLighting_ProcessInCmd_ColorControl_MoveColor( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_8:
        MOV     A,R4
        ADD     A,#0x10
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_16:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_19:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_173:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_73:
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?CALL_IND
        MOV     ?V0 + 0,#0x0
        LJMP    ??zclLighting_ProcessInColorControlCmds_20 & 0xFFFF
//  876       break;
//  877 
//  878     case COMMAND_LIGHTING_STEP_COLOR:
//  879       stat = zclLighting_ProcessInCmd_ColorControl_StepColor( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_9:
        MOV     A,R4
        ADD     A,#0x12
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_17:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_166:
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        LCALL   ??Subroutine77_0 & 0xFFFF
??CrossCallReturnLabel_159:
        MOV     R6,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_80:
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_67:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_104:
        ; Setup parameters for indirect call
        MOV     A,#0xe
        SJMP    ??zclLighting_ProcessInColorControlCmds_31
//  880       break;
//  881 
//  882     case COMMAND_LIGHTING_MOVE_TO_COLOR_TEMPERATURE:
//  883       stat = zclLighting_ProcessInCmd_ColorControl_MoveToColorTemperature( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_10:
        MOV     A,R4
        ADD     A,#0x14
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_18:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_20:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_74:
        LCALL   ?XSTACK_DISP0_8
        CLR     C
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#-0x1
        JC      $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_19 & 0xFFFF
        ; Setup parameters for indirect call
        MOV     A,#0x3
??zclLighting_ProcessInColorControlCmds_31:
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        LJMP    ??zclLighting_ProcessInColorControlCmds_32 & 0xFFFF
//  884       break;
//  885 
//  886 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  887     case COMMAND_LIGHTING_ENHANCED_MOVE_TO_HUE:
//  888       stat = zclLighting_ProcessInCmd_ColorControl_EnhancedMoveToHue( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_11:
        MOV     A,R4
        ADD     A,#0x16
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_183:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_160:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine8 & 0xFFFF
??CrossCallReturnLabel_8:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_105:
        ; Setup parameters for indirect call
        LJMP    ??zclLighting_ProcessInColorControlCmds_33 & 0xFFFF
//  889       break;
//  890 
//  891     case COMMAND_LIGHTING_ENHANCED_MOVE_HUE:
//  892       stat = zclLighting_ProcessInCmd_ColorControl_EnhancedMoveHue( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_12:
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_15:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_167:
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_68:
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_106:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ORL     A,R1
        JNZ     ??zclLighting_ProcessInColorControlCmds_34
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_23 & 0xFFFF
??zclLighting_ProcessInColorControlCmds_34:
        MOV     A,R4
        ADD     A,#0x18
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_150:
        LCALL   ??Subroutine82_0 & 0xFFFF
??CrossCallReturnLabel_180:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        ; Setup parameters for indirect call
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
??zclLighting_ProcessInColorControlCmds_28:
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        LJMP    ??zclLighting_ProcessInColorControlCmds_32 & 0xFFFF
//  893       break;
//  894 
//  895     case COMMAND_LIGHTING_ENHANCED_STEP_HUE:
//  896       stat = zclLighting_ProcessInCmd_ColorControl_EnhancedStepHue( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_13:
        MOV     A,R4
        ADD     A,#0x1a
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_143:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_62:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_78:
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_57:
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_99:
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        MOV     R4,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_156:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_50:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        ; Setup parameters for indirect call
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
??zclLighting_ProcessInColorControlCmds_29:
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        SJMP    ??zclLighting_ProcessInColorControlCmds_35
//  897       break;
//  898 
//  899     case COMMAND_LIGHTING_ENHANCED_MOVE_TO_HUE_AND_SATURATION:
//  900       stat = zclLighting_ProcessInCmd_ColorControl_EnhancedMoveToHueAndSaturation( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_14:
        MOV     A,R4
        ADD     A,#0x1c
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_184:
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_17 & 0xFFFF
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_22:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_161:
        MOV     ?V0 + 0,A
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        LCALL   ?Subroutine8 & 0xFFFF
??CrossCallReturnLabel_9:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_107:
        MOV     A,#-0x1
        XRL     A,?V0 + 0
        JNZ     $+5
        LJMP    ??zclLighting_ProcessInColorControlCmds_19 & 0xFFFF
        ; Setup parameters for indirect call
??zclLighting_ProcessInColorControlCmds_33:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
??zclLighting_ProcessInColorControlCmds_21:
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R4
        MOV     DPH,R5
??zclLighting_ProcessInColorControlCmds_35:
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_65:
        SJMP    ??zclLighting_ProcessInColorControlCmds_32
//  901       break;
//  902 
//  903     case COMMAND_LIGHTING_COLOR_LOOP_SET:
//  904       stat = zclLighting_ProcessInCmd_ColorControl_ColorLoopSet( pInMsg, pCBs );
??zclLighting_ProcessInColorControlCmds_15:
        ; Setup parameters for call to function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
        LCALL   ??zclLighting_ProcessInCmd_ColorControl_ColorLo
        SJMP    ??zclLighting_ProcessInColorControlCmds_30
//  905       break;
//  906 
//  907     case COMMAND_LIGHTING_STOP_MOVE_STEP:
//  908       if ( pCBs->pfnColorControl_StopMoveStep ) // no payload to parse
??zclLighting_ProcessInColorControlCmds_16:
        MOV     A,R4
        ADD     A,#0x20
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL   ??Subroutine78_0 & 0xFFFF
??CrossCallReturnLabel_165:
        MOV     A,DPL
        ORL     A,DPH
        JZ      ??zclLighting_ProcessInColorControlCmds_20
//  909       {
//  910         stat = pCBs->pfnColorControl_StopMoveStep();
        ; Setup parameters for indirect call
??zclLighting_ProcessInColorControlCmds_32:
        LCALL   ?CALL_IND
??zclLighting_ProcessInColorControlCmds_30:
        MOV     A,R1
        MOV     ?V0 + 0,A
//  911       }
//  912       break;
//  913 #endif // ZCL_LIGHT_LINK_ENHANCE
//  914 
//  915     default:
//  916       // Unknown command
//  917       stat = ZFailure;
//  918       break;
//  919   }
//  920 
//  921   return ( stat );
??zclLighting_ProcessInColorControlCmds_20:
        MOV     R1,?V0 + 0
        MOV     A,#0x14
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock164
//  922 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond165 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+0
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_16
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+0
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_17
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+0
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_18
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+0
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+0
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker171 Using cfiCommon1
          CFI (cfiPicker171) NoFunction
          CFI (cfiPicker171) Picker
        MOV     DPL,A
        MOV     A,R5
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiPicker171
        REQUIRE ??Subroutine75_0
        ; // Fall through to label ??Subroutine75_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine75_0:
          CFI Block cfiCond172 Using cfiCommon0
          CFI Function zclLighting_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function zclLighting_HdlIncoming
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_81
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+0
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function zclLighting_HdlIncoming
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_82
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+0
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function zclLighting_ProcessInManuBallastConfigCmds
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_83
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+0
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+0
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+0
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_16
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+0
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_17
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+0
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_18
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+0
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+0
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker182 Using cfiCommon1
          CFI (cfiPicker182) NoFunction
          CFI (cfiPicker182) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiPicker182

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond183 Using cfiCommon0
          CFI Function zclLighting_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_103
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+0
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+0
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+0
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+0
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_108, ??CrossCallReturnLabel_72
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+0
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_108, ??CrossCallReturnLabel_73
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+0
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_108, ??CrossCallReturnLabel_74
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+0
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker191 Using cfiCommon1
          CFI (cfiPicker191) NoFunction
          CFI (cfiPicker191) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiPicker191

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond192 Using cfiCommon0
          CFI Function zclLighting_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+0
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker194 Using cfiCommon1
          CFI (cfiPicker194) NoFunction
          CFI (cfiPicker194) Picker
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_163:
        INC     DPTR
        RET
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiPicker194

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond195 Using cfiCommon0
          CFI Function zclLighting_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function zclLighting_RegisterCmdCallbacks
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_79
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+0
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_80
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+0
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_160
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+0
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_161
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+0
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_159
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+0
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker201 Using cfiCommon1
          CFI (cfiPicker201) NoFunction
          CFI (cfiPicker201) Picker
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiPicker201

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond202 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_72
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+0
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+0
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker205 Using cfiCommon1
          CFI (cfiPicker205) NoFunction
          CFI (cfiPicker205) Picker
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_108:
        ; Setup parameters for indirect call
        MOV     A,#0x3
        RET
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiPicker205

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond206 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+0
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker208 Using cfiCommon1
          CFI (cfiPicker208) NoFunction
          CFI (cfiPicker208) Picker
        MOV     A,R4
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiPicker208
        REQUIRE ??Subroutine76_0
        ; // Fall through to label ??Subroutine76_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine76_0:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+0
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+0
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker212 Using cfiCommon1
          CFI (cfiPicker212) NoFunction
          CFI (cfiPicker212) Picker
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_157:
        INC     DPTR
        RET
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiPicker212

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond213 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+0
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker215 Using cfiCommon1
          CFI (cfiPicker215) NoFunction
          CFI (cfiPicker215) Picker
        MOV     A,?V0 + 0
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiPicker215
        REQUIRE ??Subroutine77_0
        ; // Fall through to label ??Subroutine77_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine77_0:
          CFI Block cfiCond216 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+0
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+0
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker219 Using cfiCommon1
          CFI (cfiPicker219) NoFunction
          CFI (cfiPicker219) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_164:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiPicker219

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond220 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+0
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker222 Using cfiCommon1
          CFI (cfiPicker222) NoFunction
          CFI (cfiPicker222) Picker
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_177:
        RET
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiPicker222

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond223 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_68
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+0
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_173
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+0
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_174
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+0
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_172
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+0
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_8
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+0
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_9
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+0
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker230 Using cfiCommon1
          CFI (cfiPicker230) NoFunction
          CFI (cfiPicker230) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiPicker230

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond231 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+0
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker233 Using cfiCommon1
          CFI (cfiPicker233) NoFunction
          CFI (cfiPicker233) Picker
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_94:
        RET
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiPicker233

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond234 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_94, ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_94, ??CrossCallReturnLabel_62
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+0
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_93, ??CrossCallReturnLabel_10
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+0
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_93, ??CrossCallReturnLabel_11
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+0
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker238 Using cfiCommon1
          CFI (cfiPicker238) NoFunction
          CFI (cfiPicker238) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiPicker238

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond239 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+0
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker241 Using cfiCommon1
          CFI (cfiPicker241) NoFunction
          CFI (cfiPicker241) Picker
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_102:
        MOV     DPH,A
        MOV     DPL,R2
        INC     DPTR
        RET
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiPicker241

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond242 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+0
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker244 Using cfiCommon1
          CFI (cfiPicker244) NoFunction
          CFI (cfiPicker244) Picker
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_88:
        RET
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiPicker244

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond245 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_88, ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_88, ??CrossCallReturnLabel_50
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+0
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_87, ??CrossCallReturnLabel_40
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+0
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_87, ??CrossCallReturnLabel_41
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+0
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker249 Using cfiCommon1
          CFI (cfiPicker249) NoFunction
          CFI (cfiPicker249) Picker
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_110:
        INC     DPTR
        RET
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiPicker249

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond250 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_88, ??CrossCallReturnLabel_49
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+0
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_88, ??CrossCallReturnLabel_50
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+0
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_87, ??CrossCallReturnLabel_40
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+0
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_87, ??CrossCallReturnLabel_41
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+0
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker255 Using cfiCommon1
          CFI (cfiPicker255) NoFunction
          CFI (cfiPicker255) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiPicker255

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond256 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+0
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker258 Using cfiCommon1
          CFI (cfiPicker258) NoFunction
          CFI (cfiPicker258) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiPicker258
        REQUIRE ??Subroutine78_0
        ; // Fall through to label ??Subroutine78_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine78_0:
          CFI Block cfiCond259 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_165
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+0
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+0
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker262 Using cfiCommon1
          CFI (cfiPicker262) NoFunction
          CFI (cfiPicker262) Picker
        LCALL   ??Subroutine79_0 & 0xFFFF
??CrossCallReturnLabel_171:
        RET
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiPicker262

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond263 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+0
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+0
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker266 Using cfiCommon1
          CFI (cfiPicker266) NoFunction
          CFI (cfiPicker266) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_89:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiPicker266

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond267 Using cfiCommon0
          CFI Function zclLighting_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_90, ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function zclLighting_HdlIncoming
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_90, ??CrossCallReturnLabel_35
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+0
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_89, ??CrossCallReturnLabel_23
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+0
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_89, ??CrossCallReturnLabel_24
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+0
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_89, ??CrossCallReturnLabel_25
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+0
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker272 Using cfiCommon1
          CFI (cfiPicker272) NoFunction
          CFI (cfiPicker272) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_111:
        INC     DPTR
        RET
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiPicker272

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond273 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+0
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker275 Using cfiCommon1
          CFI (cfiPicker275) NoFunction
          CFI (cfiPicker275) Picker
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_170:
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,#0x9
        RET
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiPicker275

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond276 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+0
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker278 Using cfiCommon1
          CFI (cfiPicker278) NoFunction
          CFI (cfiPicker278) Picker
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_169:
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,#0x3
        RET
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiPicker278

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond279 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_22
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+0
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_19
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+0
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_20
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+0
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_8
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+0
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_9
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+0
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker285 Using cfiCommon1
          CFI (cfiPicker285) NoFunction
          CFI (cfiPicker285) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiPicker285
        REQUIRE ??Subroutine79_0
        ; // Fall through to label ??Subroutine79_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine79_0:
          CFI Block cfiCond286 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_167
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+0
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_171, ??CrossCallReturnLabel_165
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+0
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_21
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+0
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_22
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+0
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_19
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+0
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_20
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+0
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_8
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+0
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_9
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+0
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker295 Using cfiCommon1
          CFI (cfiPicker295) NoFunction
          CFI (cfiPicker295) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiPicker295

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond296 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+0
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+0
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker299 Using cfiCommon1
          CFI (cfiPicker299) NoFunction
          CFI (cfiPicker299) Picker
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_153:
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_185:
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,R4
        ORL     A,R5
        RET
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiPicker299

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond300 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+0
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+0
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+0
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker304 Using cfiCommon1
          CFI (cfiPicker304) NoFunction
          CFI (cfiPicker304) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_97:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiPicker304

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond305 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+0
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker307 Using cfiCommon1
          CFI (cfiPicker307) NoFunction
          CFI (cfiPicker307) Picker
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_93:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_101:
        RET
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiPicker307

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond308 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_102, ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_102, ??CrossCallReturnLabel_60
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+0
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_101, ??CrossCallReturnLabel_10
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+0
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_101, ??CrossCallReturnLabel_11
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+0
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker312 Using cfiCommon1
          CFI (cfiPicker312) NoFunction
          CFI (cfiPicker312) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiPicker312

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond313 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+0
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker315 Using cfiCommon1
          CFI (cfiPicker315) NoFunction
          CFI (cfiPicker315) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiPicker315
        REQUIRE ??Subroutine80_0
        ; // Fall through to label ??Subroutine80_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine80_0:
          CFI Block cfiCond316 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_172
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+0
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+0
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker319 Using cfiCommon1
          CFI (cfiPicker319) NoFunction
          CFI (cfiPicker319) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_176:
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     A,#0x5
        RET
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiPicker319

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiCond320 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+0
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker322 Using cfiCommon1
          CFI (cfiPicker322) NoFunction
          CFI (cfiPicker322) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_168:
        INC     DPTR
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_175:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     A,#0xc
        RET
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiPicker322

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond323 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_174
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+0
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_172
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+0
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_8
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+0
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_9
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+0
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker328 Using cfiCommon1
          CFI (cfiPicker328) NoFunction
          CFI (cfiPicker328) Picker
        INC     DPTR
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_178:
        INC     DPTR
        RET
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiPicker328
//  923 
//  924 /*********************************************************************
//  925  * @fn      zclLighting_ProcessInManuBallastConfigCmds
//  926  *
//  927  * @brief   Callback from ZCL to process incoming Commands specific
//  928  *          to this cluster library on a command ID basis
//  929 
//  930  * @param   pInMsg - pointer to the incoming message
//  931  * @param   pCBs - pointer to the application callbacks
//  932  *
//  933  * @return  ZStatus_t
//  934  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  935 static ZStatus_t zclLighting_ProcessInManuBallastConfigCmds( zclIncoming_t *pInMsg,
zclLighting_ProcessInManuBallastConfigCmds:
          CFI Block cfiBlock329 Using cfiCommon0
          CFI Function zclLighting_ProcessInManuBallastConfigCmds
        CODE
//  936                                              zclLighting_AppCallbacks_t *pCBs )  //define my own function
//  937 {
        FUNCALL zclLighting_ProcessInManuBallastConfigCmds, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  938   ZStatus_t stat;
//  939 
//  940   switch ( pInMsg->hdr.commandID )
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??zclLighting_ProcessInManuBallastConfigCmds_0 & 0xFFFF
//  941   {
//  942     uint8 Tbuf[1];
//  943     case COMMAND_BALLAST_DALI_ADDRESSING:
//  944       for(uint8 i=0; (dalishortaddr-i) > 0; i++)
        MOV     ?V0 + 2,#0x0
        LJMP    ??zclLighting_ProcessInManuBallastConfigCmds_1 & 0xFFFF
//  945       {
//  946        Tbuf[0] = i;
??zclLighting_ProcessInManuBallastConfigCmds_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 2
        LCALL   ?Subroutine44 & 0xFFFF
//  947        zcl_SendCommand(pInMsg->msg->endPoint,&(pInMsg->msg->srcAddr),ZCL_CLUSTER_ID_LIGHT_LINK,
//  948                        0x43,1,1,
//  949                        0,pInMsg->hdr.manuCode,pInMsg->hdr.transSeqNum,1,Tbuf);//send a notice to controller after allocate DALI address.
//  950       }
??CrossCallReturnLabel_75:
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        ; Setup parameters for call to function zcl_SendCommand
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 4,#0x1
        MOV     ?V0 + 5,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 3,#0x1
        MOV     R0,#?V0 + 3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R0,#?V0 + 3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 3,#0x43
        MOV     R0,#?V0 + 3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R4,#0x0
        MOV     R5,#0x10
        MOV     A,?V0 + 0
        ADD     A,#0x6
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 0
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_83:
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        INC     ?V0 + 2
??zclLighting_ProcessInManuBallastConfigCmds_1:
        MOV     DPTR,#dalishortaddr
        MOVX    A,@DPTR
        MOV     ?V0 + 0,?V0 + 2
        CLR     C
        SUBB    A,?V0 + 0
        MOV     R0,A
        SUBB    A,0xE0 /* A   */
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x1
        MOV     A,R1
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      $+5
        LJMP    ??zclLighting_ProcessInManuBallastConfigCmds_2 & 0xFFFF
//  951 //       zcl_SendCommand(0x0b,&(pInMsg->msg->srcAddr),ZCL_CLUSTER_ID_LIGHT_LINK,
//  952 //                       0x43,1,1,
//  953 //                       0,pInMsg->hdr.manuCode,pInMsg->hdr.transSeqNum,1,Tbuf);//send a notice to controller after allocate DALI address.
//  954       P0DIR = 0x02;
        MOV     0xfd,#0x2
//  955       flag=!flag;
        MOV     DPTR,#flag
        MOVX    A,@DPTR
        JNZ     ??zclLighting_ProcessInManuBallastConfigCmds_3
        MOV     A,#0x1
        SJMP    ??zclLighting_ProcessInManuBallastConfigCmds_4
??zclLighting_ProcessInManuBallastConfigCmds_3:
        CLR     A
??zclLighting_ProcessInManuBallastConfigCmds_4:
        MOVX    @DPTR,A
//  956       P0_1 = flag;
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     A,0x80
        ANL     A,#0xfd
        ORL     A,R0
        MOV     0x80,A
//  957       stat = ZSuccess;
        MOV     R1,#0x0
//  958       break;
        SJMP    ??zclLighting_ProcessInManuBallastConfigCmds_5
//  959       
//  960     default:
//  961       // Unknown command
//  962       stat = ZFailure;
??zclLighting_ProcessInManuBallastConfigCmds_0:
        MOV     R1,#0x1
//  963       break;
//  964   }
//  965 
//  966   return ( stat );
??zclLighting_ProcessInManuBallastConfigCmds_5:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock329
        REQUIRE P0DIR
        REQUIRE _A_P0
//  967 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond330 Using cfiCommon0
          CFI Function zclLighting_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function zclLighting_HdlIncoming
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+0
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function zclLighting_ProcessInManuBallastConfigCmds
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+0
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker333 Using cfiCommon1
          CFI (cfiPicker333) NoFunction
          CFI (cfiPicker333) Picker
        LCALL   ??Subroutine75_0 & 0xFFFF
??CrossCallReturnLabel_149:
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiPicker333

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond334 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+0
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+0
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function zclLighting_ProcessInManuBallastConfigCmds
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+0
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker338 Using cfiCommon1
          CFI (cfiPicker338) NoFunction
          CFI (cfiPicker338) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiPicker338
//  968 /*********************************************************************
//  969  * @fn      zclLighting_ProcessInCmd_ColorControl_MoveToHue
//  970  *
//  971  * @brief   Process in the received Move To Hue Command.
//  972  *
//  973  * @param   pInMsg - pointer to the incoming message
//  974  * @param   pCBs - pointer to the application callbacks
//  975  *
//  976  * @return  ZStatus_t
//  977  */
//  978 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToHue( zclIncoming_t *pInMsg,
//  979                                                        zclLighting_AppCallbacks_t *pCBs )
//  980 {
//  981   if ( pCBs->pfnColorControl_MoveToHue )
//  982   {
//  983     zclCCMoveToHue_t cmd;
//  984 
//  985     cmd.hue = pInMsg->pData[0];
//  986     cmd.direction = pInMsg->pData[1];
//  987     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
//  988 
//  989     if ( cmd.hue > LIGHTING_COLOR_HUE_MAX )
//  990     {
//  991       return ( ZCL_STATUS_INVALID_VALUE );
//  992     }
//  993 
//  994     return ( pCBs->pfnColorControl_MoveToHue( &cmd ) );
//  995   }
//  996 
//  997   return ( ZFailure );
//  998 }
//  999 
// 1000 /*********************************************************************
// 1001  * @fn      zclLighting_ProcessInCmd_ColorControl_MoveHue
// 1002  *
// 1003  * @brief   Process in the received Move Hue Command.
// 1004  *
// 1005  * @param   pInMsg - pointer to the incoming message
// 1006  * @param   pCBs - pointer to the application callbacks
// 1007  *
// 1008  * @return  ZStatus_t
// 1009  */
// 1010 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveHue( zclIncoming_t *pInMsg,
// 1011                                                      zclLighting_AppCallbacks_t *pCBs )
// 1012 {
// 1013   zclCCMoveHue_t cmd;
// 1014 
// 1015   cmd.moveMode = pInMsg->pData[0];
// 1016   cmd.rate = pInMsg->pData[1];
// 1017 
// 1018   // If the Rate field has a value of zero, the command has no effect and
// 1019   // a Default Response command is sent in response, with the status code
// 1020   // set to INVALID_FIELD.
// 1021   if ( ( cmd.rate == 0 ) && ( cmd.moveMode != LIGHTING_MOVE_HUE_STOP ) )
// 1022   {
// 1023     return ( ZCL_STATUS_INVALID_FIELD );
// 1024   }
// 1025 
// 1026   if ( pCBs->pfnColorControl_MoveHue )
// 1027     return ( pCBs->pfnColorControl_MoveHue( &cmd ) );
// 1028 
// 1029   return ( ZFailure );
// 1030 }
// 1031 
// 1032 /*********************************************************************
// 1033  * @fn      zclLighting_ProcessInCmd_ColorControl_StepHue
// 1034  *
// 1035  * @brief   Process in the received Step Hue Command.
// 1036  *
// 1037  * @param   pInMsg - pointer to the incoming message
// 1038  * @param   pCBs - pointer to the application callbacks
// 1039  *
// 1040  * @return  ZStatus_t
// 1041  */
// 1042 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_StepHue( zclIncoming_t *pInMsg,
// 1043                                                      zclLighting_AppCallbacks_t *pCBs )
// 1044 {
// 1045   if ( pCBs->pfnColorControl_StepHue )
// 1046   {
// 1047     zclCCStepHue_t cmd;
// 1048 
// 1049     cmd.stepMode = pInMsg->pData[0];
// 1050     cmd.stepSize = pInMsg->pData[1];
// 1051     cmd.transitionTime = pInMsg->pData[2];
// 1052 
// 1053     return ( pCBs->pfnColorControl_StepHue( &cmd ) );
// 1054   }
// 1055 
// 1056   return ( ZFailure );
// 1057 }
// 1058 
// 1059 /*********************************************************************
// 1060  * @fn      zclLighting_ProcessInCmd_ColorControl_MoveToSaturation
// 1061  *
// 1062  * @brief   Process in the received Move to Saturation Command.
// 1063  *
// 1064  * @param   pInMsg - pointer to the incoming message
// 1065  * @param   pCBs - pointer to the application callbacks
// 1066  *
// 1067  * @return  ZStatus_t
// 1068  */
// 1069 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToSaturation( zclIncoming_t *pInMsg,
// 1070                                                               zclLighting_AppCallbacks_t *pCBs )
// 1071 {
// 1072   if ( pCBs->pfnColorControl_MoveToSaturation )
// 1073   {
// 1074     zclCCMoveToSaturation_t cmd;
// 1075 
// 1076     cmd.saturation = pInMsg->pData[0];
// 1077     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1078 
// 1079     if ( cmd.saturation > LIGHTING_COLOR_SAT_MAX )
// 1080     {
// 1081       return ( ZCL_STATUS_INVALID_VALUE );
// 1082     }
// 1083     return ( pCBs->pfnColorControl_MoveToSaturation( &cmd ) );
// 1084   }
// 1085 
// 1086   return ( ZFailure );
// 1087 }
// 1088 
// 1089 /*********************************************************************
// 1090  * @fn      zclLighting_ProcessInCmd_ColorControl_MoveSaturation
// 1091  *
// 1092  * @brief   Process in the received Move Saturation Command.
// 1093  *
// 1094  * @param   pInMsg - pointer to the incoming message
// 1095  * @param   pCBs - pointer to the application callbacks
// 1096  *
// 1097  * @return  ZStatus_t
// 1098  */
// 1099 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveSaturation( zclIncoming_t *pInMsg,
// 1100                                                             zclLighting_AppCallbacks_t *pCBs )
// 1101 {
// 1102   zclCCMoveSaturation_t cmd;
// 1103 
// 1104   cmd.moveMode = pInMsg->pData[0];
// 1105   cmd.rate = pInMsg->pData[1];
// 1106 
// 1107   // If the Rate field has a value of zero, the command has no effect and
// 1108   // a Default Response command is sent in response, with the status code
// 1109   // set to INVALID_FIELD.
// 1110   if ( ( cmd.rate == 0 ) && ( cmd.moveMode != LIGHTING_MOVE_SATURATION_STOP ) )
// 1111   {
// 1112     return ( ZCL_STATUS_INVALID_FIELD );
// 1113   }
// 1114 
// 1115   if ( pCBs->pfnColorControl_MoveSaturation )
// 1116     return ( pCBs->pfnColorControl_MoveSaturation( &cmd ) );
// 1117 
// 1118   return ( ZFailure );
// 1119 }
// 1120 
// 1121 /*********************************************************************
// 1122  * @fn      zclLighting_ProcessInCmd_ColorControl_StepSaturation
// 1123  *
// 1124  * @brief   Process in the received Step Saturation Command.
// 1125  *
// 1126  * @param   pInMsg - pointer to the incoming message
// 1127  * @param   pCBs - pointer to the application callbacks
// 1128  *
// 1129  * @return  ZStatus_t
// 1130  */
// 1131 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_StepSaturation( zclIncoming_t *pInMsg,
// 1132                                                             zclLighting_AppCallbacks_t *pCBs )
// 1133 {
// 1134   if ( pCBs->pfnColorControl_StepSaturation )
// 1135   {
// 1136     zclCCStepSaturation_t cmd;
// 1137 
// 1138     cmd.stepMode = pInMsg->pData[0];
// 1139     cmd.stepSize = pInMsg->pData[1];
// 1140     cmd.transitionTime = pInMsg->pData[2];
// 1141 
// 1142     return ( pCBs->pfnColorControl_StepSaturation( &cmd ) );
// 1143   }
// 1144 
// 1145   return ( ZFailure );
// 1146 }
// 1147 
// 1148 /*********************************************************************
// 1149  * @fn      zclLighting_ProcessInCmd_ColorControl_MoveToHueAndSaturation
// 1150  *
// 1151  * @brief   Process in the received Move To Hue And Saturation Command.
// 1152  *
// 1153  * @param   pInMsg - pointer to the incoming message
// 1154  * @param   pCBs - pointer to the application callbacks
// 1155  *
// 1156  * @return  ZStatus_t
// 1157  */
// 1158 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToHueAndSaturation( zclIncoming_t *pInMsg,
// 1159                                                                     zclLighting_AppCallbacks_t *pCBs )
// 1160 {
// 1161   if ( pCBs->pfnColorControl_MoveToHueAndSaturation )
// 1162   {
// 1163     zclCCMoveToHueAndSaturation_t cmd;
// 1164 
// 1165     cmd.hue = pInMsg->pData[0];
// 1166     cmd.saturation = pInMsg->pData[1];
// 1167     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
// 1168 
// 1169     if ( ( cmd.hue > LIGHTING_COLOR_HUE_MAX ) || ( cmd.saturation > LIGHTING_COLOR_SAT_MAX ) )
// 1170     {
// 1171       return ( ZCL_STATUS_INVALID_VALUE );
// 1172     }
// 1173 
// 1174     return ( pCBs->pfnColorControl_MoveToHueAndSaturation( &cmd ) );
// 1175   }
// 1176 
// 1177   return ( ZFailure );
// 1178 }
// 1179 
// 1180 /*********************************************************************
// 1181  * @fn      zclLighting_ProcessInCmd_ColorControl_MoveToColor
// 1182  *
// 1183  * @brief   Process in the received Move To Color Command.
// 1184  *
// 1185  * @param   pInMsg - pointer to the incoming message
// 1186  * @param   pCBs - pointer to the application callbacks
// 1187  *
// 1188  * @return  ZStatus_t
// 1189  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1190 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToColor( zclIncoming_t *pInMsg,
zclLighting_ProcessInCmd_ColorControl_MoveToColor:
          CFI Block cfiBlock339 Using cfiCommon0
          CFI Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
        CODE
// 1191                                                          zclLighting_AppCallbacks_t *pCBs )
// 1192 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 1193   if ( pCBs->pfnColorControl_MoveToColor )
        MOV     A,R4
        ADD     A,#0xe
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_152:
        LCALL   ??Subroutine82_0 & 0xFFFF
??CrossCallReturnLabel_181:
        JZ      ??zclLighting_ProcessInCmd_ColorControl_MoveToC_1
// 1194   {
// 1195     zclCCMoveToColor_t cmd;
// 1196 
// 1197     cmd.colorX = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_58:
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine76_0 & 0xFFFF
// 1198     cmd.colorY = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
??CrossCallReturnLabel_155:
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_63:
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        MOV     R4,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        LCALL   ?Subroutine63 & 0xFFFF
// 1199     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[4], pInMsg->pData[5] );
??CrossCallReturnLabel_158:
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_40:
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine40 & 0xFFFF
// 1200 
// 1201     if ( ( cmd.colorX > LIGHTING_COLOR_CURRENT_X_MAX ) || ( cmd.colorY > LIGHTING_COLOR_CURRENT_Y_MAX ) )
??CrossCallReturnLabel_69:
        CLR     C
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#-0x1
        JNC     ??zclLighting_ProcessInCmd_ColorControl_MoveToC_2
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     C
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#-0x1
        JC      ??zclLighting_ProcessInCmd_ColorControl_MoveToC_3
// 1202     {
// 1203       return ( ZCL_STATUS_INVALID_VALUE );
??zclLighting_ProcessInCmd_ColorControl_MoveToC_2:
        MOV     R1,#-0x79
        SJMP    ??zclLighting_ProcessInCmd_ColorControl_MoveToC_4
// 1204     }
// 1205 
// 1206     return ( pCBs->pfnColorControl_MoveToColor( &cmd ) );
??zclLighting_ProcessInCmd_ColorControl_MoveToC_3:
        ; Setup parameters for indirect call
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?CALL_IND
        SJMP    ??zclLighting_ProcessInCmd_ColorControl_MoveToC_4
// 1207   }
// 1208 
// 1209   return ( ZFailure );
??zclLighting_ProcessInCmd_ColorControl_MoveToC_1:
        MOV     R1,#0x1
??zclLighting_ProcessInCmd_ColorControl_MoveToC_4:
        MOV     A,#0x6
          CFI EndBlock cfiBlock339
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
// 1210 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock340 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Valid
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock340

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond341 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_154
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+0
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_155
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+0
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+0
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker345 Using cfiCommon1
          CFI (cfiPicker345) NoFunction
          CFI (cfiPicker345) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiPicker345

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond346 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+0
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+0
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker349 Using cfiCommon1
          CFI (cfiPicker349) NoFunction
          CFI (cfiPicker349) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_135:
        RET
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiPicker349

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond350 Using cfiCommon0
          CFI Function zclLighting_ColorControl_Send_MoveToHueCmd
          CFI Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function zclLighting_ColorControl_Send_MoveToSaturationCmd
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_114
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+0
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_115
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+0
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function zclLighting_ColorControl_Send_EnhancedMoveHueCmd
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_116
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+0
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function zclLighting_ColorControl_Send_EnhancedStepHueCmd
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_117
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+0
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function zclLighting_ColorControl_Send_ColorLoopSetCmd
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_118
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+0
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function zclLighting_ColorControl_Send_StepHueCmd
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_119
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+0
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function zclLighting_ColorControl_Send_StepSaturationCmd
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_120
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+0
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function zclLighting_ColorControl_Send_MoveToColorCmd
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_125
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+0
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function zclLighting_ColorControl_Send_StepColorCmd
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_126
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+0
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function zclLighting_ColorControl_Send_MoveToColorTemperatureCmd
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_127
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+0
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function zclLighting_ColorControl_Send_EnhancedMoveToHueCmd
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_128
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+0
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_129
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+0
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function zclLighting_ColorControl_Send_MoveHueCmd
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_130
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+0
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function zclLighting_ColorControl_Send_MoveSaturationCmd
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_131
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+0
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function zclLighting_ColorControl_Send_MoveColorCmd
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_132
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+0
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+0
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_71
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+0
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_69
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+0
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_70
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+0
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker370 Using cfiCommon1
          CFI (cfiPicker370) NoFunction
          CFI (cfiPicker370) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiPicker370

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond371 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+0
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker373 Using cfiCommon1
          CFI (cfiPicker373) NoFunction
          CFI (cfiPicker373) Picker
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_92:
        RET
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiPicker373

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond374 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_92, ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_92, ??CrossCallReturnLabel_58
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+0
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_91, ??CrossCallReturnLabel_45
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+0
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_91, ??CrossCallReturnLabel_46
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+0
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker378 Using cfiCommon1
          CFI (cfiPicker378) NoFunction
          CFI (cfiPicker378) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiPicker378

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond379 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+0
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker381 Using cfiCommon1
          CFI (cfiPicker381) NoFunction
          CFI (cfiPicker381) Picker
        MOV     R0,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiPicker381
        REQUIRE ??Subroutine81_0
        ; // Fall through to label ??Subroutine81_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine81_0:
          CFI Block cfiCond382 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_182
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+0
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+0
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker385 Using cfiCommon1
          CFI (cfiPicker385) NoFunction
          CFI (cfiPicker385) Picker
        MOV     DPL,R4
        MOV     DPH,R5
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiPicker385
        REQUIRE ??Subroutine82_0
        ; // Fall through to label ??Subroutine82_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine82_0:
          CFI Block cfiCond386 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_179
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+0
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+0
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+0
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+0
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+0
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker392 Using cfiCommon1
          CFI (cfiPicker392) NoFunction
          CFI (cfiPicker392) Picker
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_190:
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiPicker392
// 1211 
// 1212 /*********************************************************************
// 1213  * @fn      zclLighting_ProcessInCmd_ColorControl_MoveColor
// 1214  *
// 1215  * @brief   Process in the received Move Color Command.
// 1216  *
// 1217  * @param   pInMsg - pointer to the incoming message
// 1218  * @param   pCBs - pointer to the application callbacks
// 1219  *
// 1220  * @return  ZStatus_t
// 1221  */
// 1222 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveColor( zclIncoming_t *pInMsg,
// 1223                                                        zclLighting_AppCallbacks_t *pCBs )
// 1224 {
// 1225   if ( pCBs->pfnColorControl_MoveColor )
// 1226   {
// 1227     zclCCMoveColor_t cmd;
// 1228 
// 1229     cmd.rateX = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1230     cmd.rateY = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
// 1231 
// 1232     pCBs->pfnColorControl_MoveColor( &cmd );
// 1233 
// 1234     return ( ZSuccess );
// 1235   }
// 1236 
// 1237   return ( ZFailure );
// 1238 }
// 1239 
// 1240 /*********************************************************************
// 1241  * @fn      zclLighting_ProcessInCmd_ColorControl_StepColor
// 1242  *
// 1243  * @brief   Process in the received Step Color Command.
// 1244  *
// 1245  * @param   pInMsg - pointer to the incoming message
// 1246  * @param   pCBs - pointer to the application callbacks
// 1247  *
// 1248  * @return  ZStatus_t
// 1249  */
// 1250 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_StepColor( zclIncoming_t *pInMsg,
// 1251                                                        zclLighting_AppCallbacks_t *pCBs )
// 1252 {
// 1253   if ( pCBs->pfnColorControl_StepColor )
// 1254   {
// 1255     zclCCStepColor_t cmd;
// 1256 
// 1257     cmd.stepX = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1258     cmd.stepY = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
// 1259     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[4], pInMsg->pData[5] );
// 1260 
// 1261     return ( pCBs->pfnColorControl_StepColor( &cmd ) );
// 1262   }
// 1263 
// 1264   return ( ZFailure );
// 1265 }
// 1266 
// 1267 /*********************************************************************
// 1268  * @fn      zclLighting_ProcessInCmd_ColorControl_MoveToColorTemperature
// 1269  *
// 1270  * @brief   Process in the received Move to Color Temperature Command.
// 1271  *
// 1272  * @param   pInMsg - pointer to the incoming message
// 1273  * @param   pCBs - pointer to the application callbacks
// 1274  *
// 1275  * @return  ZStatus_t
// 1276  */
// 1277 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_MoveToColorTemperature( zclIncoming_t *pInMsg,
// 1278                                                                     zclLighting_AppCallbacks_t *pCBs )
// 1279 {
// 1280   if ( pCBs->pfnColorControl_MoveToColorTemperature )
// 1281   {
// 1282     zclCCMoveToColorTemperature_t cmd;
// 1283 
// 1284     cmd.colorTemperature = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1285     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
// 1286 
// 1287     if ( cmd.colorTemperature > LIGHTING_COLOR_TEMPERATURE_MAX )
// 1288     {
// 1289       return ( ZCL_STATUS_INVALID_VALUE );
// 1290     }
// 1291 
// 1292     return ( pCBs->pfnColorControl_MoveToColorTemperature( &cmd ) );
// 1293   }
// 1294 
// 1295   return ( ZFailure );
// 1296 }
// 1297 
// 1298 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 1299 /*********************************************************************
// 1300  * @fn      zclLighting_ProcessInCmd_ColorControl_EnhancedMoveToHue
// 1301  *
// 1302  * @brief   Process in the received Enhanced Move To Hue Command.
// 1303  *
// 1304  * @param   pInMsg - pointer to the incoming message
// 1305  * @param   pCBs - pointer to the application callbacks
// 1306  *
// 1307  * @return  ZStatus_t
// 1308  */
// 1309 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_EnhancedMoveToHue( zclIncoming_t *pInMsg,
// 1310                                                                zclLighting_AppCallbacks_t *pCBs )
// 1311 {
// 1312   if ( pCBs->pfnColorControl_EnhancedMoveToHue )
// 1313   {
// 1314     zclCCEnhancedMoveToHue_t cmd;
// 1315 
// 1316     cmd.enhancedHue = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1317     cmd.direction = pInMsg->pData[2];
// 1318     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[3], pInMsg->pData[4] );
// 1319 
// 1320     return ( pCBs->pfnColorControl_EnhancedMoveToHue( &cmd ) );
// 1321   }
// 1322 
// 1323   return ( ZFailure );
// 1324 }
// 1325 
// 1326 /*********************************************************************
// 1327  * @fn      zclLighting_ProcessInCmd_ColorControl_EnhancedMoveHue
// 1328  *
// 1329  * @brief   Process in the received Enhanced Move Hue Command.
// 1330  *
// 1331  * @param   pInMsg - pointer to the incoming message
// 1332  * @param   pCBs - pointer to the application callbacks
// 1333  *
// 1334  * @return  ZStatus_t
// 1335  */
// 1336 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_EnhancedMoveHue( zclIncoming_t *pInMsg,
// 1337                                                              zclLighting_AppCallbacks_t *pCBs )
// 1338 {
// 1339   zclCCEnhancedMoveHue_t cmd;
// 1340 
// 1341   cmd.moveMode = pInMsg->pData[0];
// 1342   cmd.rate = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1343 
// 1344   // If the Rate field has a value of zero, the command has no effect and
// 1345   // a Default Response command is sent in response, with the status code
// 1346   // set to INVALID_FIELD.
// 1347   if ( ( cmd.rate == 0 ) && ( cmd.moveMode != LIGHTING_MOVE_HUE_STOP ) )
// 1348   {
// 1349     return ( ZCL_STATUS_INVALID_FIELD );
// 1350   }
// 1351 
// 1352   if ( pCBs->pfnColorControl_EnhancedMoveHue )
// 1353   {
// 1354     return ( pCBs->pfnColorControl_EnhancedMoveHue( &cmd ) );
// 1355   }
// 1356 
// 1357   return ( ZFailure );
// 1358 }
// 1359 
// 1360 /*********************************************************************
// 1361  * @fn      zclLighting_ProcessInCmd_ColorControl_EnhancedStepHue
// 1362  *
// 1363  * @brief   Process in the received Enhanced Step Hue Command.
// 1364  *
// 1365  * @param   pInMsg - pointer to the incoming message
// 1366  * @param   pCBs - pointer to the application callbacks
// 1367  *
// 1368  * @return  ZStatus_t
// 1369  */
// 1370 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_EnhancedStepHue( zclIncoming_t *pInMsg,
// 1371                                                              zclLighting_AppCallbacks_t *pCBs )
// 1372 {
// 1373   if ( pCBs->pfnColorControl_EnhancedStepHue )
// 1374   {
// 1375     zclCCEnhancedStepHue_t cmd;
// 1376 
// 1377     cmd.stepMode = pInMsg->pData[0];
// 1378     cmd.stepSize = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 1379     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[3], pInMsg->pData[4] );
// 1380 
// 1381     return ( pCBs->pfnColorControl_EnhancedStepHue( &cmd ) );
// 1382   }
// 1383 
// 1384   return ( ZFailure );
// 1385 }
// 1386 
// 1387 /*********************************************************************
// 1388  * @fn      zclLighting_ProcessInCmd_ColorControl_EnhancedMoveToHueAndSaturation
// 1389  *
// 1390  * @brief   Process in the received Enhanced Move To Hue And Saturation Command.
// 1391  *
// 1392  * @param   pInMsg - pointer to the incoming message
// 1393  * @param   pCBs - pointer to the application callbacks
// 1394  *
// 1395  * @return  ZStatus_t
// 1396  */
// 1397 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_EnhancedMoveToHueAndSaturation( zclIncoming_t *pInMsg,
// 1398                                                                             zclLighting_AppCallbacks_t *pCBs )
// 1399 {
// 1400   if ( pCBs->pfnColorControl_EnhancedMoveToHueAndSaturation )
// 1401   {
// 1402     zclCCEnhancedMoveToHueAndSaturation_t cmd;
// 1403 
// 1404     cmd.enhancedHue = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1405     cmd.saturation = pInMsg->pData[2];
// 1406     cmd.transitionTime = BUILD_UINT16( pInMsg->pData[3], pInMsg->pData[4] );
// 1407 
// 1408     if ( cmd.saturation > LIGHTING_COLOR_SAT_MAX )
// 1409     {
// 1410       return ( ZCL_STATUS_INVALID_VALUE );
// 1411     }
// 1412 
// 1413     return ( pCBs->pfnColorControl_EnhancedMoveToHueAndSaturation( &cmd ) );
// 1414   }
// 1415 
// 1416   return ( ZFailure );
// 1417 }
// 1418 
// 1419 /*********************************************************************
// 1420  * @fn      zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
// 1421  *
// 1422  * @brief   Process in the received Color Loop Set Command.
// 1423  *
// 1424  * @param   pInMsg - pointer to the incoming message
// 1425  * @param   pCBs - pointer to the application callbacks
// 1426  *
// 1427  * @return  ZStatus_t
// 1428  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1429 static ZStatus_t zclLighting_ProcessInCmd_ColorControl_ColorLoopSet( zclIncoming_t *pInMsg,
zclLighting_ProcessInCmd_ColorControl_ColorLoopSet:
          CFI Block cfiBlock393 Using cfiCommon0
          CFI Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
        CODE
// 1430                                                            zclLighting_AppCallbacks_t *pCBs )
// 1431 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 8
        MOV     A,#-0x8
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
// 1432   if ( pCBs->pfnColorControl_ColorLoopSet )
        MOV     A,R4
        ADD     A,#0x1e
        MOV     R0,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R4
        ORL     A,R5
        JZ      ??zclLighting_ProcessInCmd_ColorControl_ColorLo_1
// 1433   {
// 1434     zclCCColorLoopSet_t cmd = {0};
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {{{0}}}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {{{0}}}>` & 0xff
        MOV     A,#0x8
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1435 
// 1436     cmd.updateFlags.byte = pInMsg->pData[0];
        MOV     A,R2
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_95:
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine27 & 0xFFFF
// 1437     cmd.action = pInMsg->pData[1];
??CrossCallReturnLabel_47:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine27 & 0xFFFF
// 1438     cmd.direction = pInMsg->pData[2];
??CrossCallReturnLabel_48:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1439     cmd.time = BUILD_UINT16( pInMsg->pData[3], pInMsg->pData[4] );
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine26 & 0xFFFF
// 1440     cmd.startHue = BUILD_UINT16( pInMsg->pData[5], pInMsg->pData[6] );
// 1441 
// 1442     return ( pCBs->pfnColorControl_ColorLoopSet( &cmd ) );
// 1443   }
??CrossCallReturnLabel_46:
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_64:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        MOV     R4,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_154:
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_41:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_70:
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_66:
        LCALL   ?CALL_IND
        SJMP    ??zclLighting_ProcessInCmd_ColorControl_ColorLo_2
// 1444 
// 1445   return ( ZFailure );
??zclLighting_ProcessInCmd_ColorControl_ColorLo_1:
        MOV     R1,#0x1
??zclLighting_ProcessInCmd_ColorControl_ColorLo_2:
        MOV     A,#0x8
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock393
// 1446 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond394 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+0
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker396 Using cfiCommon1
          CFI (cfiPicker396) NoFunction
          CFI (cfiPicker396) Picker
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_98:
        RET
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiPicker396

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond397 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_97, ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_97, ??CrossCallReturnLabel_13
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+0
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_97, ??CrossCallReturnLabel_14
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+0
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_97, ??CrossCallReturnLabel_15
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+0
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_98, ??CrossCallReturnLabel_65
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+0
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_98, ??CrossCallReturnLabel_66
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+0
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker403 Using cfiCommon1
          CFI (cfiPicker403) NoFunction
          CFI (cfiPicker403) Picker
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_112:
        RET
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiPicker403

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond404 Using cfiCommon0
          CFI Function zclLighting_HdlIncoming
          CFI Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_90, ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function zclLighting_HdlIncoming
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_90, ??CrossCallReturnLabel_35
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+0
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_89, ??CrossCallReturnLabel_23
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+0
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_89, ??CrossCallReturnLabel_24
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+0
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_89, ??CrossCallReturnLabel_25
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+0
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_97, ??CrossCallReturnLabel_12
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+0
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_97, ??CrossCallReturnLabel_13
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+0
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_97, ??CrossCallReturnLabel_14
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+0
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_97, ??CrossCallReturnLabel_15
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+0
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function zclLighting_ProcessInColorControlCmds
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_98, ??CrossCallReturnLabel_65
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+0
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_98, ??CrossCallReturnLabel_66
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+0
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker415 Using cfiCommon1
          CFI (cfiPicker415) NoFunction
          CFI (cfiPicker415) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiPicker415

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond416 Using cfiCommon0
          CFI Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI Conditional ??CrossCallReturnLabel_63
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+0
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker418 Using cfiCommon1
          CFI (cfiPicker418) NoFunction
          CFI (cfiPicker418) Picker
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_100:
        INC     DPTR
        RET
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiPicker418

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond419 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_100, ??CrossCallReturnLabel_63
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+0
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_100, ??CrossCallReturnLabel_64
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+0
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker422 Using cfiCommon1
          CFI (cfiPicker422) NoFunction
          CFI (cfiPicker422) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiPicker422

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond423 Using cfiCommon0
          CFI Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI Conditional ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+0
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker425 Using cfiCommon1
          CFI (cfiPicker425) NoFunction
          CFI (cfiPicker425) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_96:
        INC     DPTR
        RET
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiPicker425

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond426 Using cfiCommon0
          CFI Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI Conditional ??CrossCallReturnLabel_95
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_96, ??CrossCallReturnLabel_47
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+0
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_96, ??CrossCallReturnLabel_48
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+0
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R4
        RET
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function zclLighting_ProcessInColorControlCmds
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+0
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker432 Using cfiCommon1
          CFI (cfiPicker432) NoFunction
          CFI (cfiPicker432) Picker
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_91:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiPicker432

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond433 Using cfiCommon0
          CFI Function zclLighting_ProcessInCmd_ColorControl_MoveToColor
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function zclLighting_ProcessInCmd_ColorControl_ColorLoopSet
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+0
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker435 Using cfiCommon1
          CFI (cfiPicker435) NoFunction
          CFI (cfiPicker435) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_87:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiPicker435

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_RegisterCmdCallbacks?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_RegisterCmdCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_MoveToHueCmd?re:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_MoveToHueCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_MoveHueCmd?rela:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_MoveHueCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_StepHueCmd?rela:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_StepHueCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_MoveToSaturatio:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_MoveToSaturationCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_MoveSaturationC:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_MoveSaturationCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_StepSaturationC:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_StepSaturationCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_MoveToHueAndSat:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_MoveToHueAndSaturationCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_MoveToColorCmd?:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_MoveToColorCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_MoveColorCmd?re:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_MoveColorCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_StepColorCmd?re:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_StepColorCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_MoveToColorTemp:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_MoveToColorTemperatureCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_EnhancedMoveToH:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_EnhancedMoveToHueCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_EnhancedMoveHue:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_EnhancedMoveHueCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_EnhancedStepHue:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_EnhancedStepHueCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_EnhancedMoveToH_1:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_EnhancedMoveToHueAndSaturationCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ColorControl_Send_ColorLoopSetCmd:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ColorControl_Send_ColorLoopSetCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_FindCallbacks?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_FindCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_HdlIncoming?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_HdlIncoming

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ProcessInColorControlCmds?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ProcessInColorControlCmds

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ProcessInManuBallastConfigCmds?re:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ProcessInManuBallastConfigCmds

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ProcessInCmd_ColorControl_MoveToC:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ProcessInCmd_ColorControl_MoveToColor

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclLighting_ProcessInCmd_ColorControl_ColorLo:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclLighting_ProcessInCmd_ColorControl_ColorLoopSet

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {{{0}}}>`:
        DB 0
        DB 0
        DB 0, 0, 0, 0, 0, 0

        END
// 1447 #endif // ZCL_LIGHT_LINK_ENHANCE
// 1448 
// 1449 /****************************************************************************
// 1450 ****************************************************************************/
// 
// 4 558 bytes in segment BANKED_CODE
//   138 bytes in segment BANK_RELAYS
//     2 bytes in segment SFR_AN
//     8 bytes in segment XDATA_ROM_C
//     4 bytes in segment XDATA_Z
// 
// 4 696 bytes of CODE  memory
//     8 bytes of CONST memory
//     0 bytes of DATA  memory (+ 2 bytes shared)
//     4 bytes of XDATA memory
//
//Errors: none
//Warnings: none
