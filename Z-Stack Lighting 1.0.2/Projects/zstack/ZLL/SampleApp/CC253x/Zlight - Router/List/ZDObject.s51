///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            27/May/2014  19:13:58 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\Texas Instruments\Z-Stack Lighting             /
//                          1.0.2\Components\stack\zdo\ZDObject.c             /
//    Command line       =  -f "D:\Texas Instruments\Z-Stack Lighting         /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wRouter.cfg" (-DCPU32MHZ      /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f "D:\Texas        /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO     /
//                          -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f "D:\Texas              /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\Tools\CC2530DB\f8wZCL.cfg" "D:\Texas           /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Components\stack\zdo\ZDObject.c" -D         /
//                          FEATURE_GREEN_POWER -D SECURE=1 -D                /
//                          TC_LINKKEY_JOIN -D ZDSECMGR_TC_DEVICE_MAX=2 -D    /
//                          NV_RESTORE -D HOLD_AUTO_START -D INTER_PAN -D     /
//                          LCD_SUPPORTED=DEBUG -D ZCL_BASIC -D ZCL_READ -D   /
//                          ZCL_WRITE -D ZCL_IDENTIFY -D ZCL_ON_OFF -D        /
//                          ZCL_SCENES -D ZCL_GROUPS -D                       /
//                          ZCL_LIGHT_LINK_ENHANCE -D ZCL_LEVEL_CTRL -D       /
//                          ZCL_COLOR_CTRL -D MAX_CHANNELS_24GHZ=0x02108800   /
//                          -D xPWM_ALT2 -D xTHERMAL_SHUTDOWN -D              /
//                          ZLL_1_0_HUB_COMPATIBILITY -D DALI_LIGHT -lC       /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Zlight /
//                           - Router\List\" -lA "D:\Texas                    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Zlight /
//                           - Router\List\" --diag_suppress Pe001,Pa010 -o   /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Zlight /
//                           - Router\Obj\" -e --debug --core=plain           /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I "D:\Texas                 /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\" -I   /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\Sou /
//                          rce\" -I "D:\Texas Instruments\Z-Stack Lighting   /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          Source\" -I "D:\Texas Instruments\Z-Stack         /
//                          Lighting 1.0.2\Projects\zstack\ZLL\SampleApp\CC25 /
//                          3x\..\..\..\HomeAutomation\Source\" -I "D:\Texas  /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\HomeAutomation\SampleLight\Source\" -I         /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\ZMain\TI2530DB\" -I "D:\Texas                  /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\hal\include\" -I "D:\Texas    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\hal\target\CC2530PMP4712\"    /
//                          -I "D:\Texas Instruments\Z-Stack Lighting         /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\include\" -I "D:\Texas    /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\high_level\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\" -I      /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\single_ch /
//                          ip\" -I "D:\Texas Instruments\Z-Stack Lighting    /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\mt\" -I "D:\Texas             /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\osal\include\" -I "D:\Texas   /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\services\saddr\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\services\sdata\" -I           /
//                          "D:\Texas Instruments\Z-Stack Lighting            /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\af\" -I "D:\Texas       /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\nwk\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sapi\" -I "D:\Texas     /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sec\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\sys\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\zcl\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\stack\zdo\" -I "D:\Texas      /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\zmac\" -I "D:\Texas           /
//                          Instruments\Z-Stack Lighting                      /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\..\..\ /
//                          ..\..\..\Components\zmac\f8w\" -Ohz               /
//                          --require_prototypes                              /
//    List file          =  D:\Texas Instruments\Z-Stack Lighting             /
//                          1.0.2\Projects\zstack\ZLL\SampleApp\CC253x\Zlight /
//                           - Router\List\ZDObject.s51                       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_Z

        PUBLIC ??NLME_PermitJoiningTimeout?relay
        FUNCTION ??NLME_PermitJoiningTimeout?relay,0203H
        PUBLIC ??ZDO_AnyClusterMatches?relay
        FUNCTION ??ZDO_AnyClusterMatches?relay,0203H
        PUBLIC ??ZDO_BuildSimpleDescBuf?relay
        FUNCTION ??ZDO_BuildSimpleDescBuf?relay,0203H
        PUBLIC ??ZDO_ConvertOTAClusters?relay
        FUNCTION ??ZDO_ConvertOTAClusters?relay,0203H
        PUBLIC ??ZDO_EndDeviceTimeoutCB?relay
        FUNCTION ??ZDO_EndDeviceTimeoutCB?relay,0203H
        PUBLIC ??ZDO_Init?relay
        FUNCTION ??ZDO_Init?relay,0203H
        PUBLIC ??ZDO_ParseAddrRsp?relay
        FUNCTION ??ZDO_ParseAddrRsp?relay,0203H
        PUBLIC ??ZDO_ParseBindUnbindReq?relay
        FUNCTION ??ZDO_ParseBindUnbindReq?relay,0203H
        PUBLIC ??ZDO_ParseDeviceAnnce?relay
        FUNCTION ??ZDO_ParseDeviceAnnce?relay,0203H
        PUBLIC ??ZDO_ParseEPListRsp?relay
        FUNCTION ??ZDO_ParseEPListRsp?relay,0203H
        PUBLIC ??ZDO_ParseEndDeviceBindReq?relay
        FUNCTION ??ZDO_ParseEndDeviceBindReq?relay,0203H
        PUBLIC ??ZDO_ParseEndDeviceTimeoutRsp?relay
        FUNCTION ??ZDO_ParseEndDeviceTimeoutRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmNwkDiscRsp?relay
        FUNCTION ??ZDO_ParseMgmNwkDiscRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtBindRsp?relay
        FUNCTION ??ZDO_ParseMgmtBindRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtLqiRsp?relay
        FUNCTION ??ZDO_ParseMgmtLqiRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtNwkUpdateNotify?relay
        FUNCTION ??ZDO_ParseMgmtNwkUpdateNotify?relay,0203H
        PUBLIC ??ZDO_ParseMgmtNwkUpdateReq?relay
        FUNCTION ??ZDO_ParseMgmtNwkUpdateReq?relay,0203H
        PUBLIC ??ZDO_ParseMgmtRtgRsp?relay
        FUNCTION ??ZDO_ParseMgmtRtgRsp?relay,0203H
        PUBLIC ??ZDO_ParseNodeDescRsp?relay
        FUNCTION ??ZDO_ParseNodeDescRsp?relay,0203H
        PUBLIC ??ZDO_ParsePowerDescRsp?relay
        FUNCTION ??ZDO_ParsePowerDescRsp?relay,0203H
        PUBLIC ??ZDO_ParseServerDiscRsp?relay
        FUNCTION ??ZDO_ParseServerDiscRsp?relay,0203H
        PUBLIC ??ZDO_ParseSimpleDescBuf?relay
        FUNCTION ??ZDO_ParseSimpleDescBuf?relay,0203H
        PUBLIC ??ZDO_ParseSimpleDescRsp?relay
        FUNCTION ??ZDO_ParseSimpleDescRsp?relay,0203H
        PUBLIC ??ZDO_ParseUserDescRsp?relay
        FUNCTION ??ZDO_ParseUserDescRsp?relay,0203H
        PUBLIC ??ZDO_ProcessActiveEPReq?relay
        FUNCTION ??ZDO_ProcessActiveEPReq?relay,0203H
        PUBLIC ??ZDO_ProcessBindUnbindReq?relay
        FUNCTION ??ZDO_ProcessBindUnbindReq?relay,0203H
        PUBLIC ??ZDO_ProcessDeviceAnnce?relay
        FUNCTION ??ZDO_ProcessDeviceAnnce?relay,0203H
        PUBLIC ??ZDO_ProcessEndDeviceTimeoutReq?relay
        FUNCTION ??ZDO_ProcessEndDeviceTimeoutReq?relay,0203H
        PUBLIC ??ZDO_ProcessMatchDescReq?relay
        FUNCTION ??ZDO_ProcessMatchDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtBindReq?relay
        FUNCTION ??ZDO_ProcessMgmtBindReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtDirectJoinReq?relay
        FUNCTION ??ZDO_ProcessMgmtDirectJoinReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtLeaveReq?relay
        FUNCTION ??ZDO_ProcessMgmtLeaveReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtLqiReq?relay
        FUNCTION ??ZDO_ProcessMgmtLqiReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtNwkDiscReq?relay
        FUNCTION ??ZDO_ProcessMgmtNwkDiscReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtPermitJoinReq?relay
        FUNCTION ??ZDO_ProcessMgmtPermitJoinReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtRtgReq?relay
        FUNCTION ??ZDO_ProcessMgmtRtgReq?relay,0203H
        PUBLIC ??ZDO_ProcessNodeDescReq?relay
        FUNCTION ??ZDO_ProcessNodeDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessPowerDescReq?relay
        FUNCTION ??ZDO_ProcessPowerDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessServerDiscReq?relay
        FUNCTION ??ZDO_ProcessServerDiscReq?relay,0203H
        PUBLIC ??ZDO_ProcessSimpleDescReq?relay
        FUNCTION ??ZDO_ProcessSimpleDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessUserDescReq?relay
        FUNCTION ??ZDO_ProcessUserDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessUserDescSet?relay
        FUNCTION ??ZDO_ProcessUserDescSet?relay,0203H
        PUBLIC ??ZDO_StartDevice?relay
        FUNCTION ??ZDO_StartDevice?relay,0203H
        PUBLIC ??ZDO_UpdateAddrManager?relay
        FUNCTION ??ZDO_UpdateAddrManager?relay,0203H
        PUBLIC ??ZDO_UpdateNwkStatus?relay
        FUNCTION ??ZDO_UpdateNwkStatus?relay,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,0203H
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,0203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,021203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseEndDeviceTimeoutRsp
        FUNCTION ZDO_ParseEndDeviceTimeoutRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessEndDeviceTimeoutReq
        FUNCTION ZDO_ProcessEndDeviceTimeoutReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 66, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBWEAK __Constant_3e8
        PUBLIC apsChannelMask
        PUBLIC matchED
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
??APSME_BindRequest?relay SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
??APSME_GetRequest?relay SYMBOL "?relay", APSME_GetRequest
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
??APSME_LookupNwkAddr?relay SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
??APSME_UnBindRequest?relay SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
??APS_ReflectorInit?relay SYMBOL "?relay", APS_ReflectorInit
AddrMgrEntryLookupExt SYMBOL "AddrMgrEntryLookupExt"
??AddrMgrEntryLookupExt?relay SYMBOL "?relay", AddrMgrEntryLookupExt
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
??AddrMgrEntryLookupNwk?relay SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
??AddrMgrEntryUpdate?relay SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
??AddrMgrExtAddrSet?relay SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
??AddrMgrExtAddrValid?relay SYMBOL "?relay", AddrMgrExtAddrValid
AssocChangeNwkAddr  SYMBOL "AssocChangeNwkAddr"
??AssocChangeNwkAddr?relay SYMBOL "?relay", AssocChangeNwkAddr
AssocCount          SYMBOL "AssocCount"
??AssocCount?relay  SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
??AssocFindDevice?relay SYMBOL "?relay", AssocFindDevice
AssocGetWithExt     SYMBOL "AssocGetWithExt"
??AssocGetWithExt?relay SYMBOL "?relay", AssocGetWithExt
AssocRemove         SYMBOL "AssocRemove"
??AssocRemove?relay SYMBOL "?relay", AssocRemove
HalLcdWriteScreen   SYMBOL "HalLcdWriteScreen"
??HalLcdWriteScreen?relay SYMBOL "?relay", HalLcdWriteScreen
HalLcdWriteString   SYMBOL "HalLcdWriteString"
??HalLcdWriteString?relay SYMBOL "?relay", HalLcdWriteString
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
??NLME_CheckNewAddrSet?relay SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_DeviceJoiningInit SYMBOL "NLME_DeviceJoiningInit"
??NLME_DeviceJoiningInit?relay SYMBOL "?relay", NLME_DeviceJoiningInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
??NLME_DirectJoinRequest?relay SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
??NLME_GetCoordExtAddr?relay SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
??NLME_GetCoordShortAddr?relay SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
??NLME_GetExtAddr?relay SYMBOL "?relay", NLME_GetExtAddr
NLME_GetRequest     SYMBOL "NLME_GetRequest"
??NLME_GetRequest?relay SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
??NLME_GetShortAddr?relay SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
??NLME_IsAddressBroadcast?relay SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
??NLME_LeaveReq?relay SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkDiscoveryRequest SYMBOL "NLME_NetworkDiscoveryRequest"
??NLME_NetworkDiscoveryRequest?relay SYMBOL "?relay", NLME_NetworkDiscoveryRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
??NLME_NwkDiscReq2?relay SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
??NLME_NwkDiscTerm?relay SYMBOL "?relay", NLME_NwkDiscTerm
NLME_OrphanJoinRequest SYMBOL "NLME_OrphanJoinRequest"
??NLME_OrphanJoinRequest?relay SYMBOL "?relay", NLME_OrphanJoinRequest
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
??NLME_PermitJoiningRequest?relay SYMBOL "?relay", NLME_PermitJoiningRequest
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
??RTG_RemoveRtgEntry?relay SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_GetEmptyPendingBindReq SYMBOL "ZDApp_GetEmptyPendingBindReq"
??ZDApp_GetEmptyPendingBindReq?relay SYMBOL "?relay", ZDApp_GetEmptyPendingBindReq
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
??ZDApp_NVUpdate?relay SYMBOL "?relay", ZDApp_NVUpdate
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
??ZDP_EPRsp?relay   SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
??ZDP_GenericRsp?relay SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
??ZDP_MgmtBindRsp?relay SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
??ZDP_MgmtLqiRsp?relay SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
??ZDP_MgmtRtgRsp?relay SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
??ZDP_NodeDescMsg?relay SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
??ZDP_NwkAddrReq?relay SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
??ZDP_PowerDescMsg?relay SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
??ZDP_SendData?relay SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
??ZDP_ServerDiscRsp?relay SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
??ZDP_SimpleDescMsg?relay SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
??ZDP_UserDescRsp?relay SYMBOL "?relay", ZDP_UserDescRsp
ZMacSetReq          SYMBOL "ZMacSetReq"
??ZMacSetReq?relay  SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
??afEndPoints?relay SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
??afFindSimpleDesc?relay SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
??afNumEndPoints?relay SYMBOL "?relay", afNumEndPoints
bindAddrIndexGet    SYMBOL "bindAddrIndexGet"
??bindAddrIndexGet?relay SYMBOL "?relay", bindAddrIndexGet
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
??nwkNeighborRemoveAllStranded?relay SYMBOL "?relay", nwkNeighborRemoveAllStranded
nwkNeighborUpdateNwkAddr SYMBOL "nwkNeighborUpdateNwkAddr"
??nwkNeighborUpdateNwkAddr?relay SYMBOL "?relay", nwkNeighborUpdateNwkAddr
nwk_ScanJoiningOrphan SYMBOL "nwk_ScanJoiningOrphan"
??nwk_ScanJoiningOrphan?relay SYMBOL "?relay", nwk_ScanJoiningOrphan
osal_build_uint32   SYMBOL "osal_build_uint32"
??osal_build_uint32?relay SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
??osal_memset?relay SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
??osal_msg_allocate?relay SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
??osal_msg_find?relay SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
??osal_msg_send?relay SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
??osal_nv_read?relay SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
??osal_nv_write?relay SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
??osal_set_event?relay SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
??sAddrExtCmp?relay SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
??sAddrExtCpy?relay SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
??NLME_PermitJoiningTimeout?relay SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
??ZDO_AnyClusterMatches?relay SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
??ZDO_BuildSimpleDescBuf?relay SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
??ZDO_ConvertOTAClusters?relay SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
??ZDO_EndDeviceTimeoutCB?relay SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_Init            SYMBOL "ZDO_Init"
??ZDO_Init?relay    SYMBOL "?relay", ZDO_Init
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
??ZDO_ParseAddrRsp?relay SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
??ZDO_ParseBindUnbindReq?relay SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
??ZDO_ParseDeviceAnnce?relay SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
??ZDO_ParseEPListRsp?relay SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
??ZDO_ParseEndDeviceBindReq?relay SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseEndDeviceTimeoutRsp SYMBOL "ZDO_ParseEndDeviceTimeoutRsp"
??ZDO_ParseEndDeviceTimeoutRsp?relay SYMBOL "?relay", ZDO_ParseEndDeviceTimeoutRsp
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
??ZDO_ParseMgmNwkDiscRsp?relay SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
??ZDO_ParseMgmtBindRsp?relay SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
??ZDO_ParseMgmtLqiRsp?relay SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
??ZDO_ParseMgmtNwkUpdateNotify?relay SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
??ZDO_ParseMgmtNwkUpdateReq?relay SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
??ZDO_ParseMgmtRtgRsp?relay SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
??ZDO_ParseNodeDescRsp?relay SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
??ZDO_ParsePowerDescRsp?relay SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
??ZDO_ParseServerDiscRsp?relay SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
??ZDO_ParseSimpleDescBuf?relay SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
??ZDO_ParseSimpleDescRsp?relay SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
??ZDO_ParseUserDescRsp?relay SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
??ZDO_ProcessActiveEPReq?relay SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
??ZDO_ProcessBindUnbindReq?relay SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
??ZDO_ProcessDeviceAnnce?relay SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessEndDeviceTimeoutReq SYMBOL "ZDO_ProcessEndDeviceTimeoutReq"
??ZDO_ProcessEndDeviceTimeoutReq?relay SYMBOL "?relay", ZDO_ProcessEndDeviceTimeoutReq
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
??ZDO_ProcessMatchDescReq?relay SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
??ZDO_ProcessMgmtBindReq?relay SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
??ZDO_ProcessMgmtDirectJoinReq?relay SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
??ZDO_ProcessMgmtLeaveReq?relay SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
??ZDO_ProcessMgmtLqiReq?relay SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
??ZDO_ProcessMgmtNwkDiscReq?relay SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
??ZDO_ProcessMgmtPermitJoinReq?relay SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
??ZDO_ProcessMgmtRtgReq?relay SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
??ZDO_ProcessNodeDescReq?relay SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
??ZDO_ProcessPowerDescReq?relay SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
??ZDO_ProcessServerDiscReq?relay SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
??ZDO_ProcessSimpleDescReq?relay SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
??ZDO_ProcessUserDescReq?relay SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
??ZDO_ProcessUserDescSet?relay SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
??ZDO_StartDevice?relay SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
??ZDO_UpdateAddrManager?relay SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
??ZDO_UpdateNwkStatus?relay SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN ??APSME_BindRequest?relay
        FUNCTION ??APSME_BindRequest?relay,00H
        EXTERN ??APSME_GetRequest?relay
        FUNCTION ??APSME_GetRequest?relay,00H
        EXTERN ??APSME_LookupNwkAddr?relay
        FUNCTION ??APSME_LookupNwkAddr?relay,00H
        EXTERN ??APSME_UnBindRequest?relay
        FUNCTION ??APSME_UnBindRequest?relay,00H
        EXTERN ??APS_ReflectorInit?relay
        FUNCTION ??APS_ReflectorInit?relay,00H
        EXTERN ??AddrMgrEntryLookupExt?relay
        FUNCTION ??AddrMgrEntryLookupExt?relay,00H
        EXTERN ??AddrMgrEntryLookupNwk?relay
        FUNCTION ??AddrMgrEntryLookupNwk?relay,00H
        EXTERN ??AddrMgrEntryUpdate?relay
        FUNCTION ??AddrMgrEntryUpdate?relay,00H
        EXTERN ??AddrMgrExtAddrSet?relay
        FUNCTION ??AddrMgrExtAddrSet?relay,00H
        EXTERN ??AddrMgrExtAddrValid?relay
        FUNCTION ??AddrMgrExtAddrValid?relay,00H
        EXTERN ??AssocChangeNwkAddr?relay
        FUNCTION ??AssocChangeNwkAddr?relay,00H
        EXTERN ??AssocCount?relay
        FUNCTION ??AssocCount?relay,00H
        EXTERN ??AssocFindDevice?relay
        FUNCTION ??AssocFindDevice?relay,00H
        EXTERN ??AssocGetWithExt?relay
        FUNCTION ??AssocGetWithExt?relay,00H
        EXTERN ??AssocRemove?relay
        FUNCTION ??AssocRemove?relay,00H
        EXTERN ??HalLcdWriteScreen?relay
        FUNCTION ??HalLcdWriteScreen?relay,00H
        EXTERN ??HalLcdWriteString?relay
        FUNCTION ??HalLcdWriteString?relay,00H
        EXTERN ??NLME_CheckNewAddrSet?relay
        FUNCTION ??NLME_CheckNewAddrSet?relay,00H
        EXTERN ??NLME_DeviceJoiningInit?relay
        FUNCTION ??NLME_DeviceJoiningInit?relay,00H
        EXTERN ??NLME_DirectJoinRequest?relay
        FUNCTION ??NLME_DirectJoinRequest?relay,00H
        EXTERN ??NLME_GetCoordExtAddr?relay
        FUNCTION ??NLME_GetCoordExtAddr?relay,00H
        EXTERN ??NLME_GetCoordShortAddr?relay
        FUNCTION ??NLME_GetCoordShortAddr?relay,00H
        EXTERN ??NLME_GetExtAddr?relay
        FUNCTION ??NLME_GetExtAddr?relay,00H
        EXTERN ??NLME_GetRequest?relay
        FUNCTION ??NLME_GetRequest?relay,00H
        EXTERN ??NLME_GetShortAddr?relay
        FUNCTION ??NLME_GetShortAddr?relay,00H
        EXTERN ??NLME_IsAddressBroadcast?relay
        FUNCTION ??NLME_IsAddressBroadcast?relay,00H
        EXTERN ??NLME_LeaveReq?relay
        FUNCTION ??NLME_LeaveReq?relay,00H
        EXTERN ??NLME_NetworkDiscoveryRequest?relay
        FUNCTION ??NLME_NetworkDiscoveryRequest?relay,00H
        EXTERN ??NLME_NwkDiscReq2?relay
        FUNCTION ??NLME_NwkDiscReq2?relay,00H
        EXTERN ??NLME_NwkDiscTerm?relay
        FUNCTION ??NLME_NwkDiscTerm?relay,00H
        EXTERN ??NLME_OrphanJoinRequest?relay
        FUNCTION ??NLME_OrphanJoinRequest?relay,00H
        EXTERN ??NLME_PermitJoiningRequest?relay
        FUNCTION ??NLME_PermitJoiningRequest?relay,00H
        EXTERN ??RTG_RemoveRtgEntry?relay
        FUNCTION ??RTG_RemoveRtgEntry?relay,00H
        EXTERN ??ZDApp_GetEmptyPendingBindReq?relay
        FUNCTION ??ZDApp_GetEmptyPendingBindReq?relay,00H
        EXTERN ??ZDApp_NVUpdate?relay
        FUNCTION ??ZDApp_NVUpdate?relay,00H
        EXTERN ??ZDP_EPRsp?relay
        FUNCTION ??ZDP_EPRsp?relay,00H
        EXTERN ??ZDP_GenericRsp?relay
        FUNCTION ??ZDP_GenericRsp?relay,00H
        EXTERN ??ZDP_MgmtBindRsp?relay
        FUNCTION ??ZDP_MgmtBindRsp?relay,00H
        EXTERN ??ZDP_MgmtLqiRsp?relay
        FUNCTION ??ZDP_MgmtLqiRsp?relay,00H
        EXTERN ??ZDP_MgmtRtgRsp?relay
        FUNCTION ??ZDP_MgmtRtgRsp?relay,00H
        EXTERN ??ZDP_NodeDescMsg?relay
        FUNCTION ??ZDP_NodeDescMsg?relay,00H
        EXTERN ??ZDP_NwkAddrReq?relay
        FUNCTION ??ZDP_NwkAddrReq?relay,00H
        EXTERN ??ZDP_PowerDescMsg?relay
        FUNCTION ??ZDP_PowerDescMsg?relay,00H
        EXTERN ??ZDP_SendData?relay
        FUNCTION ??ZDP_SendData?relay,00H
        EXTERN ??ZDP_ServerDiscRsp?relay
        FUNCTION ??ZDP_ServerDiscRsp?relay,00H
        EXTERN ??ZDP_SimpleDescMsg?relay
        FUNCTION ??ZDP_SimpleDescMsg?relay,00H
        EXTERN ??ZDP_UserDescRsp?relay
        FUNCTION ??ZDP_UserDescRsp?relay,00H
        EXTERN ??ZMacSetReq?relay
        FUNCTION ??ZMacSetReq?relay,00H
        EXTERN ??afEndPoints?relay
        FUNCTION ??afEndPoints?relay,00H
        EXTERN ??afFindSimpleDesc?relay
        FUNCTION ??afFindSimpleDesc?relay,00H
        EXTERN ??afNumEndPoints?relay
        FUNCTION ??afNumEndPoints?relay,00H
        EXTERN ??bindAddrIndexGet?relay
        FUNCTION ??bindAddrIndexGet?relay,00H
        EXTERN ??nwkNeighborRemoveAllStranded?relay
        FUNCTION ??nwkNeighborRemoveAllStranded?relay,00H
        EXTERN ??nwkNeighborUpdateNwkAddr?relay
        FUNCTION ??nwkNeighborUpdateNwkAddr?relay,00H
        EXTERN ??nwk_ScanJoiningOrphan?relay
        FUNCTION ??nwk_ScanJoiningOrphan?relay,00H
        EXTERN ??osal_build_uint32?relay
        FUNCTION ??osal_build_uint32?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_msg_allocate?relay
        FUNCTION ??osal_msg_allocate?relay,00H
        EXTERN ??osal_msg_find?relay
        FUNCTION ??osal_msg_find?relay,00H
        EXTERN ??osal_msg_send?relay
        FUNCTION ??osal_msg_send?relay,00H
        EXTERN ??osal_nv_read?relay
        FUNCTION ??osal_nv_read?relay,00H
        EXTERN ??osal_nv_write?relay
        FUNCTION ??osal_nv_write?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??sAddrExtCmp?relay
        FUNCTION ??sAddrExtCmp?relay,00H
        EXTERN ??sAddrExtCpy?relay
        FUNCTION ??sAddrExtCpy?relay,00H
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupExt
        FUNCTION AddrMgrEntryLookupExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocChangeNwkAddr
        FUNCTION AssocChangeNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithExt
        FUNCTION AssocGetWithExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocRemove
        FUNCTION AssocRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteScreen
        FUNCTION HalLcdWriteScreen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteString
        FUNCTION HalLcdWriteString,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DeviceJoiningInit
        FUNCTION NLME_DeviceJoiningInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkDiscoveryRequest
        FUNCTION NLME_NetworkDiscoveryRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_OrphanJoinRequest
        FUNCTION NLME_OrphanJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_GetEmptyPendingBindReq
        FUNCTION ZDApp_GetEmptyPendingBindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 66, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bindAddrIndexGet
        FUNCTION bindAddrIndexGet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN devState
        EXTERN epList
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwkNeighborUpdateNwkAddr
        FUNCTION nwkNeighborUpdateNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_ScanJoiningOrphan
        FUNCTION nwk_ScanJoiningOrphan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN pNwkNotMyChildListDelete
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgChildAgingEnable
        EXTERN zgDefaultChannelList
        EXTERN zgDefaultStartingScanDuration

// D:\Texas Instruments\Z-Stack Lighting 1.0.2\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2013-10-08 11:15:50 -0700 (Tue, 08 Oct 2013) $
//    4   Revision:       $Revision: 35605 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2013 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #if defined( LCD_SUPPORTED )
//   67   #include "OnBoard.h"
//   68 #endif
//   69 
//   70 /* HAL */
//   71 //#include "hal_lcd.h"
//   72 #include "hal_oled.h"
//   73 
//   74 /*********************************************************************
//   75  * MACROS
//   76  */
//   77 
//   78 /*********************************************************************
//   79  * CONSTANTS
//   80  */
//   81 // NLME Stub Implementations
//   82 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   83 
//   84 /*********************************************************************
//   85  * TYPEDEFS
//   86  */
//   87 #if defined ( REFLECTOR )
//   88 typedef struct
//   89 {
//   90   byte SrcTransSeq;
//   91   zAddrType_t SrcAddr;
//   92   uint16 LocalCoordinator;
//   93   byte epIntf;
//   94   uint16 ProfileID;
//   95   byte numInClusters;
//   96   uint16 *inClusters;
//   97   byte numOutClusters;
//   98   uint16 *outClusters;
//   99   byte SecurityUse;
//  100   byte status;
//  101 } ZDO_EDBind_t;
//  102 #endif // defined ( REFLECTOR )
//  103 
//  104 enum
//  105 {
//  106   ZDMATCH_INIT,           // Initialized
//  107   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  108   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  109 };
//  110 
//  111 enum
//  112 {
//  113   ZDMATCH_SENDING_NOT,
//  114   ZDMATCH_SENDING_UNBIND,
//  115   ZDMATCH_SENDING_BIND
//  116 };
//  117 
//  118 /*********************************************************************
//  119  * GLOBAL VARIABLES
//  120  */
//  121 
//  122 /*********************************************************************
//  123  * EXTERNAL VARIABLES
//  124  */
//  125 
//  126 /*********************************************************************
//  127  * EXTERNAL FUNCTIONS
//  128  */
//  129 
//  130 /*********************************************************************
//  131  * LOCAL VARIABLES
//  132  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  133 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  134 
//  135 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  136 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  137 #endif
//  138 
//  139 #if defined ( MANAGED_SCAN )
//  140   uint32 managedScanNextChannel = 0;
//  141   uint32 managedScanChannelMask = 0;
//  142   uint8  managedScanTimesPerChannel = 0;
//  143 #endif
//  144 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  145 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  146 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  147 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  148 
//  149 /*********************************************************************
//  150  * LOCAL FUNCTIONS
//  151  */
//  152 static void ZDODeviceSetup( void );
//  153 #if defined ( MANAGED_SCAN )
//  154   static void ZDOManagedScan_Next( void );
//  155 #endif
//  156 #if defined ( REFLECTOR )
//  157   static void ZDO_RemoveEndDeviceBind( void );
//  158   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  159 #endif
//  160 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  161   static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  162                                        byte numList2, uint16 *list2, uint16 *pMatches );
//  163   static void ZDO_RemoveMatchMemory( void );
//  164   static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  165   static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  166 #endif
//  167 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  168 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  169 
//  170 /*********************************************************************
//  171  * @fn          ZDO_Init
//  172  *
//  173  * @brief       ZDObject and ZDProfile initialization.
//  174  *
//  175  * @param       none
//  176  *
//  177  * @return      none
//  178  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  179 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  180 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_DeviceJoiningInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  181   // Initialize ZD items
//  182   #if defined ( REFLECTOR )
//  183   ZDO_EDBind = NULL;
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  184   #endif
//  185 
//  186   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  187   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#AIB_apsUseExtendedPANID & 0xff
        MOV     R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV     R2,#ZDO_UseExtendedPANID & 0xff
        MOV     R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL   ??sAddrExtCpy?relay
//  188 
//  189   // Setup the device - type of device to create.
//  190   ZDODeviceSetup();
        ; Setup parameters for call to function APS_ReflectorInit
        LCALL   ??APS_ReflectorInit?relay
        ; Setup parameters for call to function NLME_DeviceJoiningInit
        LCALL   ??NLME_DeviceJoiningInit?relay
          CFI EndBlock cfiBlock0
//  191 }
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock1
//  192 
//  193 #if defined ( MANAGED_SCAN )
//  194 /*********************************************************************
//  195  * @fn      ZDOManagedScan_Next()
//  196  *
//  197  * @brief   Setup a managed scan.
//  198  *
//  199  * @param   none
//  200  *
//  201  * @return  none
//  202  */
//  203 static void ZDOManagedScan_Next( void )
//  204 {
//  205   // Is it the first time
//  206   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  207   {
//  208     // Setup the defaults
//  209     managedScanNextChannel  = 1;
//  210 
//  211     while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  212       managedScanNextChannel <<= 1;
//  213 
//  214     managedScanChannelMask = managedScanNextChannel;
//  215     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  216   }
//  217   else
//  218   {
//  219     // Do we need to go to the next channel
//  220     if ( managedScanTimesPerChannel == 0 )
//  221     {
//  222       // Find next active channel
//  223       managedScanChannelMask  = managedScanNextChannel;
//  224       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  225     }
//  226     else
//  227     {
//  228       managedScanTimesPerChannel--;
//  229 
//  230       if ( managedScanTimesPerChannel == 0 )
//  231       {
//  232         managedScanNextChannel  <<= 1;
//  233         while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  234           managedScanNextChannel <<= 1;
//  235 
//  236         if ( managedScanNextChannel == 0 )
//  237           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  238       }
//  239     }
//  240   }
//  241 }
//  242 #endif // MANAGED_SCAN
//  243 
//  244 /*********************************************************************
//  245  * @fn      ZDODeviceSetup()
//  246  *
//  247  * @brief   Call set functions depending on the type of device compiled.
//  248  *
//  249  * @param   none
//  250  *
//  251  * @return  none
//  252  */
//  253 static void ZDODeviceSetup( void )
//  254 {
//  255   if ( ZG_BUILD_COORDINATOR_TYPE )
//  256   {
//  257     NLME_CoordinatorInit();
//  258   }
//  259 
//  260 #if defined ( REFLECTOR )
//  261   APS_ReflectorInit();
//  262 #endif
//  263 
//  264   if ( ZG_BUILD_JOINING_TYPE )
//  265   {
//  266     NLME_DeviceJoiningInit();
//  267   }
//  268 }
//  269 
//  270 /*********************************************************************
//  271  * @fn          ZDO_StartDevice
//  272  *
//  273  * @brief       This function starts a device in a network.
//  274  *
//  275  * @param       logicalType     - Device type to start
//  276  *              startMode       - indicates mode of device startup
//  277  *              beaconOrder     - indicates time betwen beacons
//  278  *              superframeOrder - indicates length of active superframe
//  279  *
//  280  * @return      none
//  281  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  282 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  283 {
        FUNCALL ZDO_StartDevice, NLME_NetworkDiscoveryRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, nwk_ScanJoiningOrphan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_OrphanJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 1,R1
        MOV     ?V0 + 0,R2
//  284   ZStatus_t ret;
//  285 #if defined ( ZIGBEE_FREQ_AGILITY )
//  286   static uint8 discRetries = 0;
//  287 #endif
//  288 #if defined ( ZIGBEE_COMMISSIONING )
//  289   static uint8 scanCnt = 0;
//  290 #endif
//  291 
//  292   ret = ZUnsupportedMode;
//  293 
//  294   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
//  295   {
//  296     if ( startMode == MODE_HARD )
//  297     {
//  298       devState = DEV_COORD_STARTING;
//  299       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, zgDefaultChannelList,
//  300                                           zgDefaultStartingScanDuration, beaconOrder,
//  301                                           superframeOrder, false );
//  302     }
//  303     else if ( startMode == MODE_RESUME )
//  304     {
//  305       // Just start the coordinator
//  306       devState = DEV_COORD_STARTING;
//  307       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
//  308     }
//  309     else
//  310     {
//  311 #if defined( LCD_SUPPORTED )
//  312       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  313 #endif
//  314     }
//  315   }
//  316 
//  317   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
        MOV     A,#0x1
        XRL     A,?V0 + 1
        JZ      ??ZDO_StartDevice_0
        MOV     A,#0x2
        XRL     A,?V0 + 1
        JNZ     ??ZDO_StartDevice_1
//  318   {
//  319     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
??ZDO_StartDevice_0:
        MOV     A,R2
        JZ      ??ZDO_StartDevice_2
        MOV     A,#0x3
        XRL     A,?V0 + 0
        JNZ     ??ZDO_StartDevice_3
//  320     {
//  321       devState = DEV_NWK_DISC;
??ZDO_StartDevice_2:
        MOV     DPTR,#devState
        MOV     A,#0x2
        LCALL   ?Subroutine40 & 0xFFFF
//  322 
//  323   #if defined( MANAGED_SCAN )
//  324       ZDOManagedScan_Next();
//  325       ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  326   #else
//  327       ret = NLME_NetworkDiscoveryRequest( zgDefaultChannelList, zgDefaultStartingScanDuration );
??CrossCallReturnLabel_71:
        LCALL   ?XLOAD_R2345
        LCALL   ??NLME_NetworkDiscoveryRequest?relay
//  328     #if defined ( ZIGBEE_FREQ_AGILITY )
//  329       if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  330             ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
        MOV     DPTR,#ZDO_Config_Node_Descriptor + 2
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        JC      ??CrossCallReturnLabel_42
        MOV     A,R1
        JNZ     ??CrossCallReturnLabel_42
        MOV     DPTR,#??discRetries
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
        XRL     A,#0x4
        JNZ     ??CrossCallReturnLabel_42
//  331       {
//  332         // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  333         // change will not be recieved. On these devices or routers that have
//  334         // lost the network, an active scan shall be conducted on the Default
//  335         // Channel list using the extended PANID to find the network. If the
//  336         // extended PANID isn't found using the Default Channel list, an scan
//  337         // should be completed using all channels.
//  338         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
        LCALL   ?Subroutine29 & 0xFFFF
//  339       }
//  340     #endif // ZIGBEE_FREQ_AGILITY
//  341     #if defined ( ZIGBEE_COMMISSIONING )
//  342       if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
??CrossCallReturnLabel_42:
        MOV     A,#0x3
        XRL     A,?V0 + 0
        JNZ     ??CrossCallReturnLabel_43
        MOV     DPTR,#??scanCnt
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        ADD     A,R0
        MOVX    @DPTR,A
        MOV     A,R0
        CLR     C
        SUBB    A,#0x5
        JC      ??CrossCallReturnLabel_43
//  343       {
//  344         // When ApsUseExtendedPanID is commissioned to a non zero value via
//  345         // application specific means, the device shall conduct an active scan
//  346         // on the Default Channel list and join the PAN with the same
//  347         // ExtendedPanID. If the PAN is not found, an scan should be completed
//  348         // on all channels.
//  349         // When devices rejoin the network and the PAN is not found from
//  350         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
        LCALL   ?Subroutine29 & 0xFFFF
//  351       }
//  352     #endif // ZIGBEE_COMMISSIONING
//  353   #endif
//  354     }
//  355     else if ( startMode == MODE_RESUME )
//  356     {
//  357       if ( logicalType == NODETYPE_ROUTER )
//  358       {
//  359         ZMacScanCnf_t scanCnf;
//  360         devState = DEV_NWK_ORPHAN;
//  361 
//  362         /* if router and nvram is available, fake successful orphan scan */
//  363         scanCnf.hdr.Status = ZSUCCESS;
//  364         scanCnf.ScanType = ZMAC_ORPHAN_SCAN;
//  365         scanCnf.UnscannedChannels = 0;
//  366         scanCnf.ResultListSize = 0;
//  367         nwk_ScanJoiningOrphan(&scanCnf);
//  368 
//  369         ret = ZSuccess;
//  370       }
//  371       else
//  372       {
//  373         devState = DEV_NWK_ORPHAN;
//  374         ret = NLME_OrphanJoinRequest( zgDefaultChannelList,
//  375                                       zgDefaultStartingScanDuration );
//  376       }
//  377     }
//  378     else
//  379     {
//  380 #if defined( LCD_SUPPORTED )
//  381       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  382 #endif
//  383     }
//  384   }
//  385 
//  386   if ( ret != ZSuccess )
??CrossCallReturnLabel_43:
        MOV     A,R1
        JZ      ??ZDO_StartDevice_4
//  387   {
//  388     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_1:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
//  389   }
//  390 }
??ZDO_StartDevice_4:
        MOV     A,#0xb
        LJMP    ??Subroutine143_0 & 0xFFFF
??ZDO_StartDevice_3:
        MOV     A,#0x1
        XRL     A,?V0 + 0
        JNZ     ??ZDO_StartDevice_5
        MOV     A,#0x1
        XRL     A,?V0 + 1
        MOV     DPTR,#devState
        JNZ     ??ZDO_StartDevice_6
        MOV     A,#0xa
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_60:
        LCALL   ??nwk_ScanJoiningOrphan?relay
        SJMP    ??ZDO_StartDevice_4
??ZDO_StartDevice_6:
        MOV     A,#0xa
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_72:
        LCALL   ?XLOAD_R2345
        LCALL   ??NLME_OrphanJoinRequest?relay
        SJMP    ??CrossCallReturnLabel_43
??ZDO_StartDevice_5:
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "MODE unknown">` & 0xff
        MOV     R5,#(`?<Constant "MODE unknown">` >> 8) & 0xff
        MOV     R2,#`?<Constant "StartDevice ERR">` & 0xff
        MOV     R3,#(`?<Constant "StartDevice ERR">` >> 8) & 0xff
        LCALL   ??HalLcdWriteScreen?relay
        SJMP    ??ZDO_StartDevice_1
          CFI EndBlock cfiBlock2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond3 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond4 Using cfiCommon0
          CFI (cfiCond4) Function ZDO_StartDevice
          CFI (cfiCond4) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond4) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond4) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond4) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond4) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond4) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond4) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond4) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond4) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond4) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond4) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond4) CFA_SP SP+0
          CFI (cfiCond4) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker5 Using cfiCommon1
          CFI (cfiPicker5) NoFunction
          CFI (cfiPicker5) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function NLME_NetworkDiscoveryRequest
        ; Setup parameters for call to function NLME_OrphanJoinRequest
        MOV     DPTR,#zgDefaultStartingScanDuration
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#zgDefaultChannelList
        RET
          CFI EndBlock cfiCond3
          CFI EndBlock cfiCond4
          CFI EndBlock cfiPicker5

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond6 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function ZDO_StartDevice
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+0
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        MOV     DPTR,#zgDefaultChannelList
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x78
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x10
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x2
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??discRetries:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??scanCnt:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  391 
//  392 /**************************************************************************************************
//  393  * @fn          zdoSendStateChangeMsg
//  394  *
//  395  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  396  *
//  397  * input parameters
//  398  *
//  399  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  400  * @param       state - The current device state.
//  401  *
//  402  * output parameters
//  403  *
//  404  * None.
//  405  *
//  406  * @return      None.
//  407  **************************************************************************************************
//  408  */
//  409 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
//  410 {
//  411   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
//  412 
//  413   if (NULL == pMsg)
//  414   {
//  415     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
//  416     {
//  417       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  418       // try again later when more Heap may be available.
//  419       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
//  420     }
//  421     else
//  422     {
//  423       pMsg->event = ZDO_STATE_CHANGE;
//  424       pMsg->status = state;
//  425 
//  426       (void)osal_msg_send(taskId, (uint8 *)pMsg);
//  427     }
//  428   }
//  429   else
//  430   {
//  431     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  432     pMsg->status = state;
//  433   }
//  434 }
//  435 
//  436 /**************************************************************************************************
//  437  * @fn          ZDO_UpdateNwkStatus
//  438  *
//  439  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  440  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  441  *              than one registered EndPoint, it will only receive one notification per state
//  442  *              change. Although the device may go through a sequence of state changes, the
//  443  *              Application task may only receive notification of the final, steady-state state
//  444  *              because it has the lowest priority and never even runs to receive the intermediate
//  445  *              state change notifications.
//  446  *
//  447  * input parameters
//  448  *
//  449  * @param       state - The current device state.
//  450  *
//  451  * output parameters
//  452  *
//  453  * None.
//  454  *
//  455  * @return      None.
//  456  **************************************************************************************************
//  457  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  458 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  459 {
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 1,R1
//  460   epList_t *pItem = epList;
        MOV     DPTR,#epList
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??CrossCallReturnLabel_146
//  461 
//  462   while (pItem != NULL)
//  463   {
//  464     if (pItem->epDesc->endPoint != ZDO_EP)
//  465     {
//  466       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
??ZDO_UpdateNwkStatus_0:
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
//  467     }
//  468 
//  469     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_1:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_UpdateNwkStatus_2
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_239:
        MOVX    A,@DPTR
        JZ      ??ZDO_UpdateNwkStatus_1
        INC     DPTR
        LCALL   ??Subroutine164_0 & 0xFFFF
//  470   }
??CrossCallReturnLabel_340:
        MOV     ?V0 + 0,A
        ; Setup parameters for call to function osal_msg_find
        MOV     R2,#-0x2f
        MOV     R1,A
        LCALL   ??osal_msg_find?relay
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??ZDO_UpdateNwkStatus_0
        ; Setup parameters for call to function osal_msg_allocate
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   ??osal_msg_allocate?relay
        MOV     A,R2
        ORL     A,R3
        JNZ     ??ZDO_UpdateNwkStatus_3
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x10
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
        SJMP    ??ZDO_UpdateNwkStatus_1
??ZDO_UpdateNwkStatus_3:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2f
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_msg_send
        MOV     R1,?V0 + 0
        LCALL   ??osal_msg_send?relay
        SJMP    ??ZDO_UpdateNwkStatus_1
//  471 #if defined MT_ZDO_CB_FUNC
//  472   zdoSendStateChangeMsg(state, MT_TaskID);
//  473 #endif
//  474 
//  475   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_2:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine31 & 0xFFFF
//  476   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_46:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay
          CFI EndBlock cfiBlock9
//  477 }
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock10

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond11 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_239
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond12) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond12) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond12) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond12) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond12) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond12) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond12) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond12) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond12) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond12) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond12) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+0
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker13 Using cfiCommon1
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiPicker13
        REQUIRE ??Subroutine141_0
        ; // Fall through to label ??Subroutine141_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine141_0:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_238
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDO_UpdateNwkStatus
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+0
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond16) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond16) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond16) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond16) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond16) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond16) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+0
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker17 Using cfiCommon1
          CFI (cfiPicker17) NoFunction
          CFI (cfiPicker17) Picker
        MOVX    A,@DPTR
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiPicker17
        REQUIRE ??Subroutine142_0
        ; // Fall through to label ??Subroutine142_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine142_0:
          CFI Block cfiCond18 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_237
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+0
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond20 Using cfiCommon0
          CFI (cfiCond20) Function ZDO_UpdateNwkStatus
          CFI (cfiCond20) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond20) CFA_SP SP+0
          CFI (cfiCond20) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond21) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond21) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond21) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond21) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond21) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond21) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond21) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+0
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker22 Using cfiCommon1
          CFI (cfiPicker22) NoFunction
          CFI (cfiPicker22) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiPicker22
//  478 
//  479 #if defined ( REFLECTOR )
//  480 /*********************************************************************
//  481  * @fn          ZDO_RemoveEndDeviceBind
//  482  *
//  483  * @brief       Remove the end device bind
//  484  *
//  485  * @param  none
//  486  *
//  487  * @return      none
//  488  */
//  489 static void ZDO_RemoveEndDeviceBind( void )
//  490 {
//  491   if ( ZDO_EDBind != NULL )
//  492   {
//  493     // Free the RAM
//  494     if ( ZDO_EDBind->inClusters != NULL )
//  495     {
//  496       osal_mem_free( ZDO_EDBind->inClusters );
//  497     }
//  498     if ( ZDO_EDBind->outClusters != NULL )
//  499     {
//  500       osal_mem_free( ZDO_EDBind->outClusters );
//  501     }
//  502     osal_mem_free( ZDO_EDBind );
//  503     ZDO_EDBind = NULL;
//  504   }
//  505 }
//  506 #endif // REFLECTOR
//  507 
//  508 #if defined ( REFLECTOR )
//  509 /*********************************************************************
//  510  * @fn          ZDO_RemoveEndDeviceBind
//  511  *
//  512  * @brief       Remove the end device bind
//  513  *
//  514  * @param  none
//  515  *
//  516  * @return      none
//  517  */
//  518 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  519 {
//  520   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  521 
//  522 #if defined( LCD_SUPPORTED )
//  523   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  524   if ( Status == ZDP_SUCCESS )
//  525   {
//  526     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  527   }
//  528   else
//  529   {
//  530     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  531   }
//  532 #endif
//  533 
//  534 }
//  535 #endif // REFLECTOR
//  536 
//  537 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  538 /*********************************************************************
//  539  * @fn          ZDO_CompareClusterLists
//  540  *
//  541  * @brief       Compare one list to another list
//  542  *
//  543  * @param       numList1 - number of items in list 1
//  544  * @param       list1 - first list of cluster IDs
//  545  * @param       numList2 - number of items in list 2
//  546  * @param       list2 - second list of cluster IDs
//  547  * @param       pMatches - buffer to put matches
//  548  *
//  549  * @return      number of matches
//  550  */
//  551 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  552                           byte numList2, uint16 *list2, uint16 *pMatches )
//  553 {
//  554   byte x, y;
//  555   uint16 z;
//  556   byte numMatches = 0;
//  557 
//  558   // Check the first in against the seconds out
//  559   for ( x = 0; x < numList1; x++ )
//  560   {
//  561     for ( y = 0; y < numList2; y++ )
//  562     {
//  563       z = list2[y];
//  564       if ( list1[x] == z )
//  565       {
//  566         pMatches[numMatches++] = z;
//  567       }
//  568     }
//  569   }
//  570 
//  571   return ( numMatches );
//  572 }
//  573 #endif // ZG_BUILD_COORDINATOR_TYPE
//  574 
//  575 /*********************************************************************
//  576  * Utility functions
//  577  */
//  578 
//  579 /*********************************************************************
//  580  * @fn          ZDO_CompareByteLists
//  581  *
//  582  * @brief       Compares two lists for matches.
//  583  *
//  584  * @param       ACnt  - number of entries in list A
//  585  * @param       AList  - List A
//  586  * @param       BCnt  - number of entries in list B
//  587  * @param       BList  - List B
//  588  *
//  589  * @return      true if a match is found
//  590  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  591 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  592 {
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 3,R1
//  593   byte x, y;
//  594 
//  595   for ( x = 0; x < ACnt; x++ )
        MOV     R5,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_314:
        SJMP    ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC     R5
??ZDO_AnyClusterMatches_0:
        MOV     A,R5
        CLR     C
        SUBB    A,?V0 + 3
        JNC     ??ZDO_AnyClusterMatches_2
//  596   {
//  597     for ( y = 0; y < BCnt; y++ )
        MOV     ?V0 + 2,#0x0
        SJMP    ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC     ?V0 + 2
??ZDO_AnyClusterMatches_3:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R4
        JNC     ??ZDO_AnyClusterMatches_1
//  598     {
//  599       if ( AList[x] == BList[y] )
        MOV     A,R5
        CLR     C
        RLC     A
        MOV     R6,A
        CLR     A
        RLC     A
        MOV     R7,A
        MOV     A,R2
        ADD     A,R6
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R7
        MOV     DPH,A
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_136:
        MOV     ?V0 + 1,A
        MOV     A,?V0 + 2
        CLR     C
        RLC     A
        MOV     R6,A
        CLR     A
        RLC     A
        MOV     R7,A
        MOV     A,R0
        ADD     A,R6
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??ZDO_AnyClusterMatches_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_AnyClusterMatches_5:
        JNZ     ??ZDO_AnyClusterMatches_4
//  600       {
//  601         return true;
        MOV     R1,#0x1
        SJMP    ??ZDO_AnyClusterMatches_6
//  602       }
//  603     }
//  604   }
//  605 
//  606   return false;
??ZDO_AnyClusterMatches_2:
        MOV     R1,#0x0
??ZDO_AnyClusterMatches_6:
        SJMP    ?Subroutine2
          CFI EndBlock cfiBlock23
//  607 }
//  608 
//  609 /*********************************************************************
//  610  * Callback functions from ZDProfile
//  611  */
//  612 
//  613 /*********************************************************************
//  614  * @fn          ZDO_ProcessNodeDescReq
//  615  *
//  616  * @brief       This function processes and responds to the
//  617  *              Node_Desc_req message.
//  618  *
//  619  * @param       inMsg - incoming message
//  620  *
//  621  * @return      none
//  622  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  623 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  624 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine50 & 0xFFFF
//  625   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  626   NodeDescriptorFormat_t *desc = NULL;
//  627 
//  628   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_94:
        JNZ     ??ZDO_ProcessNodeDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ     ??ZDO_ProcessNodeDescReq_1
//  629   {
//  630     desc = &ZDO_Config_Node_Descriptor;
//  631   }
//  632 
//  633   if ( desc != NULL )
//  634   {
//  635     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV     ?V0 + 0,#ZDO_Config_Node_Descriptor & 0xff
        MOV     ?V0 + 1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   ??ZDP_NodeDescMsg?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessNodeDescReq_2
//  636   }
//  637   else
//  638   {
//  639     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  640               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine53 & 0xFFFF
//  641   }
??CrossCallReturnLabel_98:
        LCALL   ??ZDP_GenericRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  642 }
??ZDO_ProcessNodeDescReq_2:
        SJMP    ??Subroutine144_0
          CFI EndBlock cfiBlock24
//  643 
//  644 /*********************************************************************
//  645  * @fn          ZDO_ProcessPowerDescReq
//  646  *
//  647  * @brief       This function processes and responds to the
//  648  *              Node_Power_req message.
//  649  *
//  650  * @param       inMsg  - incoming request
//  651  *
//  652  * @return      none
//  653  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  654 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  655 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine50 & 0xFFFF
//  656   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  657   NodePowerDescriptorFormat_t *desc = NULL;
//  658 
//  659   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_95:
        JNZ     ??ZDO_ProcessPowerDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ     ??ZDO_ProcessPowerDescReq_1
//  660   {
//  661     desc = &ZDO_Config_Power_Descriptor;
//  662   }
//  663 
//  664   if ( desc != NULL )
//  665   {
//  666     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV     ?V0 + 0,#ZDO_Config_Power_Descriptor & 0xff
        MOV     ?V0 + 1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   ??ZDP_PowerDescMsg?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessPowerDescReq_2
//  667   }
//  668   else
//  669   {
//  670     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  671               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0 + 0,#0x3
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine53 & 0xFFFF
//  672   }
??CrossCallReturnLabel_99:
        LCALL   ??ZDP_GenericRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  673 }
??ZDO_ProcessPowerDescReq_2:
        SJMP    ??Subroutine144_0
          CFI EndBlock cfiBlock25

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond26 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+0
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker28 Using cfiCommon1
          CFI (cfiPicker28) NoFunction
          CFI (cfiPicker28) Picker
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_384:
        MOV     A,R7
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_286:
        MOV     R5,A
        MOV     R4,#-0x80
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_220:
        MOV     A,R6
        ADD     A,#0xf
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_337:
        RET
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiPicker28

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond29 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond30 Using cfiCommon0
          CFI (cfiCond30) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond30) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond30) CFA_SP SP+0
          CFI (cfiCond30) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker31 Using cfiCommon1
          CFI (cfiPicker31) NoFunction
          CFI (cfiPicker31) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_197:
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R4
        RET
          CFI EndBlock cfiCond29
          CFI EndBlock cfiCond30
          CFI EndBlock cfiPicker31
//  674 
//  675 /*********************************************************************
//  676  * @fn          ZDO_ProcessSimpleDescReq
//  677  *
//  678  * @brief       This function processes and responds to the
//  679  *              Simple_Desc_req message.
//  680  *
//  681  * @param       inMsg - incoming message (request)
//  682  *
//  683  * @return      none
//  684  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock32 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
          CFI EndBlock cfiBlock32
        REQUIRE ??Subroutine143_0
        ; // Fall through to label ??Subroutine143_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine143_0:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock33
        REQUIRE ??Subroutine144_0
        ; // Fall through to label ??Subroutine144_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine144_0:
          CFI Block cfiBlock34 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock34

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  685 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock35 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  686 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  687   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  688   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_246:
        MOV     A,R7
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_111:
        MOV     R2,A
//  689   byte endPoint = inMsg->asdu[2];
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
//  690   byte free = false;
        MOV     ?V0 + 1,#0x0
//  691   byte stat = ZDP_SUCCESS;
        MOV     ?V0 + 0,#0x0
//  692 
//  693   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ      ??ZDO_ProcessSimpleDescReq_0
        MOV     A,#-0x1
        XRL     A,R1
        JNZ     ??ZDO_ProcessSimpleDescReq_1
//  694   {
//  695     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV     ?V0 + 0,#-0x7e
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  696   }
//  697   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_ProcessSimpleDescReq_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ     ??ZDO_ProcessSimpleDescReq_4
//  698   {
//  699     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??afFindSimpleDesc?relay
        MOV     A,R1
        MOV     ?V0 + 1,A
//  700     if ( sDesc == NULL )
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_358:
        JNZ     ??ZDO_ProcessSimpleDescReq_2
//  701     {
//  702       stat = ZDP_NOT_ACTIVE;
        MOV     ?V0 + 0,#-0x7d
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  703     }
//  704   }
//  705   else
//  706   {
//  707     if ( ZSTACK_ROUTER_BUILD )
//  708     {
//  709       stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessSimpleDescReq_4:
        MOV     ?V0 + 0,#-0x7f
//  710     }
//  711     else if ( ZSTACK_END_DEVICE_BUILD )
//  712     {
//  713       stat = ZDP_INVALID_REQTYPE;
//  714     }
//  715   }
//  716 
//  717   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_214:
        MOV     R1,?V0 + 0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ZDP_SimpleDescMsg?relay
//  718 
//  719   if ( free && sDesc )
        MOV     A,?V0 + 1
        JZ      ??ZDO_ProcessSimpleDescReq_5
        LCALL   ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_359:
        JZ      ??ZDO_ProcessSimpleDescReq_5
//  720   {
//  721     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??Subroutine158_0 & 0xFFFF
//  722   }
??CrossCallReturnLabel_305:
        LCALL   ??osal_mem_free?relay
//  723 }
??ZDO_ProcessSimpleDescReq_5:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock35

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond36 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_241
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+0
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker38 Using cfiCommon1
          CFI (cfiPicker38) NoFunction
          CFI (cfiPicker38) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiPicker38
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        REQUIRE ??Subroutine145_0
        ; // Fall through to label ??Subroutine145_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine145_0:
          CFI Block cfiCond39 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_246
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+0
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+0
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker42 Using cfiCommon1
          CFI (cfiPicker42) NoFunction
          CFI (cfiPicker42) Picker
        MOV     A,R6
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiPicker42
        REQUIRE ??Subroutine146_0
        ; // Fall through to label ??Subroutine146_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine146_0:
          CFI Block cfiCond43 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+0
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+0
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+0
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+0
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+0
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker49 Using cfiCommon1
          CFI (cfiPicker49) NoFunction
          CFI (cfiPicker49) Picker
        ADD     A,#0x13
        MOV     DPL,A
        RET
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiPicker49
//  724 
//  725 /*********************************************************************
//  726  * @fn          ZDO_ProcessActiveEPReq
//  727  *
//  728  * @brief       This function processes and responds to the
//  729  *              Active_EP_req message.
//  730  *
//  731  * @param       inMsg  - incoming message (request)
//  732  *
//  733  * @return      none
//  734  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  735 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock50 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  736 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  737   byte cnt = 0;
        MOV     ?V0 + 2,#0x0
//  738   uint16 aoi;
//  739   byte stat = ZDP_SUCCESS;
        MOV     ?V0 + 3,#0x0
//  740 
//  741   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_106:
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
//  742 
//  743   if ( aoi == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     A,R2
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessActiveEPReq_0
        MOV     A,R3
        XRL     A,?V0 + 1
??ZDO_ProcessActiveEPReq_0:
        JNZ     ??ZDO_ProcessActiveEPReq_1
//  744   {
//  745     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL   ??afNumEndPoints?relay
        MOV     A,R1
        DEC     A
        MOV     ?V0 + 2,A
//  746     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV     R1,#0x1
        MOV     R2,#ZDOBuildBuf & 0xff
        MOV     R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL   ??afEndPoints?relay
        SJMP    ??ZDO_ProcessActiveEPReq_2
//  747   }
//  748   else
//  749   {
//  750     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessActiveEPReq_1:
        MOV     ?V0 + 3,#-0x80
//  751   }
//  752 
//  753   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  754                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_282:
        MOV     ?V0 + 4,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 4,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V0 + 3
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_335:
        MOV     R2,#0x5
        MOV     R3,#-0x80
        LCALL   ??ZDP_EPRsp?relay
        MOV     A,#0x7
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock50
//  755 }
//  756 
//  757 /*********************************************************************
//  758  * @fn          ZDO_ConvertOTAClusters
//  759  *
//  760  * @brief       This function will convert the over-the-air cluster list
//  761  *              format to an internal format.
//  762  *
//  763  * @param       inMsg  - incoming message (request)
//  764  *
//  765  * @return      pointer to incremented inBuf
//  766  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  767 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock51 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  768 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  769   uint8 x;
//  770 
//  771   for ( x = 0; x < cnt; x++ )
        MOV     R7,#0x0
        SJMP    ??ZDO_ConvertOTAClusters_0
//  772   {
//  773     // convert ota format to internal
//  774     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_137:
        MOV     R1,A
        MOV     A,?V0 + 0
        ADD     A,#0x0
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
        MOV     A,R7
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
//  775     inBuf += sizeof( uint16 );
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
//  776   }
        INC     R7
??ZDO_ConvertOTAClusters_0:
        MOV     A,R7
        CLR     C
        SUBB    A,R6
        JC      ??ZDO_ConvertOTAClusters_1
//  777   return ( inBuf );
        LJMP    ??Subroutine144_0 & 0xFFFF
          CFI EndBlock cfiBlock51
//  778 }
//  779 
//  780 /*********************************************************************
//  781  * @fn          ZDO_ProcessMatchDescReq
//  782  *
//  783  * @brief       This function processes and responds to the
//  784  *              Match_Desc_req message.
//  785  *
//  786  * @param       inMsg  - incoming message (request)
//  787  *
//  788  * @return      none
//  789  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  790 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock52 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  791 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
//  792   uint8 epCnt = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
//  793   uint8 numInClusters;
//  794   uint16 *inClusters = NULL;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  795   uint8 numOutClusters;
//  796   uint16 *outClusters = NULL;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        LCALL   ?Subroutine12 & 0xFFFF
//  797   epList_t *epDesc;
//  798   SimpleDescriptionFormat_t *sDesc = NULL;
//  799   uint8 allocated;
//  800   uint8 *msg;
//  801   uint16 aoi;
//  802   uint16 profileID;
//  803 
//  804   // Parse the incoming message
//  805   msg = inMsg->asdu;
//  806   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_2:
        ADD     A,#0x0
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  807   profileID = BUILD_UINT16( msg[2], msg[3] );
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_144:
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
//  808   msg += 4;
        MOV     A,?V0 + 2
        ADD     A,#0x4
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_250:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
//  809 
//  810   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
        LCALL   ??NLME_IsAddressBroadcast?relay
        MOV     A,R1
        XRL     A,#0x1
        JZ      ??ZDO_ProcessMatchDescReq_0
//  811   {
//  812     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  813                           ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
//  814     return;
//  815   }
//  816   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??NLME_IsAddressBroadcast?relay
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_1
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_ProcessMatchDescReq_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_ProcessMatchDescReq_2:
        JZ      ??ZDO_ProcessMatchDescReq_1
//  817   {
//  818     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  819                              ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function ZDP_EPRsp
        MOV     A,?V0 + 12
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_378:
        MOV     A,?V0 + 13
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_385:
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_268:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0 + 0,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_133:
        LCALL   ??ZDP_EPRsp?relay
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  820     return;
        LJMP    ??ZDO_ProcessMatchDescReq_3 & 0xFFFF
//  821   }
//  822 
//  823   if ((numInClusters = *msg++) &&
//  824       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_1:
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_112:
        MOV     ?V0 + 8,R0
        JZ      ??ZDO_ProcessMatchDescReq_4
        ; Setup parameters for call to function osal_mem_alloc
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_47:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_347:
        JZ      ??ZDO_ProcessMatchDescReq_4
//  825   {
//  826     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine77 & 0xFFFF
//  827   }
??CrossCallReturnLabel_140:
        MOV     R1,?V0 + 8
        LCALL   ??ZDO_ConvertOTAClusters?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        SJMP    ??ZDO_ProcessMatchDescReq_5
//  828   else
//  829   {
//  830     numInClusters = 0;
??ZDO_ProcessMatchDescReq_4:
        MOV     ?V0 + 8,#0x0
//  831   }
//  832 
//  833   if ((numOutClusters = *msg++) &&
//  834       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_5:
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_113:
        MOV     ?V0 + 7,R0
        JZ      ??ZDO_ProcessMatchDescReq_6
        ; Setup parameters for call to function osal_mem_alloc
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_48:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_348:
        JZ      ??ZDO_ProcessMatchDescReq_6
//  835   {
//  836     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine77 & 0xFFFF
//  837   }
??CrossCallReturnLabel_141:
        MOV     R1,?V0 + 7
        LCALL   ??ZDO_ConvertOTAClusters?relay
        SJMP    ??ZDO_ProcessMatchDescReq_7
//  838   else
//  839   {
//  840     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_6:
        MOV     ?V0 + 7,#0x0
//  841   }
//  842 
//  843   // First count the number of endpoints that match.
//  844   epDesc = epList;
??ZDO_ProcessMatchDescReq_7:
        MOV     DPTR,#epList
        SJMP    ??ZDO_ProcessMatchDescReq_8
//  845   while ( epDesc )
//  846   {
//  847     // Don't search endpoint 0 and check if response is allowed
//  848     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  849     {
//  850       if ( epDesc->pfnDescCB )
//  851       {
//  852         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  853         allocated = TRUE;
//  854       }
//  855       else
//  856       {
//  857         sDesc = epDesc->epDesc->simpleDesc;
//  858         allocated = FALSE;
//  859       }
//  860 
//  861       // Allow specific ProfileId or Wildcard ProfileID
//  862       if ( sDesc && ( ( sDesc->AppProfId == profileID ) || ( profileID == ZDO_WILDCARD_PROFILE_ID ) ) )
//  863       {
//  864         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  865 
//  866         // Are there matching input clusters?
//  867         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  868                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  869             // Are there matching output clusters?
//  870             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  871                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  872         {
//  873           // Notify the endpoint of the match.
//  874           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  875           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  876 
//  877           if (pRspSent)
//  878           {
//  879             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
//  880             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
//  881             pRspSent->numInClusters = numInClusters;
//  882             pRspSent->numOutClusters = numOutClusters;
//  883 
//  884             if (numInClusters)
//  885             {
//  886               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
//  887               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
//  888             }
//  889             else
//  890             {
//  891               pRspSent->pInClusters = NULL;
//  892             }
//  893 
//  894             if (numOutClusters)
//  895             {
//  896               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
//  897               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
//  898             }
//  899             else
//  900             {
//  901               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_9:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  902             }
//  903 
//  904             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_10:
        ; Setup parameters for call to function osal_msg_send
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine156_0 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_341:
        MOV     R1,A
        LCALL   ??osal_msg_send?relay
//  905           }
//  906 
//  907           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_11:
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#ZDOBuildBuf & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(ZDOBuildBuf >> 8) & 0xff
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_386:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_89:
        INC     A
        MOVX    @DPTR,A
//  908         }
//  909       }
//  910 
//  911       if ( allocated )
??ZDO_ProcessMatchDescReq_12:
        MOV     A,?V0 + 9
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_13
//  912       {
//  913         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 10
        MOV     R3,?V0 + 11
        LCALL   ??osal_mem_free?relay
//  914       }
//  915     }
//  916     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_13:
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
??ZDO_ProcessMatchDescReq_8:
        MOVX    A,@DPTR
        MOV     ?V0 + 14,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 15,A
        MOV     A,?V0 + 14
        ORL     A,?V0 + 15
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_14 & 0xFFFF
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_131:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R4,A
        JZ      ??ZDO_ProcessMatchDescReq_13
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_13
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_240:
        MOV     A,DPL
        ORL     A,DPH
        JZ      ??ZDO_ProcessMatchDescReq_15
        ; Setup parameters for indirect call
        MOV     A,R4
        MOV     R2,A
        MOV     R1,#0x1
        LCALL   ?CALL_IND
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R3
        MOV     ?V0 + 9,#0x1
        SJMP    ??ZDO_ProcessMatchDescReq_16
??ZDO_ProcessMatchDescReq_15:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 11,A
        MOV     ?V0 + 9,#0x0
??ZDO_ProcessMatchDescReq_16:
        MOV     A,?V0 + 10
        ORL     A,?V0 + 11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessMatchDescReq_17
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_ProcessMatchDescReq_17:
        JZ      ??ZDO_ProcessMatchDescReq_18
        MOV     A,#-0x1
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessMatchDescReq_19
        MOV     A,#-0x1
        XRL     A,?V0 + 1
??ZDO_ProcessMatchDescReq_19:
        JZ      $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
??ZDO_ProcessMatchDescReq_18:
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_296:
        MOV     R1,?V0 + 8
        LCALL   ??ZDO_AnyClusterMatches?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_20
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_297:
        MOV     R1,?V0 + 7
        LCALL   ??ZDO_AnyClusterMatches?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
??ZDO_ProcessMatchDescReq_20:
        ; Setup parameters for call to function osal_msg_allocate
        MOV     A,?V0 + 7
        ADD     A,?V0 + 8
        CLR     C
        RLC     A
        ADD     A,#0xa
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_msg_allocate?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_11 & 0xFFFF
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2e
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_315:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine148_0 & 0xFFFF
??CrossCallReturnLabel_258:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 8
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_16:
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x5
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 8
        JZ      ??ZDO_ProcessMatchDescReq_21
        MOV     A,?V0 + 2
        ADD     A,#0xa
        MOV     R0,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine148_0 & 0xFFFF
??CrossCallReturnLabel_259:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,?V0 + 8
        CLR     C
        RLC     A
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_298:
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessMatchDescReq_22
??ZDO_ProcessMatchDescReq_21:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
??ZDO_ProcessMatchDescReq_22:
        MOV     A,?V0 + 2
        ADD     A,#0x8
        MOV     DPL,A
        MOV     A,?V0 + 3
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_387:
        MOV     A,?V0 + 7
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_9 & 0xFFFF
        MOV     A,?V0 + 8
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 2
        ADD     A,R0
        MOV     R0,A
        MOV     A,?V0 + 3
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0xa
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_49:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
//  917   }
??CrossCallReturnLabel_120:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,?V0 + 7
        CLR     C
        RLC     A
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        LJMP    ??ZDO_ProcessMatchDescReq_10 & 0xFFFF
//  918 
//  919   if ( epCnt )
??ZDO_ProcessMatchDescReq_14:
        MOV     ?V0 + 0,#`?<Constant "Match Desc Req">` & 0xff
        MOV     ?V0 + 1,#(`?<Constant "Match Desc Req">` >> 8) & 0xff
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessMatchDescReq_23
//  920   {
//  921     // Send the message if at least one match found.
//  922     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  923               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_291:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 2,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 3,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine154_0 & 0xFFFF
??CrossCallReturnLabel_289:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_134:
        LCALL   ??ZDP_EPRsp?relay
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_24
//  924     {
//  925 #if defined( LCD_SUPPORTED )
//  926       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Rsp Sent">` & 0xff
        MOV     R5,#(`?<Constant "Rsp Sent">` >> 8) & 0xff
        SJMP    ??ZDO_ProcessMatchDescReq_25
//  927 #endif
//  928     }
//  929   }
//  930   else
//  931   {
//  932     // No match found
//  933     if (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi))
??ZDO_ProcessMatchDescReq_23:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??NLME_IsAddressBroadcast?relay
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_26
//  934     {
//  935       // send response message with match length = 0
//  936       ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  937                         ZDAppNwkAddr.addr.shortAddr, 0, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_292:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 2,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 3,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_135:
        LCALL   ??ZDP_EPRsp?relay
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  938 #if defined( LCD_SUPPORTED )
//  939       HalLcdWriteScreen( "Match Desc Req", "Rsp Non Matched" );
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Rsp Non Matched">` & 0xff
        MOV     R5,#(`?<Constant "Rsp Non Matched">` >> 8) & 0xff
        SJMP    ??ZDO_ProcessMatchDescReq_25
//  940 #endif
//  941     }
//  942     else
//  943     {
//  944       // no response mesage for broadcast message
//  945 #if defined( LCD_SUPPORTED )
//  946       HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
??ZDO_ProcessMatchDescReq_26:
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV     R4,#`?<Constant "Non Matched">` & 0xff
        MOV     R5,#(`?<Constant "Non Matched">` >> 8) & 0xff
??ZDO_ProcessMatchDescReq_25:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??HalLcdWriteScreen?relay
//  947 #endif
//  948     }
//  949   }
//  950 
//  951   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_24:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_349:
        JZ      ??ZDO_ProcessMatchDescReq_27
//  952   {
//  953     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine159_0 & 0xFFFF
//  954   }
??CrossCallReturnLabel_299:
        LCALL   ??osal_mem_free?relay
//  955 
//  956   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_27:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_350:
        JZ      ??ZDO_ProcessMatchDescReq_3
//  957   {
//  958     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine159_0 & 0xFFFF
//  959   }
??CrossCallReturnLabel_300:
        LCALL   ??osal_mem_free?relay
??ZDO_ProcessMatchDescReq_3:
        MOV     A,#0x5
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock52
//  960 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond53 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_250
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+0
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+0
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond56) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond56) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond56) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond56) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond56) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+0
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker57 Using cfiCommon1
          CFI (cfiPicker57) NoFunction
          CFI (cfiPicker57) Picker
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiPicker57
        REQUIRE ??Subroutine147_0
        ; // Fall through to label ??Subroutine147_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine147_0:
          CFI Block cfiCond58 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function ZDO_ProcessUserDescReq
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+0
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+0
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+0
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+0
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+0
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+0
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker65 Using cfiCommon1
          CFI (cfiPicker65) NoFunction
          CFI (cfiPicker65) Picker
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        RET
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiPicker65

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond66 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond67) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond67) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond67) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond67) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond67) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+0
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker68 Using cfiCommon1
          CFI (cfiPicker68) NoFunction
          CFI (cfiPicker68) Picker
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_217:
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        RET
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiPicker68

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond69 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_140
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond70) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond70) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond70) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond70) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond70) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+0
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_141
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond71) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond71) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond71) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond71) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+0
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond72) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+0
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+0
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker74 Using cfiCommon1
          CFI (cfiPicker74) NoFunction
          CFI (cfiPicker74) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        RET
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiPicker74

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond75 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond76) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond76) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond76) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond76) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+0
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond77) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond77) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond77) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond77) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+0
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker78 Using cfiCommon1
          CFI (cfiPicker78) NoFunction
          CFI (cfiPicker78) Picker
        MOV     A,?V0 + 12
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,?V0 + 13
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,?V0 + 12
        ADD     A,#0xf
        MOV     DPL,A
        MOV     A,?V0 + 13
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_338:
        MOV     R2,#0x6
        MOV     R3,#-0x80
        RET
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiPicker78

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond79 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+0
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker81 Using cfiCommon1
          CFI (cfiPicker81) NoFunction
          CFI (cfiPicker81) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        RET
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiPicker81

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond82 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_266
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+0
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker84 Using cfiCommon1
          CFI (cfiPicker84) NoFunction
          CFI (cfiPicker84) Picker
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiPicker84
        REQUIRE ??Subroutine148_0
        ; // Fall through to label ??Subroutine148_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine148_0:
          CFI Block cfiCond85 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_258
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond86) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond86) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond86) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond86) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond86) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+0
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond87) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+0
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+0
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+0
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+0
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+0
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+0
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+0
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+0
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker95 Using cfiCommon1
          CFI (cfiPicker95) NoFunction
          CFI (cfiPicker95) Picker
        MOV     A,R0
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiPicker95
        REQUIRE ??Subroutine149_0
        ; // Fall through to label ??Subroutine149_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine149_0:
          CFI Block cfiCond96 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_254
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+0
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+0
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+0
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond100) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond100) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond100) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond100) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond100) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond100) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+0
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond101) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+0
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond102) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond102) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond102) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond102) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond102) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond102) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond102) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond102) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond102) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+0
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond103) CFA_SP SP+0
          CFI (cfiCond103) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+0
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+0
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+0
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+0
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+0
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+0
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker110 Using cfiCommon1
          CFI (cfiPicker110) NoFunction
          CFI (cfiPicker110) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiPicker110
//  961 
//  962 #if defined ( REFLECTOR )
//  963 /*********************************************************************
//  964  * @fn      ZDO_ProcessBindUnbindReq()
//  965  *
//  966  * @brief   Called to process a Bind or Unbind Request message.
//  967  *
//  968  * @param   inMsg  - incoming message (request)
//  969  * @param   pReq - place to put parsed information
//  970  *
//  971  * @return  none
//  972  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  973 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock111 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
//  974 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_GetEmptyPendingBindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, bindAddrIndexGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
//  975   zAddrType_t SourceAddr;       // Binding Source addres
//  976   byte bindStat;
//  977 
//  978   SourceAddr.addrMode = Addr64Bit;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  979   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCpy?relay
//  980 
//  981   // If the local device is not the primary binding cache
//  982   // check the src address of the bind request.
//  983   // If it is not the local device's extended address
//  984   // discard the request.
//  985   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
//  986         (pReq->dstAddress.addrMode != Addr64Bit &&
//  987          pReq->dstAddress.addrMode != AddrGroup) )
        MOV     A,R6
        ADD     A,#0xf
        MOV     ?V0 + 14,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 15,A
        MOV     A,R6
        ADD     A,#0xe
        MOV     ?V0 + 12,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 13,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V0 + 10,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 11,A
        MOV     A,R6
        ADD     A,#0xc
        MOV     ?V0 + 8,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 9,A
        ; Setup parameters for call to function sAddrExtCmp
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessBindUnbindReq_0
        MOV     A,?V0 + 0
        ADD     A,#0x13
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x3
        XRL     A,R0
        JZ      ??ZDO_ProcessBindUnbindReq_1
        MOV     A,#0x1
        XRL     A,R0
        JZ      ??ZDO_ProcessBindUnbindReq_1
//  988   {
//  989     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
//  990   }
//  991   else
//  992   {
//  993     // Check source & destination endpoints
//  994     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
//  995         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
//  996             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV     A,?V0 + 0
        ADD     A,#0x8
        MOV     ?V0 + 6,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 7,A
        MOV     DPL,?V0 + 6
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        JZ      ??ZDO_ProcessBindUnbindReq_3
        MOV     A,#-0x1
        XRL     A,R1
        JZ      ??ZDO_ProcessBindUnbindReq_3
        MOV     A,?V0 + 0
        ADD     A,#0x14
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine147_0 & 0xFFFF
??CrossCallReturnLabel_247:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ProcessBindUnbindReq_4
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R0,A
        JZ      ??ZDO_ProcessBindUnbindReq_3
        MOV     A,#-0x1
        XRL     A,R0
        JNZ     ??ZDO_ProcessBindUnbindReq_4
//  997     {
//  998       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7e
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
//  999     }
// 1000     else
// 1001     {
// 1002       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        MOV     A,?V0 + 0
        ADD     A,#0x9
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     A,?V0 + 0
        ADD     A,#0xb
        MOV     R6,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        MOVX    A,@DPTR
        XRL     A,#0x21
        JNZ     ??ZDO_ProcessBindUnbindReq_5
        INC     DPTR
        MOVX    A,@DPTR
??ZDO_ProcessBindUnbindReq_5:
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_6 & 0xFFFF
// 1003       {
// 1004         // Assume the table is full
// 1005         bindStat = ZDP_TABLE_FULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x74
        LCALL   ?Subroutine41 & 0xFFFF
// 1006 
// 1007 #if defined( APP_TP ) || defined( APP_TP2 )
// 1008         // For ZigBee Conformance Testing
// 1009         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
// 1010 #endif
// 1011         {
// 1012 #if !defined ( ZDP_BIND_SKIP_VALIDATION )
// 1013           uint16 nwkAddr;
// 1014 
// 1015           // Verifies that a valid NWK address exists for the device
// 1016           // before creating a Binding entry. If NWK address does not
// 1017           // exist the request is sent out and the BindReq is saved, to
// 1018           // create the Bind Entry once the NwkAddrRsp is received
// 1019           if ( ( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1020                ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE ) )
??CrossCallReturnLabel_73:
        MOVX    A,@DPTR
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??APSME_LookupNwkAddr?relay
        MOV     A,R1
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
// 1021           {
// 1022             // find an empty bind slot in the pending Bind Req list
// 1023             ZDO_PendingBindReq_t *pPendingBind;
// 1024 
// 1025             if ( ( pPendingBind = ZDApp_GetEmptyPendingBindReq() ) != NULL )
        ; Setup parameters for call to function ZDApp_GetEmptyPendingBindReq
        LCALL   ??ZDApp_GetEmptyPendingBindReq?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_8 & 0xFFFF
// 1026             {
// 1027               // copy the received request into the empty slot and all required info
// 1028               osal_memcpy( &(pPendingBind->bindReq), pReq, sizeof( ZDO_BindUnbindReq_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     R4,#0x15
        MOV     R5,#0x0
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1029 
// 1030               pPendingBind->srcAddr = inMsg->srcAddr;
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOV     A,?V0 + 2
        ADD     A,#0x15
        MOV     R4,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,#0x9
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1031               pPendingBind->securityUse = inMsg->SecurityUse;
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 2
        ADD     A,#0x1e
        MOV     DPL,A
        MOV     A,?V0 + 3
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_388:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1032               pPendingBind->transSeq = inMsg->TransSeq;
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 2
        ADD     A,#0x1f
        MOV     DPL,A
        MOV     A,?V0 + 3
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_389:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1033               pPendingBind->age = MAX_TIME_ADDR_REQ;
        MOV     A,?V0 + 2
        ADD     A,#0x20
        MOV     DPL,A
        MOV     A,?V0 + 3
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_390:
        MOV     A,#0x5
        MOVX    @DPTR,A
// 1034 
// 1035               // create an entry in Address Manager
// 1036               ( void )bindAddrIndexGet( &(pReq->dstAddress) );
        ; Setup parameters for call to function bindAddrIndexGet
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??bindAddrIndexGet?relay
// 1037 
// 1038               ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV     R5,#0x0
        MOV     R4,#0x0
        MOV     R1,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ZDP_NwkAddrReq?relay
// 1039 
// 1040               osal_start_timerEx( ZDAppTaskID, ZDO_PENDING_BIND_REQ_EVT,
// 1041                                   AGE_OUT_PEND_BIND_REQ_DELAY );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     R2,#0x0
        MOV     R3,#0x10
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1042               return;
        LJMP    ??ZDO_ProcessBindUnbindReq_9 & 0xFFFF
// 1043             }
// 1044           }
// 1045           // Add Bind entry
// 1046           else if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1047                                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function APSME_BindRequest
        LCALL   ?Subroutine69 & 0xFFFF
// 1048           {
// 1049             // valid entry
// 1050             bindStat = ZDP_SUCCESS;
// 1051 
// 1052             // Notify to save info into NV
// 1053             ZDApp_NVUpdate();
// 1054           }
// 1055 #else // ZDP_BIND_SKIP_VALIDATION  is defined
// 1056           // Create binding entry first independently of existance of  valid NWK addres
// 1057           // if NWK address does not exist a request is sent out
// 1058           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1059                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
// 1060           {
// 1061             uint16 nwkAddr;
// 1062 
// 1063             // valid entry
// 1064             bindStat = ZDP_SUCCESS;
// 1065 
// 1066             // Notify to save info into NV
// 1067             ZDApp_NVUpdate();
// 1068 
// 1069             // Check for the destination address
// 1070             if ( pReq->dstAddress.addrMode == Addr64Bit )
// 1071             {
// 1072               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
// 1073               {
// 1074                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
// 1075               }
// 1076             }
// 1077           }
// 1078 #endif
// 1079         }
// 1080       }
??CrossCallReturnLabel_271:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_301:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??APSME_BindRequest?relay
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_8
        SJMP    ??ZDO_ProcessBindUnbindReq_10
// 1081       else // Unbind_req
// 1082       {
// 1083         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1084                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_6:
        ; Setup parameters for call to function APSME_UnBindRequest
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_272:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_302:
        LCALL   ??APSME_UnBindRequest?relay
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_11
// 1085         {
// 1086           bindStat = ZDP_SUCCESS;
??ZDO_ProcessBindUnbindReq_10:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1087 
// 1088           // Notify to save info into NV
// 1089           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   ??ZDApp_NVUpdate?relay
        SJMP    ??ZDO_ProcessBindUnbindReq_8
// 1090         }
// 1091         else
// 1092           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_11:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX    @DPTR,A
// 1093       }
// 1094     }
// 1095   }
// 1096 
// 1097   // Send back a response message
// 1098   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1099                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1100                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_8:
        ; Setup parameters for call to function ZDP_SendData
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_269:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_138:
        ORL     A,#0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x1
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        MOV     R2,?V0 + 14
        MOV     R3,?V0 + 15
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1101 }
??ZDO_ProcessBindUnbindReq_9:
        MOV     A,#0xc
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock111

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond112 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_ConvertOTAClusters
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+0
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond114) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+0
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+0
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker116 Using cfiCommon1
          CFI (cfiPicker116) NoFunction
          CFI (cfiPicker116) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiPicker116

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond117 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_271
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+0
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker119 Using cfiCommon1
          CFI (cfiPicker119) NoFunction
          CFI (cfiPicker119) Picker
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiPicker119
        REQUIRE ??Subroutine150_0
        ; // Fall through to label ??Subroutine150_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine150_0:
          CFI Block cfiCond120 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_268
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond121) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond121) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond121) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond121) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond121) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond121) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond121) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond121) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond121) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond121) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond121) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+0
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+0
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_271
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond123) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond123) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond123) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond123) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond123) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+0
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond124) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond124) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond124) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+0
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker125 Using cfiCommon1
          CFI (cfiPicker125) NoFunction
          CFI (cfiPicker125) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiPicker125
// 1102 #endif // REFLECTOR
// 1103 
// 1104 /*********************************************************************
// 1105  * @fn      ZDO_UpdateAddrManager
// 1106  *
// 1107  * @brief   Update the Address Manager.
// 1108  *
// 1109  * @param   nwkAddr - network address
// 1110  * @param   extAddr - extended address
// 1111  *
// 1112  * @return  none
// 1113  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1114 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock126 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1115 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1116   AddrMgrEntry_t addrEntry;
// 1117 
// 1118   // Update the address manager
// 1119   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1120   addrEntry.nwkAddr = nwkAddr;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine31 & 0xFFFF
// 1121   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_50:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay
// 1122   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryUpdate?relay
// 1123 }
        MOV     A,#0xd
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock126
// 1124 
// 1125 /*********************************************************************
// 1126  * @fn      ZDO_ProcessServerDiscReq
// 1127  *
// 1128  * @brief   Process the Server_Discovery_req message.
// 1129  *
// 1130  * @param   inMsg  - incoming message (request)
// 1131  *
// 1132  * @return  none
// 1133  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1134 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock127 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1135 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1136   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1137   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_152:
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_238:
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_203:
        MOV     R0,A
        MOV     DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX    A,@DPTR
        ANL     A,R0
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,R1
        MOV     ?V0 + 1,A
// 1138 
// 1139   if ( matchMask )
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??ZDO_ProcessServerDiscReq_0
// 1140   {
// 1141     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1142                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine93 & 0xFFFF
// 1143   }
??CrossCallReturnLabel_283:
        MOV     R5,A
        MOV     R4,#0x0
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_218:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_336:
        LCALL   ??ZDP_ServerDiscRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1144 }
??ZDO_ProcessServerDiscReq_0:
        LJMP    ??Subroutine144_0 & 0xFFFF
          CFI EndBlock cfiBlock127
// 1145 
// 1146 #if defined ( ZIGBEE_CHILD_AGING )
// 1147 /*********************************************************************
// 1148  * @fn          ZDO_ProcessEndDeviceTimeoutReq
// 1149  *
// 1150  * @brief       This function processes and responds to the
// 1151  *              End_Device_Timeout_Req message.
// 1152  *
// 1153  * @param       inMsg  - incoming message (request)
// 1154  *
// 1155  * @return      none
// 1156  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1157 void ZDO_ProcessEndDeviceTimeoutReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessEndDeviceTimeoutReq:
          CFI Block cfiBlock128 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
        CODE
// 1158 {
        FUNCALL ZDO_ProcessEndDeviceTimeoutReq, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessEndDeviceTimeoutReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessEndDeviceTimeoutReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1159   uint8 stat = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1160   uint8 *ieee = NULL;
// 1161   uint16 reqTimeout;
// 1162 
// 1163   // Only process this message if Child Table Management is enabled OR
// 1164   // If message was broadcast OR multicast OR
// 1165   // if the NWK src and the MAC src are not the same) drop message
// 1166   if ( ( zgChildAgingEnable == FALSE ) ||
// 1167        ( inMsg->wasBroadcast == TRUE ) ||
// 1168        ( inMsg->srcAddr.addr.shortAddr != inMsg->macSrcAddr ) )
        MOV     DPTR,#zgChildAgingEnable
        MOVX    A,@DPTR
        JNZ     $+5
        LJMP    ??ZDO_ProcessEndDeviceTimeoutReq_0 & 0xFFFF
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_279:
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessEndDeviceTimeoutReq_0 & 0xFFFF
        MOV     A,R6
        ADD     A,#0x2
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_166:
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_316:
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_280:
        XRL     A,R0
        JNZ     ??ZDO_ProcessEndDeviceTimeoutReq_1
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessEndDeviceTimeoutReq_1:
        JZ      $+5
        LJMP    ??ZDO_ProcessEndDeviceTimeoutReq_0 & 0xFFFF
// 1169   {
// 1170     // the message does not come from a child, drop it
// 1171     return;
// 1172   }
// 1173 
// 1174   ieee = inMsg->asdu;
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_153:
        LCALL   ?Subroutine74 & 0xFFFF
// 1175 
// 1176   reqTimeout = BUILD_UINT16( inMsg->asdu[Z_EXTADDR_LEN], inMsg->asdu[Z_EXTADDR_LEN+1] );
??CrossCallReturnLabel_132:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R4
        ADD     A,#0x0
        MOV     ?V0 + 2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 3,A
// 1177 
// 1178   if ( ( ( reqTimeout < ZDO_MIN_REQ_TIMEOUT ) || ( reqTimeout > ZDO_MAX_REQ_TIMEOUT ) ) ||
// 1179        ( ZSTACK_END_DEVICE_BUILD ) )
        MOV     A,R4
        ORL     A,?V0 + 3
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_2
        MOV     A,R4
        SUBB    A,#0x71
        MOV     A,R1
        SUBB    A,#0x8
        JC      ??ZDO_ProcessEndDeviceTimeoutReq_3
// 1180   {
// 1181     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessEndDeviceTimeoutReq_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        SJMP    ??ZDO_ProcessEndDeviceTimeoutReq_4
// 1182   }
// 1183   else
// 1184   {
// 1185     associated_devices_t *pAssoc;
// 1186 
// 1187     if ( ( ( pAssoc = AssocGetWithExt( ieee ) ) != NULL ) &&
// 1188          ( ( pAssoc->nodeRelation >= CHILD_RFD ) &&
// 1189            ( pAssoc->nodeRelation <= CHILD_RFD_RX_IDLE ) ) )
??ZDO_ProcessEndDeviceTimeoutReq_3:
        ; Setup parameters for call to function AssocGetWithExt
        LCALL   ??AssocGetWithExt?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R0,?V0 + 4
        MOV     R1,?V0 + 5
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_5
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        CLR     C
        SUBB    A,#0x2
        JNC     ??ZDO_ProcessEndDeviceTimeoutReq_5
// 1190     {
// 1191       pAssoc->timeoutCounter = reqTimeout;
        MOV     A,R0
        ADD     A,#0x12
        LCALL   ?Subroutine97 & 0xFFFF
// 1192       pAssoc->endDevKaTimeout = reqTimeout;
??CrossCallReturnLabel_162:
        MOV     A,R0
        ADD     A,#0x14
        LCALL   ?Subroutine97 & 0xFFFF
// 1193 
// 1194       // Set event to save NV
// 1195       ZDApp_NVUpdate();
??CrossCallReturnLabel_163:
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   ??ZDApp_NVUpdate?relay
        SJMP    ??ZDO_ProcessEndDeviceTimeoutReq_6
// 1196     }
// 1197     else
// 1198     {
// 1199       stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessEndDeviceTimeoutReq_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7f
??ZDO_ProcessEndDeviceTimeoutReq_4:
        MOVX    @DPTR,A
// 1200     }
// 1201 
// 1202   }
// 1203 
// 1204   ZDP_EndDeviceTimeoutRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
// 1205                            inMsg->SecurityUse );
??ZDO_ProcessEndDeviceTimeoutReq_6:
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_382:
        MOV     A,R7
        LCALL   ??Subroutine153_0 & 0xFFFF
??CrossCallReturnLabel_290:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 2,#0x1f
        MOV     ?V0 + 3,#-0x80
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,#0x1
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        ADD     A,#0xf
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 1206 }
??ZDO_ProcessEndDeviceTimeoutReq_0:
        MOV     A,#0x1
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock128

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond129 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond130) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+0
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker131 Using cfiCommon1
          CFI (cfiPicker131) NoFunction
          CFI (cfiPicker131) Picker
        MOV     DPL,A
        MOV     A,R1
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_454:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiPicker131

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond132 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+0
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function ZDO_ProcessUserDescReq
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+0
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker135 Using cfiCommon1
          CFI (cfiPicker135) NoFunction
          CFI (cfiPicker135) Picker
        MOV     A,R6
        ADD     A,#0xe
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiPicker135
        REQUIRE ??Subroutine151_0
        ; // Fall through to label ??Subroutine151_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine151_0:
          CFI Block cfiCond136 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_279
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+0
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+0
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+0
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+0
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ZDO_ProcessUserDescReq
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+0
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker142 Using cfiCommon1
          CFI (cfiPicker142) NoFunction
          CFI (cfiPicker142) Picker
        MOV     DPL,A
        MOV     A,R7
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiPicker142
        REQUIRE ??Subroutine152_0
        ; // Fall through to label ??Subroutine152_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine152_0:
          CFI Block cfiCond143 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_273
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+0
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond145) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond145) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond145) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+0
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ZDO_ProcessUserDescSet
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+0
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDO_ParseAddrRsp
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+0
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDO_ParseAddrRsp
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+0
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+0
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+0
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+0
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+0
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+0
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ZDO_ProcessUserDescReq
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+0
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker155 Using cfiCommon1
          CFI (cfiPicker155) NoFunction
          CFI (cfiPicker155) Picker
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_288:
        RET
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiPicker155

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond156 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_99
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+0
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_282
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+0
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_283
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+0
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDO_ProcessUserDescReq
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_284
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+0
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_279
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+0
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_280
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+0
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_281
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+0
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_273
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+0
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_274
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+0
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_275
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+0
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function ZDO_ProcessUserDescSet
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_276
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+0
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ZDO_ParseAddrRsp
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_277
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+0
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function ZDO_ParseAddrRsp
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_278
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+0
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_2
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+0
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_3
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+0
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_143
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+0
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_142
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+0
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker174 Using cfiCommon1
          CFI (cfiPicker174) NoFunction
          CFI (cfiPicker174) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiPicker174

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond175 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_152
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+0
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond177) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond177) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond177) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+0
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker178 Using cfiCommon1
          CFI (cfiPicker178) NoFunction
          CFI (cfiPicker178) Picker
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_453:
        RET
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiPicker178

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond179 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_291
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+0
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker181 Using cfiCommon1
          CFI (cfiPicker181) NoFunction
          CFI (cfiPicker181) Picker
        MOV     A,?V0 + 12
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_381:
        MOV     A,?V0 + 13
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiPicker181
        REQUIRE ??Subroutine153_0
        ; // Fall through to label ??Subroutine153_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine153_0:
          CFI Block cfiCond182 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_290
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+0
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+0
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker185 Using cfiCommon1
          CFI (cfiPicker185) NoFunction
          CFI (cfiPicker185) Picker
        LCALL   ??Subroutine183_0 & 0xFFFF
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiPicker185
??CrossCallReturnLabel_459:
        REQUIRE ??Subroutine154_0
        ; // Fall through to label ??Subroutine154_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine154_0:
          CFI Block cfiCond186 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_289
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+0
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+0
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond189) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond189) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond189) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond189) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond189) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+0
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker190 Using cfiCommon1
          CFI (cfiPicker190) NoFunction
          CFI (cfiPicker190) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        RET
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiPicker190

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond191 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+0
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker193 Using cfiCommon1
          CFI (cfiPicker193) NoFunction
          CFI (cfiPicker193) Picker
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_360:
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiPicker193
// 1207 #endif // ZIGBEE_CHILD_AGING
// 1208 
// 1209 /*********************************************************************
// 1210  * Call Back Functions from APS  - API
// 1211  */
// 1212 
// 1213 /*********************************************************************
// 1214  * @fn          ZDO_EndDeviceTimeoutCB
// 1215  *
// 1216  * @brief       This function handles the binding timer for the End
// 1217  *              Device Bind command.
// 1218  *
// 1219  * @param       none
// 1220  *
// 1221  * @return      none
// 1222  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1223 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock194 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1224 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1225 #if defined ( REFLECTOR )
// 1226   byte stat;
// 1227   if ( ZDO_EDBind )
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_351:
        JNZ     $+5
        LJMP    ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1228   {
// 1229     stat = ZDO_EDBind->status;
// 1230 
// 1231     // Send the response message to the first sent
// 1232     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1233                         stat, ZDO_EDBind->SecurityUse );
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x16
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_273:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_91:
        MOV     DPH,A
        MOV     DPL,R0
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_90:
        XCH     A,R0
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_391:
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_270:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x20
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0x1
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R1,#0x1
        MOV     R2,#`?<Constant "End Device Bind">` & 0xff
        MOV     R3,#(`?<Constant "End Device Bind">` >> 8) & 0xff
        LCALL   ??HalLcdWriteString?relay
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,#0x2
        JNZ     ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R2,#`?<Constant "Success Sent">` & 0xff
        MOV     R3,#(`?<Constant "Success Sent">` >> 8) & 0xff
        SJMP    ??ZDO_EndDeviceTimeoutCB_2
??ZDO_EndDeviceTimeoutCB_1:
        ; Setup parameters for call to function HalLcdWriteString
        MOV     R2,#`?<Constant "Timeout">` & 0xff
        MOV     R3,#(`?<Constant "Timeout">` >> 8) & 0xff
??ZDO_EndDeviceTimeoutCB_2:
        LCALL   ??HalLcdWriteString?relay
// 1234 
// 1235     ZDO_RemoveEndDeviceBind();
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine166_0 & 0xFFFF
// 1236   }
??CrossCallReturnLabel_352:
        JZ      ??ZDO_EndDeviceTimeoutCB_0
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x10
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_294:
        JZ      ??ZDO_EndDeviceTimeoutCB_3
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??osal_mem_free?relay
??ZDO_EndDeviceTimeoutCB_3:
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_329:
        XCH     A,R0
        ADD     A,#0x13
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_295:
        JZ      ??ZDO_EndDeviceTimeoutCB_4
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??osal_mem_free?relay
??ZDO_EndDeviceTimeoutCB_4:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_303:
        LCALL   ??osal_mem_free?relay
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1237 #endif  // REFLECTOR
// 1238 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock194

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond195 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_294
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+0
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker197 Using cfiCommon1
          CFI (cfiPicker197) NoFunction
          CFI (cfiPicker197) Picker
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine183_0 & 0xFFFF
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiPicker197
??CrossCallReturnLabel_452:
        REQUIRE ??Subroutine155_0
        ; // Fall through to label ??Subroutine155_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine155_0:
          CFI Block cfiCond198 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_293
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+0
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+0
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker201 Using cfiCommon1
          CFI (cfiPicker201) NoFunction
          CFI (cfiPicker201) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R2
        ORL     A,R3
        RET
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiPicker201

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond202 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+0
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker204 Using cfiCommon1
          CFI (cfiPicker204) NoFunction
          CFI (cfiPicker204) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_330:
        RET
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiPicker204

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond205 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_329
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_91
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+0
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_90
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+0
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker208 Using cfiCommon1
          CFI (cfiPicker208) NoFunction
          CFI (cfiPicker208) Picker
        MOV     DPTR,#ZDO_EDBind
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiPicker208
        REQUIRE ??Subroutine156_0
        ; // Fall through to label ??Subroutine156_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine156_0:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_326
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_33
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+0
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_34
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+0
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_323
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+0
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_324
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+0
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_325
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+0
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDO_AnyClusterMatches
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_314
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+0
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_315
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+0
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_316
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+0
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_317
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+0
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_318
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+0
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_319
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+0
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_320
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+0
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_321
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+0
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_ParseUserDescRsp
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_322
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+0
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function ZDO_ParseAddrRsp
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+0
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+0
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_91
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+0
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_90
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+0
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker228 Using cfiCommon1
          CFI (cfiPicker228) NoFunction
          CFI (cfiPicker228) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiPicker228
// 1239 
// 1240 /*********************************************************************
// 1241  * Optional Management Messages
// 1242  */
// 1243 
// 1244 /*********************************************************************
// 1245  * @fn          ZDO_ProcessMgmtLqiReq
// 1246  *
// 1247  * @brief       This function handles parsing the incoming Management
// 1248  *              LQI request and generate the response.
// 1249  *
// 1250  *   Note:      This function will limit the number of items returned
// 1251  *              to ZDO_MAX_LQI_ITEMS items.
// 1252  *
// 1253  * @param       inMsg - incoming message (request)
// 1254  *
// 1255  * @return      none
// 1256  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1257 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock229 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1258 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 66, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 66, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 37
        MOV     A,#-0x25
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 61)
        MOV     ?V0 + 14,R2
        MOV     ?V0 + 15,R3
// 1259   byte x;
// 1260   byte index;
// 1261   byte numItems;
// 1262   byte maxItems;
// 1263   ZDP_MgmtLqiItem_t* table = NULL;
        MOV     ?V0 + 12,#0x0
        MOV     ?V0 + 13,#0x0
// 1264   ZDP_MgmtLqiItem_t* item;
// 1265   neighborEntry_t    entry;
// 1266   byte aItems;
// 1267   associated_devices_t *aDevice;
// 1268   AddrMgrEntry_t  nwkEntry;
// 1269   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine51 & 0xFFFF
// 1270 
// 1271   // Get the number of neighbor items
// 1272   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
??CrossCallReturnLabel_96:
        MOV     R1,#-0x64
        LCALL   ??NLME_GetRequest?relay
// 1273 
// 1274   // Get the number of associated items
// 1275   aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
        ; Setup parameters for call to function AssocCount
        MOV     R2,#0x4
        MOV     R1,#0x0
        LCALL   ??AssocCount?relay
        MOV     A,R2
        MOV     ?V0 + 2,A
// 1276 
// 1277   // Total number of items
// 1278   maxItems += aItems;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,?V0 + 2
        MOVX    @DPTR,A
// 1279 
// 1280   // Start with the supplied index
// 1281   if ( maxItems > StartIndex )
        MOV     R0,A
        MOV     A,?V0 + 4
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_0 & 0xFFFF
// 1282   {
// 1283     numItems = maxItems - StartIndex;
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 4
        MOV     ?V0 + 1,A
// 1284 
// 1285     // limit the size of the list
// 1286     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR     C
        SUBB    A,#0x4
        JC      ??ZDO_ProcessMgmtLqiReq_1
// 1287       numItems = ZDO_MAX_LQI_ITEMS;
        MOV     ?V0 + 1,#0x3
// 1288 
// 1289     // Allocate the memory to build the table
// 1290     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1291               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 1
        MOV     B,#0x1a
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
// 1292 
// 1293     if ( table != NULL )
        MOV     A,R2
        ORL     A,?V0 + 13
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
// 1294     {
// 1295       x = 0;
        MOV     ?V0 + 3,#0x0
// 1296       item = table;
        MOV     R6,?V0 + 12
        MOV     R7,?V0 + 13
// 1297       index = StartIndex;
        MOV     ?V0 + 0,?V0 + 4
        LJMP    ??CrossCallReturnLabel_62 & 0xFFFF
// 1298 
// 1299       // Loop through associated items and build list
// 1300       for ( ; x < numItems; x++ )
// 1301       {
// 1302         if ( index < aItems )
// 1303         {
// 1304           // get next associated device
// 1305           aDevice = AssocFindDevice( index++ );
// 1306 
// 1307           // set basic fields
// 1308           item->panID   = _NIB.nwkPanId;
// 1309           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1310           item->nwkAddr = aDevice->shortAddr;
// 1311           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1312           item->depth   = 0xFF;
// 1313           item->lqi     = aDevice->linkInfo.rxLqi;
// 1314 
// 1315           // set extented address
// 1316           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1317           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1318 
// 1319           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1320           {
// 1321             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1322           }
// 1323           else
// 1324           {
// 1325             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_3:
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#-0x1
        MOV     R2,?V0 + 10
        MOV     R3,?V0 + 11
        LCALL   ??osal_memset?relay
// 1326           }
// 1327 
// 1328           // use association info to set other fields
// 1329           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_4:
        MOV     A,?V0 + 6
        ADD     A,#0x4
        MOV     R0,A
        MOV     A,?V0 + 7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R6
        ADD     A,#0x16
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,R6
        ADD     A,#0x15
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0x14
        MOV     ?V0 + 10,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 11,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        JNZ     ??ZDO_ProcessMgmtLqiReq_5
// 1330           {
// 1331             if (  aDevice->shortAddr == 0 )
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_353:
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        JNZ     ??ZDO_ProcessMgmtLqiReq_6
// 1332             {
// 1333               item->devType = ZDP_MGMT_DT_COORD;
        CLR     A
        MOVX    @DPTR,A
// 1334               item->depth = 0;
        SJMP    ??ZDO_ProcessMgmtLqiReq_7
// 1335             }
// 1336             else
// 1337             {
// 1338               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_6:
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1339               item->depth = _NIB.nodeDepth - 1;
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        DEC     A
??ZDO_ProcessMgmtLqiReq_7:
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        MOVX    @DPTR,A
// 1340             }
// 1341 
// 1342             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,#0x2
        LCALL   ?Subroutine41 & 0xFFFF
// 1343             item->relation = ZDP_MGMT_REL_PARENT;
// 1344           }
??CrossCallReturnLabel_74:
        CLR     A
        SJMP    ??ZDO_ProcessMgmtLqiReq_8
// 1345           else
// 1346           {
// 1347             // If not parent, then it's a child
// 1348             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_5:
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        INC     A
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ?Subroutine14 & 0xFFFF
// 1349 
// 1350             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_6:
        CLR     C
        SUBB    A,#0x3
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_9 & 0xFFFF
// 1351             {
// 1352               item->devType = ZDP_MGMT_DT_ENDDEV;
        MOV     A,#0x2
        LCALL   ?Subroutine14 & 0xFFFF
// 1353 
// 1354               if ( aDevice->nodeRelation == CHILD_RFD )
// 1355               {
// 1356                 item->rxOnIdle = FALSE;
// 1357               }
// 1358               else
// 1359               {
// 1360                 item->rxOnIdle = TRUE;
// 1361               }
// 1362             }
??CrossCallReturnLabel_7:
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_10 & 0xFFFF
// 1363             else
// 1364             {
// 1365               item->devType = ZDP_MGMT_DT_ROUTER;
// 1366 
// 1367               if ( aDevice->nodeRelation == CHILD_FFD )
// 1368               {
// 1369                 item->rxOnIdle = FALSE;
// 1370               }
// 1371               else
// 1372               {
// 1373                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_11:
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,#0x1
// 1374               }
??ZDO_ProcessMgmtLqiReq_12:
        LCALL   ?Subroutine41 & 0xFFFF
// 1375             }
// 1376 
// 1377             item->relation = ZDP_MGMT_REL_CHILD;
??CrossCallReturnLabel_75:
        MOV     A,#0x1
??ZDO_ProcessMgmtLqiReq_8:
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_62:
        MOV     A,?V0 + 3
        CLR     C
        SUBB    A,?V0 + 1
        JC      $+5
        LJMP    ??CrossCallReturnLabel_63 & 0xFFFF
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,?V0 + 2
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_13 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV     ?V0 + 6,?V0 + 0
        MOV     R2,?V0 + 6
        MOV     R3,#0x0
        LCALL   ??AssocFindDevice?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        INC     ?V0 + 0
        MOV     DPTR,#_NIB + 33
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_33:
        LCALL   ??sAddrExtCpy?relay
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_317:
        MOV     A,R6
        ADD     A,#0x12
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_392:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_164:
        MOV     A,#-0x1
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_393:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_318:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine148_0 & 0xFFFF
??CrossCallReturnLabel_260:
        MOV     A,R6
        ADD     A,#0xa
        MOV     ?V0 + 10,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 11,A
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryLookupNwk?relay
        MOV     A,R1
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_3 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 10
        MOV     R3,?V0 + 11
        LCALL   ??sAddrExtCpy?relay
        LJMP    ??ZDO_ProcessMgmtLqiReq_4 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_9:
        MOV     A,#0x1
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_8:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_11 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_10:
        MOV     DPL,R4
        MOV     DPH,R5
        CLR     A
        LJMP    ??ZDO_ProcessMgmtLqiReq_12 & 0xFFFF
// 1378           }
// 1379 
// 1380           item++;
// 1381         }
// 1382         else
// 1383         {
// 1384           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_13:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ProcessMgmtLqiReq_14
// 1385             // Start with 1st neighbor
// 1386             index = 0;
        MOV     ?V0 + 0,#0x0
        SJMP    ??ZDO_ProcessMgmtLqiReq_15
// 1387           else
// 1388             // Start with >1st neighbor
// 1389             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_14:
        MOV     A,?V0 + 4
        CLR     C
        SUBB    A,?V0 + 2
        MOV     ?V0 + 0,A
        SJMP    ??ZDO_ProcessMgmtLqiReq_15
// 1390           break;
// 1391         }
// 1392       }
// 1393 
// 1394       // Loop through neighbor items and finish list
// 1395       for ( ; x < numItems; x++ )
// 1396       {
// 1397         // Add next neighbor table item
// 1398         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1399 
// 1400         // set ZDP_MgmtLqiItem_t fields
// 1401         item->panID    = entry.panId;
// 1402         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1403         osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
// 1404         item->nwkAddr  = entry.neighborAddress;
// 1405         item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1406         item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1407         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1408         item->depth    = 0xFF;
// 1409         item->lqi      = entry.linkInfo.rxLqi;
// 1410 
// 1411         if ( item->nwkAddr == 0 )
// 1412         {
// 1413           item->devType = ZDP_MGMT_DT_COORD;
// 1414         }
// 1415         else
// 1416         {
// 1417           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_16:
        MOV     A,#0x1
// 1418         }
??ZDO_ProcessMgmtLqiReq_17:
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_63:
        MOV     A,?V0 + 3
        CLR     C
        SUBB    A,?V0 + 1
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_15:
        ; Setup parameters for call to function NLME_GetRequest
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     ?V0 + 6,?V0 + 0
        MOV     R2,?V0 + 6
        MOV     R3,#0x0
        MOV     R1,#-0x79
        LCALL   ??NLME_GetRequest?relay
        INC     ?V0 + 0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_34:
        LCALL   ??sAddrExtCpy?relay
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#-0x1
        MOV     A,R6
        ADD     A,#0xa
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memset?relay
        MOV     A,R6
        ADD     A,#0x12
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_304:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_51:
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_394:
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x16
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_395:
        MOV     A,#0x3
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_29:
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_396:
        MOV     A,#-0x1
        MOVX    @DPTR,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_397:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x14
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_354:
        MOV     DPL,R2
        MOV     DPH,R3
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_16 & 0xFFFF
        CLR     A
        LJMP    ??ZDO_ProcessMgmtLqiReq_17 & 0xFFFF
// 1419 
// 1420         item++;
// 1421       }
// 1422     }
// 1423   }
// 1424   else
// 1425   {
// 1426     numItems = 0;
??ZDO_ProcessMgmtLqiReq_0:
        MOV     ?V0 + 1,#0x0
// 1427   }
// 1428 
// 1429   // Send response
// 1430   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1431                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_2:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 62)
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 64)
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 65)
        MOV     A,?V0 + 4
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 66)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V0 + 14
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,?V0 + 15
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 14
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_171:
        MOV     A,?V0 + 15
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_332:
        LCALL   ??ZDP_MgmtLqiRsp?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 61)
// 1432 
// 1433   if ( table )
        MOV     A,?V0 + 12
        ORL     A,?V0 + 13
        JZ      ??ZDO_ProcessMgmtLqiReq_18
// 1434   {
// 1435     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 12
        MOV     R3,?V0 + 13
        LCALL   ??osal_mem_free?relay
// 1436   }
// 1437 }
??ZDO_ProcessMgmtLqiReq_18:
        MOV     A,#0x25
          CFI EndBlock cfiBlock229
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock230 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock230
        REQUIRE ??Subroutine157_0
        ; // Fall through to label ??Subroutine157_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine157_0:
          CFI Block cfiBlock231 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock231

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond232 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_308
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+0
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+0
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker235 Using cfiCommon1
          CFI (cfiPicker235) NoFunction
          CFI (cfiPicker235) Picker
        MOV     R4,DPL
        MOV     R5,DPH
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiPicker235
        REQUIRE ??Subroutine158_0
        ; // Fall through to label ??Subroutine158_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine158_0:
          CFI Block cfiCond236 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_305
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+0
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+0
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+0
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+0
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+0
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker242 Using cfiCommon1
          CFI (cfiPicker242) NoFunction
          CFI (cfiPicker242) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiPicker242
        REQUIRE ??Subroutine159_0
        ; // Fall through to label ??Subroutine159_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine159_0:
          CFI Block cfiCond243 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_296
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+0
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+0
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond246) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond246) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond246) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+0
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond247) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond247) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond247) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+0
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond248) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond248) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond248) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond248) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond248) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+0
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond249) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond249) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond249) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond249) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+0
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+0
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+0
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+0
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+0
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+0
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+0
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+0
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+0
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker258 Using cfiCommon1
          CFI (cfiPicker258) NoFunction
          CFI (cfiPicker258) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiPicker258

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond259 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_73
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond260) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond260) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond260) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond260) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond260) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+0
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond261) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond261) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond261) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond261) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond261) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond261) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+0
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+0
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker263 Using cfiCommon1
          CFI (cfiPicker263) NoFunction
          CFI (cfiPicker263) Picker
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_193:
        RET
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiPicker263

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond264 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_73
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_74
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+0
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_75
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond266) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond266) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond266) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+0
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_76
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+0
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_58
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+0
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_59
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+0
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_64
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+0
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_65
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+0
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_66
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+0
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_4
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+0
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_5
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+0
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker275 Using cfiCommon1
          CFI (cfiPicker275) NoFunction
          CFI (cfiPicker275) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiPicker275

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond276 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond277) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+0
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker278 Using cfiCommon1
          CFI (cfiPicker278) NoFunction
          CFI (cfiPicker278) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        INC     ?V0 + 3
        RET
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiPicker278

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond279 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+0
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond281) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+0
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+0
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDO_UpdateAddrManager
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond283) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond283) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond283) CFA_SP SP+-5
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond284) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond284) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond284) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond284) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond284) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond284) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond284) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+0
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+0
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+0
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+0
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+0
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker289 Using cfiCommon1
          CFI (cfiPicker289) NoFunction
          CFI (cfiPicker289) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiPicker289

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond290 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+0
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker292 Using cfiCommon1
          CFI (cfiPicker292) NoFunction
          CFI (cfiPicker292) Picker
        LCALL   ??Subroutine156_0 & 0xFFFF
??CrossCallReturnLabel_328:
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#(_NIB + 53) & 0xff
        MOV     R5,#((_NIB + 53) >> 8) & 0xff
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_219:
        RET
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiPicker292

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond293 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_99
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+0
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+0
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_33
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond296) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond296) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond296) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond296) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond296) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond296) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond296) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+0
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_34
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond297) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+0
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker298 Using cfiCommon1
          CFI (cfiPicker298) NoFunction
          CFI (cfiPicker298) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiPicker298

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond299 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_28
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+0
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker301 Using cfiCommon1
          CFI (cfiPicker301) NoFunction
          CFI (cfiPicker301) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x17
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_451:
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x18
        RET
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiPicker301
// 1438 
// 1439 /*********************************************************************
// 1440  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1441  *
// 1442  * @brief       This function handles parsing the incoming Management
// 1443  *              Network Discover request and starts the request.
// 1444  *
// 1445  * @param       inMsg - incoming message (request)
// 1446  *
// 1447  * @return      none
// 1448  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1449 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock302 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1450 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1451   NLME_ScanFields_t scan;
// 1452   uint8             index;
// 1453   uint8             *msg;
// 1454 
// 1455   msg = inMsg->asdu;
        LCALL   ?Subroutine68 & 0xFFFF
// 1456   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_123:
        LCALL   ??osal_build_uint32?relay
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XSTORE_R2345
// 1457   msg += 4;
        LCALL   ?Subroutine94 & 0xFFFF
// 1458   scan.duration = *msg++;
??CrossCallReturnLabel_311:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine43 & 0xFFFF
// 1459   index         = *msg;
??CrossCallReturnLabel_82:
        MOVX    A,@DPTR
        MOV     R2,A
// 1460   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1461   scan.scanApp  = NLME_DISC_SCAN;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1462 
// 1463   // Save off the information to be used for the response
// 1464   zdappMgmtNwkDiscReqInProgress          = true;
        MOV     DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX    @DPTR,A
// 1465   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC     A
        MOVX    @DPTR,A
// 1466   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_319:
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL   ??Subroutine148_0 & 0xFFFF
// 1467   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_261:
        MOV     A,R2
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX    @DPTR,A
// 1468   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
        MOV     A,?V0 + 0
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_172:
        MOV     A,?V0 + 1
        LCALL   ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_274:
        MOV     DPTR,#zdappMgmtNwkDiscRspTransSeq
        LCALL   ?Subroutine35 & 0xFFFF
// 1469 
// 1470   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
??CrossCallReturnLabel_61:
        LCALL   ??NLME_NwkDiscReq2?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtNwkDiscReq_0
// 1471   {
// 1472     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL   ??NLME_NwkDiscTerm?relay
// 1473 
// 1474     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1475   }
// 1476 }
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV     A,#0x7
        LJMP    ??Subroutine143_0 & 0xFFFF
          CFI EndBlock cfiBlock302

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond303 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_311
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+0
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker305 Using cfiCommon1
          CFI (cfiPicker305) NoFunction
          CFI (cfiPicker305) Picker
        MOV     A,R6
        ADD     A,#0x4
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiPicker305
        REQUIRE ??Subroutine160_0
        ; // Fall through to label ??Subroutine160_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine160_0:
          CFI Block cfiCond306 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_313
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+0
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+0
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker309 Using cfiCommon1
          CFI (cfiPicker309) NoFunction
          CFI (cfiPicker309) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_375:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiPicker309

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond310 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
          CFI Conditional ??CrossCallReturnLabel_323
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+0
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+0
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker313 Using cfiCommon1
          CFI (cfiPicker313) NoFunction
          CFI (cfiPicker313) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiPicker313
        REQUIRE ??Subroutine161_0
        ; // Fall through to label ??Subroutine161_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine161_0:
          CFI Block cfiCond314 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_314
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+0
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+0
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond317) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+0
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+0
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+0
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+0
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+0
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function ZDO_ParseUserDescRsp
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+0
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond323) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond323) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond323) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond323) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond323) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond323) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond323) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond323) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond323) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond323) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+0
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+0
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+0
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker326 Using cfiCommon1
          CFI (cfiPicker326) NoFunction
          CFI (cfiPicker326) Picker
        LCALL   ??Subroutine156_0 & 0xFFFF
??CrossCallReturnLabel_331:
        MOV     R1,A
        RET
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiPicker326

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond327 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+0
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker329 Using cfiCommon1
          CFI (cfiPicker329) NoFunction
          CFI (cfiPicker329) Picker
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_186:
        MOV     R2,DPL
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiPicker329
// 1477 
// 1478 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1479 /*********************************************************************
// 1480  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1481  *
// 1482  * @brief       This function finishes the processing of the Management
// 1483  *              Network Discover Request and generates the response.
// 1484  *
// 1485  *   Note:      This function will limit the number of items returned
// 1486  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1487  *
// 1488  * @param       ResultCountSrcAddr - source of the request
// 1489  * @param       msg - pointer to incoming message
// 1490  * @param       SecurityUse -
// 1491  *
// 1492  * @return      none
// 1493  */
// 1494 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
// 1495 {
// 1496   byte count, i, ResultCount = 0;
// 1497   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
// 1498 
// 1499   NetworkList = nwk_getNwkDescList();
// 1500 
// 1501   // Count the number of nwk descriptors in the list
// 1502   pList = nwk_getNwkDescList();
// 1503   while (pList)
// 1504   {
// 1505     ResultCount++;
// 1506     pList = pList->nextDesc;
// 1507   }
// 1508 
// 1509   if ( ZSTACK_ROUTER_BUILD )
// 1510   {
// 1511     // Look for my PanID.
// 1512     pList = nwk_getNwkDescList();
// 1513     while ( pList )
// 1514     {
// 1515       if ( pList->panId == _NIB.nwkPanId )
// 1516       {
// 1517         break;
// 1518       }
// 1519 
// 1520 
// 1521       if ( !pList->nextDesc )
// 1522       {
// 1523         break;
// 1524       }
// 1525       pList = pList->nextDesc;
// 1526     }
// 1527 
// 1528 
// 1529     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1530     // prepend it.
// 1531     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1532     {
// 1533       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
// 1534       if ( newDesc )
// 1535       {
// 1536         byte pJoin;
// 1537 
// 1538         newDesc->panId = _NIB.nwkPanId;
// 1539         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
// 1540         newDesc->version = NLME_GetProtocolVersion();
// 1541         newDesc->stackProfile = zgStackProfile;
// 1542 
// 1543         //Extended PanID
// 1544         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
// 1545 
// 1546         ZMacGetReq( ZMacAssociationPermit, &pJoin );
// 1547         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1548                                            INVALID_NODE_ADDR);
// 1549 
// 1550         newDesc->nextDesc = NetworkList;
// 1551         NetworkList = newDesc;
// 1552         ResultCount++;
// 1553       }
// 1554     }
// 1555   }
// 1556 
// 1557   // Calc the count and apply a max count.
// 1558   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
// 1559   {
// 1560     count = 0;
// 1561   }
// 1562   else
// 1563   {
// 1564     count = ResultCount - zdappMgmtNwkDiscStartIndex;
// 1565     if ( count > ZDO_MAX_NWKDISC_ITEMS )
// 1566     {
// 1567       count = ZDO_MAX_NWKDISC_ITEMS;
// 1568     }
// 1569 
// 1570     // Move the list pointer up to the start index.
// 1571     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
// 1572     {
// 1573       NetworkList = NetworkList->nextDesc;
// 1574     }
// 1575   }
// 1576 
// 1577   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1578                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1579                       zdappMgmtNwkDiscStartIndex,
// 1580                       count,
// 1581                       NetworkList,
// 1582                       false );
// 1583 
// 1584   if ( ZSTACK_ROUTER_BUILD )
// 1585   {
// 1586     if ( newDesc != NULL )
// 1587     {
// 1588       osal_mem_free( newDesc );
// 1589     }
// 1590   }
// 1591 
// 1592   NLME_NwkDiscTerm();
// 1593 }
// 1594 #endif
// 1595 
// 1596 /*********************************************************************
// 1597  * @fn          ZDO_ProcessMgmtRtgReq
// 1598  *
// 1599  * @brief       This function finishes the processing of the Management
// 1600  *              Routing Request and generates the response.
// 1601  *
// 1602  *   Note:      This function will limit the number of items returned
// 1603  *              to ZDO_MAX_RTG_ITEMS items.
// 1604  *
// 1605  * @param       inMsg - incoming message (request)
// 1606  *
// 1607  * @return      none
// 1608  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1609 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock330 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1610 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 1611   byte x;
// 1612   byte maxNumItems;
// 1613   byte numItems = 0;
        MOV     R6,#0x0
// 1614   uint8 *pBuf = NULL;
        MOV     ?V0 + 6,R6
        MOV     ?V0 + 7,R6
// 1615   rtgItem_t *pList;
// 1616   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_343:
        MOV     R7,A
// 1617 
// 1618   // Get the number of table items
// 1619   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x63
        LCALL   ??NLME_GetRequest?relay
// 1620 
// 1621   if ( maxNumItems > StartIndex )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R7
        CLR     C
        SUBB    A,R0
        JNC     ??ZDO_ProcessMgmtRtgReq_0
// 1622   {
// 1623     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R7
        MOV     R6,A
// 1624 
// 1625     // limit the size of the list
// 1626     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR     C
        SUBB    A,#0xb
        JC      ??ZDO_ProcessMgmtRtgReq_1
// 1627     {
// 1628       numItems = ZDO_MAX_RTG_ITEMS;
        MOV     R6,#0xa
// 1629     }
// 1630 
// 1631     // Allocate the memory to build the table
// 1632     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     B,#0x7
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
// 1633 
// 1634     if ( pBuf != NULL )
        MOV     A,R2
        ORL     A,?V0 + 7
        JZ      ??ZDO_ProcessMgmtRtgReq_2
// 1635     {
// 1636       // Convert buffer to list
// 1637       pList = (rtgItem_t *)pBuf;
// 1638 
// 1639       // Loop through items and build list
// 1640       for ( x = 0; x < numItems; x++ )
        MOV     ?V0 + 4,#0x0
        SJMP    ??ZDO_ProcessMgmtRtgReq_3
// 1641       {
// 1642         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1643 
// 1644         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1645         switch( pList->status )
// 1646         {
// 1647           case RT_ACTIVE:
// 1648             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1649             break;
// 1650 
// 1651           case RT_DISC:
// 1652             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1653             break;
// 1654 
// 1655           case RT_LINK_FAIL:
// 1656             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
// 1657             break;
// 1658 
// 1659           case RT_INIT:
// 1660           case RT_REPAIR:
// 1661           default:
// 1662             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_4:
        MOV     A,#0x3
??ZDO_ProcessMgmtRtgReq_5:
        MOVX    @DPTR,A
// 1663             break;
// 1664         }
// 1665 
// 1666         // Increment pointer to next record
// 1667         pList++;
        MOV     A,?V0 + 0
        ADD     A,#0x7
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_432:
        INC     ?V0 + 4
??ZDO_ProcessMgmtRtgReq_3:
        MOV     A,?V0 + 4
        CLR     C
        SUBB    A,R6
        JNC     ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 10,R7
        MOV     A,?V0 + 8
        ADD     A,?V0 + 10
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x75
        LCALL   ??NLME_GetRequest?relay
        MOV     A,?V0 + 0
        ADD     A,#0x5
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_275:
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_6
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_7
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_8
        SJMP    ??ZDO_ProcessMgmtRtgReq_4
??ZDO_ProcessMgmtRtgReq_6:
        CLR     A
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_7:
        MOV     A,#0x1
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV     A,#0x2
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
// 1668       }
// 1669     }
// 1670     else
// 1671     {
// 1672       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV     R6,#0x0
// 1673     }
// 1674   }
// 1675 
// 1676   // Send response
// 1677   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1678                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R6
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V0 + 2
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 2
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_173:
        MOV     A,?V0 + 3
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_333:
        LCALL   ??ZDP_MgmtRtgRsp?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1679 
// 1680   if ( pBuf != NULL )
        MOV     A,?V0 + 6
        ORL     A,?V0 + 7
        JZ      ??ZDO_ProcessMgmtRtgReq_9
// 1681   {
// 1682     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 6
        MOV     R3,?V0 + 7
        LCALL   ??osal_mem_free?relay
// 1683   }
// 1684 }
??ZDO_ProcessMgmtRtgReq_9:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock330
// 1685 
// 1686 /*********************************************************************
// 1687  * @fn          ZDO_ProcessMgmtBindReq
// 1688  *
// 1689  * @brief       This function finishes the processing of the Management
// 1690  *              Bind Request and generates the response.
// 1691  *
// 1692  *   Note:      This function will limit the number of items returned
// 1693  *              to ZDO_MAX_BIND_ITEMS items.
// 1694  *
// 1695  * @param       inMsg - incoming message (request)
// 1696  *
// 1697  * @return      none
// 1698  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1699 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock331 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1700 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
// 1701 #if defined ( REFLECTOR )
// 1702   byte x;
// 1703   uint16 maxNumItems;
// 1704   uint16 numItems;
// 1705   uint8 *pBuf = NULL;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
// 1706   apsBindingItem_t *pList;
// 1707   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine51 & 0xFFFF
// 1708   uint8 status;
// 1709 
// 1710   // Get the number of table items
// 1711   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
??CrossCallReturnLabel_97:
        MOV     R1,#-0x5d
        LCALL   ??APSME_GetRequest?relay
// 1712 
// 1713   if ( maxNumItems > StartIndex )
        MOV     DPL,?V0 + 4
        MOV     R2,DPL
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_323:
        CLR     C
        MOV     A,R2
        SUBB    A,R0
        CLR     A
        SUBB    A,R1
        JNC     ??ZDO_ProcessMgmtBindReq_0
// 1714   {
// 1715     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R2
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        MOV     R7,A
// 1716   }
// 1717   else
// 1718   {
// 1719     numItems = 0;
// 1720   }
// 1721 
// 1722   // limit the size of the list
// 1723   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR     C
        MOV     A,R6
        SUBB    A,#0x4
        MOV     A,R7
        SUBB    A,#0x0
        JC      ??ZDO_ProcessMgmtBindReq_1
// 1724   {
// 1725     numItems = ZDO_MAX_BIND_ITEMS;
        MOV     R6,#0x3
        MOV     R7,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_2
// 1726   }
// 1727 
// 1728   // Allocate the memory to build the table
// 1729   if ( numItems && (pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems )) )
??ZDO_ProcessMgmtBindReq_1:
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ProcessMgmtBindReq_0
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,R2
        MOV     B,#0x15
        MUL     AB
        MOV     R2,A
        MOV     R0,B
        MOV     B,#0x15
        MOV     A,R3
        MUL     AB
        ADD     A,R0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??ZDO_ProcessMgmtBindReq_0
// 1730   {
// 1731     status = ZSuccess;
        MOV     ?V0 + 5,#0x0
// 1732 
// 1733     // Convert buffer to list
// 1734     pList = (apsBindingItem_t *)pBuf;
// 1735 
// 1736     // Loop through items and build list
// 1737     for ( x = 0; x < numItems; x++ )
        MOV     ?V0 + 6,#0x0
??ZDO_ProcessMgmtBindReq_3:
        MOV     ?V0 + 8,?V0 + 6
        CLR     C
        MOV     A,?V0 + 8
        SUBB    A,R6
        CLR     A
        SUBB    A,R7
        JNC     ??ZDO_ProcessMgmtBindReq_4
// 1738     {
// 1739       APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 8,?V0 + 4
        MOV     A,?V0 + 10
        ADD     A,?V0 + 8
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x5e
        LCALL   ??APSME_GetRequest?relay
// 1740       pList++;
        MOV     A,?V0 + 2
        ADD     A,#0x15
        LCALL   ?Subroutine99 & 0xFFFF
// 1741     }
??CrossCallReturnLabel_251:
        INC     ?V0 + 6
        SJMP    ??ZDO_ProcessMgmtBindReq_3
// 1742 
// 1743   }
// 1744   else
// 1745   {
// 1746     status = ZDP_NOT_PERMITTED;
??ZDO_ProcessMgmtBindReq_0:
        MOV     ?V0 + 5,#-0x75
// 1747     numItems = 0;
        MOV     R6,#0x0
// 1748   }
// 1749 
// 1750   // Send response
// 1751   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1752                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_4:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R6
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,?V0 + 4
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,?V0 + 5
        MOV     A,?V0 + 12
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,?V0 + 13
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 12
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_174:
        MOV     A,?V0 + 13
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_334:
        LCALL   ??ZDP_MgmtBindRsp?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 1753 
// 1754   if ( pBuf )
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??ZDO_ProcessMgmtBindReq_5
// 1755   {
// 1756     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_mem_free?relay
// 1757   }
// 1758 #else
// 1759   (void)inMsg;
// 1760 #endif
// 1761 }
??ZDO_ProcessMgmtBindReq_5:
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock331

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond332 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_171
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 66)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+0
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+0
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond335) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond335) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+0
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+0
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-1
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker338 Using cfiCommon1
          CFI (cfiPicker338) NoFunction
          CFI (cfiPicker338) Picker
        ADD     A,#0xf
        MOV     DPL,A
        RET
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiPicker338

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond339 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_335
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+0
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker341 Using cfiCommon1
          CFI (cfiPicker341) NoFunction
          CFI (cfiPicker341) Picker
        MOV     A,R6
        ADD     A,#0xf
        MOV     DPL,A
        MOV     A,R7
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiPicker341
        REQUIRE ??Subroutine162_0
        ; // Fall through to label ??Subroutine162_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine162_0:
          CFI Block cfiCond342 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_332
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 66)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+0
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+0
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+0
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+0
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker347 Using cfiCommon1
          CFI (cfiPicker347) NoFunction
          CFI (cfiPicker347) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_339:
        RET
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiPicker347

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond348 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_99
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+0
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_133
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+0
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_134
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+0
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_338, ??CrossCallReturnLabel_135
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+0
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_335
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+0
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_336
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+0
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_332
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+0
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 66)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_333
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+0
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_334
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+0
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker358 Using cfiCommon1
          CFI (cfiPicker358) NoFunction
          CFI (cfiPicker358) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiPicker358

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond359 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+0
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker361 Using cfiCommon1
          CFI (cfiPicker361) NoFunction
          CFI (cfiPicker361) Picker
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_455:
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_345:
        MOV     ?V0 + 4,A
        ; Setup parameters for call to function NLME_GetRequest
        ; Setup parameters for call to function APSME_GetRequest
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x0
        MOV     R3,#0x0
        RET
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiPicker361
// 1762 
// 1763 /*********************************************************************
// 1764  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1765  *
// 1766  * @brief       This function finishes the processing of the Management
// 1767  *              Direct Join Request and generates the response.
// 1768  *
// 1769  * @param       inMsg - incoming message (request)
// 1770  *
// 1771  * @return      none
// 1772  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1773 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock362 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1774 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL   ?Subroutine90 & 0xFFFF
// 1775   uint8 *deviceAddr;
// 1776   uint8 capInfo;
// 1777   uint8 stat;
// 1778 
// 1779   // Parse the message
// 1780   deviceAddr = inMsg->asdu;
// 1781   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1782 
// 1783   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
??CrossCallReturnLabel_241:
        MOV     A,R7
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_143:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??NLME_DirectJoinRequest?relay
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1784 
// 1785   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x35
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_160:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock362
// 1786 }
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock363 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        LJMP    ??Subroutine143_0 & 0xFFFF
          CFI EndBlock cfiBlock363
// 1787 
// 1788 /*********************************************************************
// 1789  * @fn          ZDO_ProcessMgmtLeaveReq
// 1790  *
// 1791  * @brief       This function processes a Management Leave Request
// 1792  *              and generates the response.
// 1793  *
// 1794  * @param       inMsg - incoming message (request)
// 1795  *
// 1796  * @return      none
// 1797  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1798 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock364 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1799 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1800   NLME_LeaveReq_t req;
// 1801   ZStatus_t       status;
// 1802   uint8           option;
// 1803   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine88 & 0xFFFF
// 1804 
// 1805   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1806        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
??CrossCallReturnLabel_155:
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??AddrMgrExtAddrValid?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function sAddrExtCmp
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessMgmtLeaveReq_1
// 1807   {
// 1808     // Remove this device
// 1809     req.extAddr = NULL;
??ZDO_ProcessMgmtLeaveReq_0:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        SJMP    ??ZDO_ProcessMgmtLeaveReq_2
// 1810   }
// 1811   else
// 1812   {
// 1813     // Remove child device
// 1814     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
// 1815   }
??ZDO_ProcessMgmtLeaveReq_2:
        LCALL   ?Subroutine43 & 0xFFFF
// 1816 
// 1817   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_79:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
// 1818   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV     C,0xE0 /* A   */.6
        JNC     ??ZDO_ProcessMgmtLeaveReq_3
// 1819   {
// 1820     req.removeChildren = TRUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1821   }
// 1822 
// 1823   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV     A,R0
        MOV     C,0xE0 /* A   */.7
        JNC     ??ZDO_ProcessMgmtLeaveReq_4
// 1824   {
// 1825      req.rejoin = TRUE;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1826   }
// 1827 
// 1828   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1829 
// 1830   status = NLME_LeaveReq( &req );
        ; Setup parameters for call to function NLME_LeaveReq
        INC     A
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??NLME_LeaveReq?relay
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1831 
// 1832   if ( ZG_BUILD_ENDDEVICE_TYPE )
// 1833   {
// 1834     // Stop polling and get ready to reset
// 1835     NLME_SetPollRate( 0 );
// 1836   }
// 1837 
// 1838   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 2,#0x34
        MOV     ?V0 + 3,#-0x80
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,#0x1
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,?V0 + 0
        ADD     A,#0xf
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1839 }
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock364
// 1840 
// 1841 
// 1842 /*********************************************************************
// 1843  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1844  *
// 1845  * @brief       This function processes a Management Permit Join Request
// 1846  *              and generates the response.
// 1847  *
// 1848  * @param       inMsg - incoming message (request)
// 1849  *
// 1850  * @return      none
// 1851  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1852 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock365 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1853 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL   ?Subroutine90 & 0xFFFF
// 1854   uint8 stat;
// 1855   uint8 duration;
// 1856   uint8 tcsig;
// 1857 
// 1858   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
// 1859   tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
// 1860 
// 1861   // Set the network layer permit join duration
// 1862   stat = (byte) NLME_PermitJoiningRequest( duration );
??CrossCallReturnLabel_242:
        MOV     A,R7
        LCALL   ??Subroutine163_0 & 0xFFFF
??CrossCallReturnLabel_342:
        MOV     R1,A
        LCALL   ??NLME_PermitJoiningRequest?relay
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1863 
// 1864   // Handle the Trust Center Significance
// 1865   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1866   {
// 1867     if ( tcsig == TRUE )
// 1868     {
// 1869       ZDSecMgrPermitJoining( duration );
// 1870     }
// 1871   }
// 1872 
// 1873   // Send a response if unicast
// 1874   if ( !inMsg->wasBroadcast )
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_281:
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_0
// 1875   {
// 1876     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x36
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine96 & 0xFFFF
// 1877   }
??CrossCallReturnLabel_161:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1878 }
??ZDO_ProcessMgmtPermitJoinReq_0:
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock365

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond366 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+0
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker368 Using cfiCommon1
          CFI (cfiPicker368) NoFunction
          CFI (cfiPicker368) Picker
        MOV     R1,#0x1
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0xf
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiPicker368

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond369 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_343
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond370) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond370) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond370) CFA_SP SP+-5
          CFI Block cfiPicker371 Using cfiCommon1
          CFI (cfiPicker371) NoFunction
          CFI (cfiPicker371) Picker
        LCALL   ?Subroutine139 & 0xFFFF
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiPicker371
??CrossCallReturnLabel_234:
        REQUIRE ??Subroutine163_0
        ; // Fall through to label ??Subroutine163_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine163_0:
          CFI Block cfiCond372 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_342
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+0
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond374) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond374) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond374) CFA_SP SP+-5
          CFI Block cfiPicker375 Using cfiCommon1
          CFI (cfiPicker375) NoFunction
          CFI (cfiPicker375) Picker
        LCALL   ??Subroutine183_0 & 0xFFFF
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiPicker375
??CrossCallReturnLabel_460:
        REQUIRE ??Subroutine164_0
        ; // Fall through to label ??Subroutine164_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine164_0:
          CFI Block cfiCond376 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_340
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+0
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+0
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+0
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond380) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond380) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond380) CFA_SP SP+-5
          CFI Block cfiPicker381 Using cfiCommon1
          CFI (cfiPicker381) NoFunction
          CFI (cfiPicker381) Picker
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_346:
        RET
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiPicker381

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond382 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_97
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+0
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_346, ??CrossCallReturnLabel_343
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+0
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_346, ??CrossCallReturnLabel_344
          CFI (cfiCond385) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond385) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond385) CFA_SP SP+-5
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_346, ??CrossCallReturnLabel_342
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+0
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function ZDO_UpdateNwkStatus
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_346, ??CrossCallReturnLabel_340
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+0
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_346, ??CrossCallReturnLabel_341
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+0
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker389 Using cfiCommon1
          CFI (cfiPicker389) NoFunction
          CFI (cfiPicker389) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiPicker389
// 1879 
// 1880 /*
// 1881  * This function stub allows the next higher layer to be notified of
// 1882  * a permit joining timeout.
// 1883  */
// 1884 /*********************************************************************
// 1885  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 1886  *
// 1887  * @brief       This function stub allows the next higher layer to be
// 1888  *              notified of a permit joining timeout. Currently, this
// 1889  *              directly bypasses the APS layer.
// 1890  *
// 1891  * @param       none
// 1892  *
// 1893  * @return      none
// 1894  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1895 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock390 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 1896 {
        ; Saved register size: 0
        ; Auto size: 0
// 1897   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 1898   // Currently, only the ZDSecMgr needs to be notified
// 1899   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1900   {
// 1901     ZDSecMgrPermitJoiningTimeout();
// 1902   }
// 1903   #endif
// 1904 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock390
// 1905 
// 1906 /*********************************************************************
// 1907  * @fn          ZDO_ProcessUserDescReq
// 1908  *
// 1909  * @brief       This function finishes the processing of the User
// 1910  *              Descriptor Request and generates the response.
// 1911  *
// 1912  * @param       inMsg - incoming message (request)
// 1913  *
// 1914  * @return      none
// 1915  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1916 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock391 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 1917 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 17
        MOV     A,#-0x11
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1918   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_107:
        MOV     ?V0 + 4,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 5,A
// 1919   UserDescriptorFormat_t userDesc;
// 1920 
// 1921   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 1922              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
        MOV     A,R6
        ADD     A,#0xf
        MOV     ?V0 + 2,A
        MOV     A,R7
        LCALL   ??Subroutine147_0 & 0xFFFF
??CrossCallReturnLabel_248:
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V0 + 0,A
        MOV     A,R7
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_429:
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0 + 4
        JNZ     ??ZDO_ProcessUserDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 5
??ZDO_ProcessUserDescReq_0:
        JNZ     ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 6,DPL
        MOV     ?V0 + 7,DPH
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0 + 6,#0x11
        MOV     ?V0 + 7,#0x0
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   ??osal_nv_read?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     A,R1
        JNZ     ??ZDO_ProcessUserDescReq_1
// 1923   {
// 1924     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 6,DPL
        MOV     ?V0 + 7,DPH
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDP_UserDescRsp?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        SJMP    ??ZDO_ProcessUserDescReq_2
// 1925   }
// 1926   else
// 1927   {
// 1928     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 1929            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0 + 6,#0x11
        MOV     ?V0 + 7,#-0x80
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        LCALL   ?Subroutine93 & 0xFFFF
// 1930   }
??CrossCallReturnLabel_284:
        MOV     R5,A
        MOV     R4,#-0x7c
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDP_GenericRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
// 1931 }
??ZDO_ProcessUserDescReq_2:
        MOV     A,#0x11
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        SJMP    ??Subroutine165_0
          CFI EndBlock cfiBlock391

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond392 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function ZDO_ProcessUserDescReq
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+0
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker394 Using cfiCommon1
          CFI (cfiPicker394) NoFunction
          CFI (cfiPicker394) Picker
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_198:
        RET
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiPicker394

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond395 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_95
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+0
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_106
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+0
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDO_ProcessUserDescReq
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_107
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+0
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker399 Using cfiCommon1
          CFI (cfiPicker399) NoFunction
          CFI (cfiPicker399) Picker
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_227:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x0
        RET
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiPicker399

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock400 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
          CFI EndBlock cfiBlock400
        REQUIRE ??Subroutine165_0
        ; // Fall through to label ??Subroutine165_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine165_0:
          CFI Block cfiBlock401 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock401
// 1932 
// 1933 /*********************************************************************
// 1934  * @fn          ZDO_ProcessUserDescSet
// 1935  *
// 1936  * @brief       This function finishes the processing of the User
// 1937  *              Descriptor Set and generates the response.
// 1938  *
// 1939  * @param       inMsg - incoming message (request)
// 1940  *
// 1941  * @return      none
// 1942  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1943 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock402 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 1944 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 1945   uint8 *msg;
// 1946   uint16 aoi;
// 1947   UserDescriptorFormat_t userDesc;
// 1948   uint8 outMsg[3];
// 1949   uint8 status;
// 1950 
// 1951   msg = inMsg->asdu;
        MOV     A,R2
        LCALL   ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_243:
        MOV     A,R3
        LCALL   ?Subroutine59 & 0xFFFF
// 1952   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_110:
        ADD     A,#0x0
        MOV     R6,A
        CLR     A
        ADDC    A,R3
        MOV     R7,A
// 1953 
// 1954   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_ProcessUserDescSet_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_ProcessUserDescSet_0:
        JZ      $+5
        LJMP    ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 1955   {
// 1956     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        SUBB    A,#0x10
        JNC     ??ZDO_ProcessUserDescSet_2
        MOV     ?V0 + 0,R2
        SJMP    ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV     ?V0 + 0,#0x10
??ZDO_ProcessUserDescSet_3:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        LCALL   ?Subroutine44 & 0xFFFF
// 1957     msg ++;  // increment one for the length field
// 1958 
// 1959     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_83:
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 4,R1
        MOV     ?V0 + 5,R2
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1960     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V0 + 4,#0x11
        MOV     ?V0 + 5,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   ??osal_nv_write?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1961     if ( userDesc.len != 0 )
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDO_Config_Node_Descriptor
        JZ      ??ZDO_ProcessUserDescSet_4
// 1962     {
// 1963       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.4
        SJMP    ??ZDO_ProcessUserDescSet_5
// 1964     }
// 1965     else
// 1966     {
// 1967       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.4
// 1968     }
// 1969 
// 1970     status = ZDP_SUCCESS;
// 1971   }
??ZDO_ProcessUserDescSet_5:
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_187:
        CLR     A
        SJMP    ??ZDO_ProcessUserDescSet_6
// 1972   else
// 1973   {
// 1974     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX    @DPTR,A
// 1975   }
// 1976 
// 1977   outMsg[0] = status;
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1978   outMsg[1] = LO_UINT16( aoi );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
// 1979   outMsg[2] = LO_UINT16( aoi );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
// 1980 
// 1981   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 1982                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        MOV     A,?V0 + 2
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_379:
        MOV     A,?V0 + 3
        LCALL   ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_276:
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     ?V0 + 4,#0x14
        MOV     ?V0 + 5,#-0x80
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x3
        MOV     A,?V0 + 2
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,?V0 + 2
        ADD     A,#0xf
        MOV     R2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1983 }
        MOV     A,#0x15
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock402

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond403 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_61
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+0
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function ZDO_ProcessUserDescSet
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+0
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_89
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond406) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond406) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond406) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+0
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_88
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+0
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker408 Using cfiCommon1
          CFI (cfiPicker408) NoFunction
          CFI (cfiPicker408) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function nwk_ScanJoiningOrphan
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiPicker408

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond409 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_111
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ZDO_ProcessUserDescSet
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+0
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker411 Using cfiCommon1
          CFI (cfiPicker411) NoFunction
          CFI (cfiPicker411) Picker
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        RET
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiPicker411
// 1984 
// 1985 /*********************************************************************
// 1986  * @fn          ZDO_ProcessDeviceAnnce
// 1987  *
// 1988  * @brief       This function processes a device annouce message.
// 1989  *
// 1990  * @param       inMsg - incoming message
// 1991  *
// 1992  * @return      none
// 1993  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1994 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock412 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 1995 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocChangeNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborUpdateNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 32
        MOV     A,#-0x20
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1996   ZDO_DeviceAnnce_t Annce;
// 1997   AddrMgrEntry_t addrEntry;
// 1998   uint8 parentExt[Z_EXTADDR_LEN];
// 1999 
// 2000   // Parse incoming message
// 2001   ZDO_ParseDeviceAnnce( inMsg, &Annce );
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??ZDO_ParseDeviceAnnce?relay
// 2002 
// 2003   if ( ZSTACK_END_DEVICE_BUILD )
// 2004   {
// 2005     // Make sure the message didn't come from myself - end device only
// 2006     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
// 2007     {
// 2008       return;
// 2009     }
// 2010   }
// 2011 
// 2012 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 2013   // Clean up the neighbor table
// 2014   nwkNeighborRemoveAllStranded();
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL   ??nwkNeighborRemoveAllStranded?relay
// 2015 
// 2016   // If address conflict is detected, no need to update the address manager
// 2017   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_308:
        LCALL   ??NLME_CheckNewAddrSet?relay
        MOV     A,R1
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_0 & 0xFFFF
// 2018   {
// 2019     return;
// 2020   }
// 2021 #endif
// 2022 
// 2023 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 2024   // Check for parent's address
// 2025   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??NLME_GetCoordExtAddr?relay
// 2026   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_1
// 2027   {
// 2028     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL   ??NLME_GetCoordShortAddr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_2:
        JZ      ??ZDO_ProcessDeviceAnnce_1
// 2029     {
// 2030       // Set the Parent's MAC's new short address
// 2031       _NIB.nwkCoordAddress = Annce.nwkAddr;
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_324:
        MOV     DPTR,#_NIB + 23
        LCALL   ??Subroutine148_0 & 0xFFFF
// 2032       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_262:
        ; Setup parameters for call to function ZMacSetReq
        MOV     R2,#(_NIB + 23) & 0xff
        MOV     R3,#((_NIB + 23) >> 8) & 0xff
        MOV     R1,#0x4b
        LCALL   ??ZMacSetReq?relay
// 2033     }
// 2034   }
// 2035 
// 2036   if ( ZSTACK_ROUTER_BUILD )
// 2037   {
// 2038     // If the device annce comes from a end device child that has moved
// 2039     // to another parent, remove it from associated device list
// 2040 
// 2041     // If the dev annce is coming from other device's children,
// 2042     // (The dev annce from its own children shall be unicast to itself,
// 2043     // So check the mac destination address)
// 2044     // Remove it from the associated device list. If it is not
// 2045     // a child, no action will be taken in AssocRemove() anyway.
// 2046     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_1:
        MOV     A,R6
        ADD     A,#0x11
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_398:
        PUSH    DPL
          CFI CFA_SP SP+-1
        PUSH    DPH
          CFI CFA_SP SP+-2
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        POP     DPH
          CFI CFA_SP SP+-1
        POP     DPL
          CFI CFA_SP SP+0
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessDeviceAnnce_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_ProcessDeviceAnnce_3:
        JZ      ??ZDO_ProcessDeviceAnnce_4
// 2047     {
// 2048       associated_devices_t *dev_ptr;
// 2049 
// 2050       // If it's an end device child
// 2051       dev_ptr = AssocGetWithExt( Annce.extAddr );
        ; Setup parameters for call to function AssocGetWithExt
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AssocGetWithExt?relay
        MOV     DPL,R2
        MOV     DPH,R3
// 2052       if ( dev_ptr )
        MOV     A,DPL
        ORL     A,DPH
        JZ      ??ZDO_ProcessDeviceAnnce_5
// 2053       {
// 2054         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2055              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        XRL     A,R0
        JZ      ??ZDO_ProcessDeviceAnnce_6
        MOV     A,#0x2
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_5
// 2056         {
// 2057           AssocRemove( Annce.extAddr );
??ZDO_ProcessDeviceAnnce_6:
        ; Setup parameters for call to function AssocRemove
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AssocRemove?relay
// 2058         }
// 2059       }
// 2060 
// 2061 #if defined ( ZIGBEE_CHILD_AGING )
// 2062       // Remove the address from the SrcMatch table,
// 2063       // just in case the device was aged out by Child Management Table process
// 2064       if ( ( pNwkNotMyChildListDelete != NULL ) &&
// 2065            ( zgChildAgingEnable == TRUE ) )
??ZDO_ProcessDeviceAnnce_5:
        MOV     DPTR,#pNwkNotMyChildListDelete
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_355:
        JZ      ??ZDO_ProcessDeviceAnnce_4
        MOV     DPTR,#zgChildAgingEnable
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessDeviceAnnce_4
// 2066       {
// 2067         pNwkNotMyChildListDelete( Annce.nwkAddr );
        ; Setup parameters for indirect call
        LCALL   ??Subroutine158_0 & 0xFFFF
// 2068       }
// 2069 #endif // ZIGBEE_CHILD_AGING
// 2070     }
??CrossCallReturnLabel_306:
        MOV     DPTR,#pNwkNotMyChildListDelete + 1
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        LCALL   ?CALL_IND
// 2071 
// 2072     if ( Annce.nwkAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_4:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_7
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_7:
        JZ      ??ZDO_ProcessDeviceAnnce_8
// 2073     {
// 2074       // If an associated device is found with matched extended Address,
// 2075       // update its short address
// 2076       if ( AssocChangeNwkAddr( Annce.nwkAddr, Annce.extAddr ) )
        ; Setup parameters for call to function AssocChangeNwkAddr
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_309:
        LCALL   ??AssocChangeNwkAddr?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_8
// 2077       {
// 2078         // Set event to save NV
// 2079         ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   ??ZDApp_NVUpdate?relay
// 2080       }
// 2081     }
// 2082   }
// 2083 
// 2084   // Update the neighbor table
// 2085   nwkNeighborUpdateNwkAddr( Annce.nwkAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_8:
        ; Setup parameters for call to function nwkNeighborUpdateNwkAddr
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_310:
        LCALL   ??nwkNeighborUpdateNwkAddr?relay
// 2086 
// 2087   // Assume that the device has moved, remove existing routing entries
// 2088   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV     R1,#0x0
        LCALL   ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_307:
        LCALL   ??RTG_RemoveRtgEntry?relay
// 2089 
// 2090 #endif // ZIGBEE_STOCHASTIC_ADDRESSING
// 2091 
// 2092   // Fill in the extended address in address manager if we don't have it already.
// 2093   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine46 & 0xFFFF
// 2094   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_88:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine148_0 & 0xFFFF
// 2095   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_263:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryLookupNwk?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_9
// 2096   {
// 2097     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
// 2098     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_9
// 2099     {
// 2100       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay
// 2101       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryUpdate?relay
// 2102     }
// 2103   }
// 2104 
// 2105   // Update the short address in address manager if it's been changed
// 2106   AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_9:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay
// 2107   if ( AddrMgrEntryLookupExt( &addrEntry ) )
        ; Setup parameters for call to function AddrMgrEntryLookupExt
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryLookupExt?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_0
// 2108   {
// 2109     if ( addrEntry.nwkAddr != Annce.nwkAddr )
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_320:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_10
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_10:
        JZ      ??ZDO_ProcessDeviceAnnce_0
// 2110     {
// 2111       addrEntry.nwkAddr = Annce.nwkAddr;
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_325:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine148_0 & 0xFFFF
// 2112       AddrMgrEntryUpdate( &addrEntry );
??CrossCallReturnLabel_264:
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryUpdate?relay
??ZDO_ProcessDeviceAnnce_0:
        MOV     A,#0x20
// 2113     }
// 2114   }
        LJMP    ??Subroutine143_0 & 0xFFFF
          CFI EndBlock cfiBlock412
// 2115 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond413 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+0
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker415 Using cfiCommon1
          CFI (cfiPicker415) NoFunction
          CFI (cfiPicker415) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiPicker415
        REQUIRE ??Subroutine166_0
        ; // Fall through to label ??Subroutine166_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine166_0:
          CFI Block cfiCond416 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_347
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+0
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond418) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond418) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+0
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond419) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond419) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond419) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond419) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond419) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+0
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+0
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+0
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond422) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond422) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond422) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond422) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond422) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond422) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond422) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond422) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond422) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+0
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+0
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+0
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+0
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+0
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+0
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+0
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_362:
        ORL     A,R1
        RET
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_132
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+0
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_358
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+0
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_359
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+0
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_347
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond434) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond434) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond434) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+0
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_348
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+0
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_349
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond436) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond436) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond436) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond436) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond436) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond436) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond436) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond436) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond436) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+0
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_350
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond437) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond437) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond437) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond437) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond437) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond437) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond437) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+0
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_351
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+0
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_352
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+0
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_353
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond440) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond440) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond440) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond440) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+0
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_354
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond441) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond441) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond441) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+0
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_355
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+0
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_356
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+0
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_362, ??CrossCallReturnLabel_357
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+0
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ZDO_UpdateNwkStatus
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_146
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+0
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_147
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+0
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker447 Using cfiCommon1
          CFI (cfiPicker447) NoFunction
          CFI (cfiPicker447) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiPicker447

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond448 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+0
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker450 Using cfiCommon1
          CFI (cfiPicker450) NoFunction
          CFI (cfiPicker450) Picker
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_188:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiPicker450
// 2116 
// 2117 /*********************************************************************
// 2118  * @fn          ZDO_BuildSimpleDescBuf
// 2119  *
// 2120  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 2121  *
// 2122  * @param       buf  - pointer to a byte array big enough for data.
// 2123  * @param       desc - SimpleDescriptionFormat_t *
// 2124  *
// 2125  * @return      none
// 2126  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2127 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock451 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 2128 {
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2129   byte cnt;
// 2130   uint16 *ptr;
// 2131 
// 2132   *buf++ = desc->EndPoint;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine71 & 0xFFFF
// 2133   *buf++ = HI_UINT16( desc->AppProfId );
??CrossCallReturnLabel_125:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ?Subroutine20 & 0xFFFF
// 2134   *buf++ = LO_UINT16( desc->AppProfId );
// 2135   *buf++ = HI_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_26:
        MOV     A,R4
        ADD     A,#0x3
        MOV     R0,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine20 & 0xFFFF
// 2136   *buf++ = LO_UINT16( desc->AppDeviceId );
// 2137 
// 2138   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_27:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        LCALL   ??Subroutine167_0 & 0xFFFF
// 2139 
// 2140   *buf++ = desc->AppNumInClusters;
??CrossCallReturnLabel_363:
        MOV     A,R4
        ADD     A,#0x6
        MOV     R0,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
        MOV     DPL,R0
        MOV     DPH,A
        LCALL   ?Subroutine110 & 0xFFFF
// 2141   ptr = desc->pAppInClusterList;
??CrossCallReturnLabel_364:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine85 & 0xFFFF
// 2142   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_148:
        SJMP    ??CrossCallReturnLabel_40
// 2143   {
// 2144     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ?Subroutine73 & 0xFFFF
// 2145     *buf++ = LO_UINT16( *ptr );
??CrossCallReturnLabel_129:
        LCALL   ?Subroutine28 & 0xFFFF
// 2146   }
??CrossCallReturnLabel_40:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,?V0 + 3
        JC      ??ZDO_BuildSimpleDescBuf_0
// 2147 
// 2148   *buf++ = desc->AppNumOutClusters;
        MOV     A,R4
        ADD     A,#0x9
        MOV     R6,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R7,A
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     DPL,R6
        MOV     DPH,A
        LCALL   ?Subroutine73 & 0xFFFF
// 2149   ptr = desc->pAppOutClusterList;
??CrossCallReturnLabel_130:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine85 & 0xFFFF
// 2150   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_149:
        SJMP    ??CrossCallReturnLabel_41
// 2151   {
// 2152     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ?Subroutine71 & 0xFFFF
// 2153     *buf++ = LO_UINT16( *ptr );
??CrossCallReturnLabel_126:
        LCALL   ?Subroutine28 & 0xFFFF
// 2154   }
??CrossCallReturnLabel_41:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R0
        JC      ??ZDO_BuildSimpleDescBuf_1
// 2155 }
        SJMP    ??Subroutine168_0
          CFI EndBlock cfiBlock451

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond452 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+0
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker454 Using cfiCommon1
          CFI (cfiPicker454) NoFunction
          CFI (cfiPicker454) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine170_0 & 0xFFFF
??CrossCallReturnLabel_439:
        MOV     ?V0 + 2,#0x0
        RET
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiPicker454

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond455 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_129
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+0
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker457 Using cfiCommon1
          CFI (cfiPicker457) NoFunction
          CFI (cfiPicker457) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiPicker457

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond458 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+0
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker460 Using cfiCommon1
          CFI (cfiPicker460) NoFunction
          CFI (cfiPicker460) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiPicker460

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond461 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+0
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker463 Using cfiCommon1
          CFI (cfiPicker463) NoFunction
          CFI (cfiPicker463) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_367:
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_474:
        INC     ?V0 + 2
        RET
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiPicker463

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond464 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+0
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker466 Using cfiCommon1
          CFI (cfiPicker466) NoFunction
          CFI (cfiPicker466) Picker
        INC     DPTR
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_365:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_366:
        RET
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiPicker466

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond467 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_364
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_367, ??CrossCallReturnLabel_40
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+0
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_367, ??CrossCallReturnLabel_41
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+0
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_26
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+0
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_27
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+0
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_366, ??CrossCallReturnLabel_26
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+0
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_366, ??CrossCallReturnLabel_27
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+0
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker474 Using cfiCommon1
          CFI (cfiPicker474) NoFunction
          CFI (cfiPicker474) Picker
        MOVX    A,@DPTR
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiPicker474
        REQUIRE ??Subroutine167_0
        ; // Fall through to label ??Subroutine167_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine167_0:
          CFI Block cfiCond475 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_363
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+0
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_367, ??CrossCallReturnLabel_40
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+0
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_367, ??CrossCallReturnLabel_41
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+0
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_26
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+0
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_27
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+0
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_366, ??CrossCallReturnLabel_26
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+0
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_366, ??CrossCallReturnLabel_27
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+0
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker483 Using cfiCommon1
          CFI (cfiPicker483) NoFunction
          CFI (cfiPicker483) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        INC     R2
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiPicker483

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock484 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock484
        REQUIRE ??Subroutine168_0
        ; // Fall through to label ??Subroutine168_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine168_0:
          CFI Block cfiBlock485 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock485
// 2156 
// 2157 #if ( ZG_BUILD_COORDINATOR_TYPE )
// 2158 /*********************************************************************
// 2159  * @fn      ZDO_MatchEndDeviceBind()
// 2160  *
// 2161  * @brief
// 2162  *
// 2163  *   Called to match end device binding requests
// 2164  *
// 2165  * @param  bindReq  - binding request information
// 2166  * @param  SecurityUse - Security enable/disable
// 2167  *
// 2168  * @return  none
// 2169  */
// 2170 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
// 2171 {
// 2172   zAddrType_t dstAddr;
// 2173   uint8 sendRsp = FALSE;
// 2174   uint8 status;
// 2175 
// 2176   // Is this the first request?
// 2177   if ( matchED == NULL )
// 2178   {
// 2179     // Create match info structure
// 2180     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
// 2181     if ( matchED )
// 2182     {
// 2183       // Clear the structure
// 2184       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
// 2185 
// 2186       // Copy the first request's information
// 2187       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
// 2188       {
// 2189         status = ZDP_NO_ENTRY;
// 2190         sendRsp = TRUE;
// 2191       }
// 2192     }
// 2193     else
// 2194     {
// 2195       status = ZDP_NO_ENTRY;
// 2196       sendRsp = TRUE;
// 2197     }
// 2198 
// 2199     if ( !sendRsp )
// 2200     {
// 2201       // Set into the correct state
// 2202       matchED->state = ZDMATCH_WAIT_REQ;
// 2203 
// 2204       // Setup the timeout
// 2205       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
// 2206     }
// 2207   }
// 2208   else
// 2209   {
// 2210       matchED->state = ZDMATCH_SENDING_BINDS;
// 2211 
// 2212       // Copy the 2nd request's information
// 2213       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
// 2214       {
// 2215         status = ZDP_NO_ENTRY;
// 2216         sendRsp = TRUE;
// 2217       }
// 2218 
// 2219       // Make a source match for ed1
// 2220       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2221                   matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2222                   matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
// 2223       if ( matchED->ed1numMatched )
// 2224       {
// 2225         // Save the match list
// 2226         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
// 2227         if ( matchED->ed1Matched )
// 2228         {
// 2229           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
// 2230         }
// 2231         else
// 2232         {
// 2233           // Allocation error, stop
// 2234           status = ZDP_NO_ENTRY;
// 2235           sendRsp = TRUE;
// 2236         }
// 2237       }
// 2238 
// 2239       // Make a source match for ed2
// 2240       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2241                   matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2242                   matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
// 2243       if ( matchED->ed2numMatched )
// 2244       {
// 2245         // Save the match list
// 2246         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
// 2247         if ( matchED->ed2Matched )
// 2248         {
// 2249           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
// 2250         }
// 2251         else
// 2252         {
// 2253           // Allocation error, stop
// 2254           status = ZDP_NO_ENTRY;
// 2255           sendRsp = TRUE;
// 2256         }
// 2257       }
// 2258 
// 2259       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
// 2260       {
// 2261         // Do the first unbind/bind state
// 2262         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
// 2263       }
// 2264       else
// 2265       {
// 2266         status = ZDP_NO_MATCH;
// 2267         sendRsp = TRUE;
// 2268       }
// 2269   }
// 2270 
// 2271   if ( sendRsp )
// 2272   {
// 2273     // send response to this requester
// 2274     dstAddr.addrMode = Addr16Bit;
// 2275     dstAddr.addr.shortAddr = bindReq->srcAddr;
// 2276     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
// 2277 
// 2278     if ( matchED->state == ZDMATCH_SENDING_BINDS )
// 2279     {
// 2280       // send response to first requester
// 2281       dstAddr.addrMode = Addr16Bit;
// 2282       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2283       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2284     }
// 2285 
// 2286     // Process ended - release memory used
// 2287     ZDO_RemoveMatchMemory();
// 2288   }
// 2289 }
// 2290 
// 2291 /*********************************************************************
// 2292  * @fn      ZDO_RemoveMatchMemory()
// 2293  *
// 2294  * @brief   Called to clear the memory used for the end device bind.
// 2295  *
// 2296  * @param  none
// 2297  *
// 2298  * @return  none
// 2299  */
// 2300 static void ZDO_RemoveMatchMemory( void )
// 2301 {
// 2302   if ( matchED != NULL )
// 2303   {
// 2304     if ( matchED->ed2Matched != NULL )
// 2305     {
// 2306       osal_mem_free( matchED->ed2Matched );
// 2307     }
// 2308     if ( matchED->ed1Matched != NULL )
// 2309     {
// 2310       osal_mem_free( matchED->ed1Matched );
// 2311     }
// 2312     if ( matchED->ed1.inClusters != NULL )
// 2313     {
// 2314       osal_mem_free( matchED->ed1.inClusters );
// 2315     }
// 2316     if ( matchED->ed1.outClusters != NULL )
// 2317     {
// 2318       osal_mem_free( matchED->ed1.outClusters );
// 2319     }
// 2320     if ( matchED->ed2.inClusters != NULL )
// 2321     {
// 2322       osal_mem_free( matchED->ed2.inClusters );
// 2323     }
// 2324     if ( matchED->ed2.outClusters != NULL )
// 2325     {
// 2326       osal_mem_free( matchED->ed2.outClusters );
// 2327     }
// 2328 
// 2329     osal_mem_free( matchED );
// 2330     matchED = (ZDMatchEndDeviceBind_t *)NULL;
// 2331   }
// 2332 }
// 2333 
// 2334 /*********************************************************************
// 2335  * @fn      ZDO_CopyMatchInfo()
// 2336  *
// 2337  * @brief   Called to copy memory used for the end device bind.
// 2338  *
// 2339  * @param  srcReq - source information
// 2340  * @param  dstReq - destination location
// 2341  *
// 2342  * @return  TRUE if copy was successful.
// 2343  */
// 2344 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
// 2345 {
// 2346   uint8 allOK = TRUE;
// 2347 
// 2348   // Copy bind information into the match info structure
// 2349   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
// 2350 
// 2351   // Initialize the destination cluster pointers
// 2352   destReq->inClusters = NULL;
// 2353   destReq->outClusters = NULL;
// 2354 
// 2355   // Copy input cluster IDs
// 2356   if ( srcReq->numInClusters )
// 2357   {
// 2358     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
// 2359     if ( destReq->inClusters )
// 2360     {
// 2361       // Copy the clusters
// 2362       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2363                       (srcReq->numInClusters * sizeof ( uint16 )) );
// 2364     }
// 2365     else
// 2366     {
// 2367       allOK = FALSE;
// 2368     }
// 2369   }
// 2370 
// 2371   // Copy output cluster IDs
// 2372   if ( srcReq->numOutClusters )
// 2373   {
// 2374     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
// 2375     if ( destReq->outClusters )
// 2376     {
// 2377       // Copy the clusters
// 2378       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2379                       (srcReq->numOutClusters * sizeof ( uint16 )) );
// 2380     }
// 2381     else
// 2382     {
// 2383       allOK = FALSE;
// 2384     }
// 2385   }
// 2386 
// 2387   if ( allOK == FALSE )
// 2388   {
// 2389     if ( destReq->inClusters != NULL )
// 2390     {
// 2391       osal_mem_free( destReq->inClusters );
// 2392     }
// 2393     if ( destReq->outClusters != NULL )
// 2394     {
// 2395       osal_mem_free( destReq->outClusters );
// 2396     }
// 2397   }
// 2398 
// 2399   return ( allOK );
// 2400 }
// 2401 
// 2402 /*********************************************************************
// 2403  * @fn      ZDMatchSendState()
// 2404  *
// 2405  * @brief   State machine for the End device match message algorithm.
// 2406  *
// 2407  * @param  reason - state of algoritm
// 2408  * @param  status - initial message status
// 2409  * @param  TransSeq - next transaction sequence number
// 2410  *
// 2411  * @return  FALSE if error and we are not currently matching, TRUE
// 2412  *          if success.
// 2413  */
// 2414 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
// 2415 {
// 2416   uint8 *dstIEEEAddr = NULL;
// 2417   uint8 dstEP = 0xFF;
// 2418   zAddrType_t dstAddr;
// 2419   zAddrType_t destinationAddr;
// 2420   uint16 msgType;
// 2421   uint16 clusterID = 0xFFFF;
// 2422   ZDEndDeviceBind_t *ed = NULL;
// 2423   uint8 rspStatus = ZDP_SUCCESS;
// 2424 
// 2425   if ( matchED == NULL )
// 2426   {
// 2427     return ( FALSE );
// 2428   }
// 2429 
// 2430   // Check sequence number
// 2431   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
// 2432   {
// 2433     if ( TransSeq != matchED->transSeq )
// 2434     {
// 2435       return( FALSE ); // ignore the message
// 2436     }
// 2437   }
// 2438 
// 2439   // turn off timer
// 2440   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
// 2441 
// 2442   if ( reason == ZDMATCH_REASON_TIMEOUT )
// 2443   {
// 2444     rspStatus = ZDP_TIMEOUT;    // The process will stop
// 2445   }
// 2446 
// 2447   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
// 2448   {
// 2449     matchED->sending = ZDMATCH_SENDING_UNBIND;
// 2450 
// 2451     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
// 2452     {
// 2453       rspStatus = status;
// 2454     }
// 2455   }
// 2456   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
// 2457   {
// 2458     if ( status == ZDP_SUCCESS )
// 2459     {
// 2460       matchED->sending = ZDMATCH_SENDING_UNBIND;
// 2461     }
// 2462     else
// 2463     {
// 2464       matchED->sending = ZDMATCH_SENDING_BIND;
// 2465     }
// 2466   }
// 2467 
// 2468   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
// 2469   {
// 2470     // Move to the next cluster ID
// 2471     if ( matchED->ed1numMatched )
// 2472     {
// 2473       matchED->ed1numMatched--;
// 2474     }
// 2475     else if ( matchED->ed2numMatched )
// 2476     {
// 2477       matchED->ed2numMatched--;
// 2478     }
// 2479   }
// 2480 
// 2481   // What message do we send now
// 2482   if ( matchED->ed1numMatched )
// 2483   {
// 2484     ed = &(matchED->ed1);
// 2485     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
// 2486     dstIEEEAddr = matchED->ed2.ieeeAddr;
// 2487     dstEP = matchED->ed2.endpoint;
// 2488   }
// 2489   else if ( matchED->ed2numMatched )
// 2490   {
// 2491     ed = &(matchED->ed2);
// 2492     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
// 2493     dstIEEEAddr = matchED->ed1.ieeeAddr;
// 2494     dstEP = matchED->ed1.endpoint;
// 2495   }
// 2496 
// 2497   dstAddr.addrMode = Addr16Bit;
// 2498 
// 2499   // Send the next message
// 2500   if ( (rspStatus == ZDP_SUCCESS) && ed )
// 2501   {
// 2502     // Send unbind/bind message to source
// 2503     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
// 2504     {
// 2505       msgType = Unbind_req;
// 2506     }
// 2507     else
// 2508     {
// 2509       msgType = Bind_req;
// 2510     }
// 2511 
// 2512     dstAddr.addr.shortAddr = ed->srcAddr;
// 2513 
// 2514     // Save off the transaction sequence number
// 2515     matchED->transSeq = ZDP_TransID;
// 2516 
// 2517     destinationAddr.addrMode = Addr64Bit;
// 2518     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
// 2519 
// 2520     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2521         &destinationAddr, dstEP, ed->SecurityUse );
// 2522 
// 2523     // Set timeout for response
// 2524     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
// 2525   }
// 2526   else
// 2527   {
// 2528     // Send the response messages to requesting devices
// 2529     // send response to first requester
// 2530     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2531     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
// 2532 
// 2533     // send response to second requester
// 2534     if ( matchED->state == ZDMATCH_SENDING_BINDS )
// 2535     {
// 2536       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
// 2537       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2538     }
// 2539 
// 2540     // Process ended - release memory used
// 2541     ZDO_RemoveMatchMemory();
// 2542   }
// 2543 
// 2544   return ( TRUE );
// 2545 }
// 2546 
// 2547 /*********************************************************************
// 2548  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2549  *
// 2550  * @brief   End device bind timeout.
// 2551  *
// 2552  * @param  none
// 2553  *
// 2554  * @return  none
// 2555  */
// 2556 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
// 2557 {
// 2558   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
// 2559 }
// 2560 #endif // ZG_BUILD_COORDINATOR_TYPE
// 2561 
// 2562 /*********************************************************************
// 2563  * ZDO MESSAGE PARSING API FUNCTIONS
// 2564  */
// 2565 
// 2566 /*********************************************************************
// 2567  * @fn          ZDO_ParseEndDeviceBindReq
// 2568  *
// 2569  * @brief       This function parses the End_Device_Bind_req message.
// 2570  *
// 2571  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2572  *            function and must be freed by that calling function.
// 2573  *
// 2574  * @param       inMsg  - incoming message (request)
// 2575  * @param       bindReq - pointer to place to parse message to
// 2576  *
// 2577  * @return      none
// 2578  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2579 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock486 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2580 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 2581   uint8 *msg;
// 2582 
// 2583   // Parse the message
// 2584   bindReq->TransSeq = inMsg->TransSeq;
        MOV     A,R2
        ADD     A,#0xf
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_445:
        LCALL   ?Subroutine37 & 0xFFFF
// 2585   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_64:
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_321:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine148_0 & 0xFFFF
// 2586   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_265:
        MOV     A,R2
        ADD     A,#0xe
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_446:
        LCALL   ?Subroutine12 & 0xFFFF
// 2587   msg = inMsg->asdu;
// 2588 
// 2589   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_3:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine9 & 0xFFFF
// 2590   msg += 2;
// 2591 
// 2592   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??CrossCallReturnLabel_447:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 2
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0x6
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 2593   msg += Z_EXTADDR_LEN;
        LCALL   ?Subroutine91 & 0xFFFF
// 2594 
// 2595   bindReq->endpoint = *msg++;
??CrossCallReturnLabel_368:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_383:
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_399:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
// 2596   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_21:
        MOV     R0,A
        MOV     A,R6
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_175:
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_400:
        MOV     A,R0
        LCALL   ??Subroutine182_0 & 0xFFFF
// 2597   msg += 2;
// 2598 
// 2599   bindReq->inClusters = NULL;
??CrossCallReturnLabel_449:
        MOV     A,R6
        ADD     A,#0x12
        MOV     ?V0 + 4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     DPL,?V0 + 4
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2600   bindReq->outClusters = NULL;
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_165:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine48 & 0xFFFF
// 2601 
// 2602   if ((bindReq->numInClusters = *msg++) &&
// 2603       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_92:
        MOV     R0,A
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     A,R6
        ADD     A,#0x11
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_167:
        MOV     A,R0
        MOVX    @DPTR,A
        JZ      ??ZDO_ParseEndDeviceBindReq_0
        ; Setup parameters for call to function osal_mem_alloc
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_52:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_215:
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDO_ParseEndDeviceBindReq_0
// 2604   {
// 2605     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDO_ConvertOTAClusters?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        SJMP    ??ZDO_ParseEndDeviceBindReq_1
// 2606   }
// 2607   else
// 2608   {
// 2609     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_0:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CLR     A
        MOVX    @DPTR,A
// 2610   }
// 2611 
// 2612   if ((bindReq->numOutClusters = *msg++) &&
// 2613       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??ZDO_ParseEndDeviceBindReq_1:
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_114:
        MOV     A,R6
        ADD     A,#0x14
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_374:
        MOV     A,R0
        MOVX    @DPTR,A
        JZ      ??ZDO_ParseEndDeviceBindReq_2
        ; Setup parameters for call to function osal_mem_alloc
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_53:
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_216:
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDO_ParseEndDeviceBindReq_2
// 2614   {
// 2615     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDO_ConvertOTAClusters?relay
        SJMP    ??ZDO_ParseEndDeviceBindReq_3
// 2616   }
// 2617   else
// 2618   {
// 2619     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_2:
        MOV     DPL,R6
        MOV     DPH,R7
        CLR     A
        MOVX    @DPTR,A
          CFI EndBlock cfiBlock486
// 2620   }
// 2621 }
??ZDO_ParseEndDeviceBindReq_3:
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock487 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock487

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond488 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+0
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker490 Using cfiCommon1
          CFI (cfiPicker490) NoFunction
          CFI (cfiPicker490) Picker
        MOV     ?V0 + 0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     DPL,?V0 + 0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiPicker490

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond491 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+0
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker493 Using cfiCommon1
          CFI (cfiPicker493) NoFunction
          CFI (cfiPicker493) Picker
        MOV     ?V0 + 8,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 9,A
        MOV     DPL,?V0 + 8
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiPicker493

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond494 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_368
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+0
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker496 Using cfiCommon1
          CFI (cfiPicker496) NoFunction
          CFI (cfiPicker496) Picker
        MOV     A,?V0 + 2
        ADD     A,#0x8
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiPicker496
        REQUIRE ??Subroutine169_0
        ; // Fall through to label ??Subroutine169_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine169_0:
          CFI Block cfiCond497 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_370
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+0
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+0
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker500 Using cfiCommon1
          CFI (cfiPicker500) NoFunction
          CFI (cfiPicker500) Picker
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiPicker500

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond501 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+0
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+0
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker504 Using cfiCommon1
          CFI (cfiPicker504) NoFunction
          CFI (cfiPicker504) Picker
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        RET
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiPicker504

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond505 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+0
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker507 Using cfiCommon1
          CFI (cfiPicker507) NoFunction
          CFI (cfiPicker507) Picker
        INC     DPTR
        MOVX    @DPTR,A
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_233:
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_285:
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_204:
        RET
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiPicker507
// 2622 
// 2623 /*********************************************************************
// 2624  * @fn          ZDO_ParseBindUnbindReq
// 2625  *
// 2626  * @brief       This function parses the Bind_req or Unbind_req message.
// 2627  *
// 2628  * @param       inMsg  - incoming message (request)
// 2629  * @param       pReq - place to put parsed information
// 2630  *
// 2631  * @return      none
// 2632  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2633 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock508 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2634 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2635   uint8 *msg;
// 2636 
// 2637   msg = inMsg->asdu;
        LCALL   ?Subroutine88 & 0xFFFF
// 2638   osal_cpyExtAddr( pReq->srcAddress, msg );
??CrossCallReturnLabel_156:
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??sAddrExtCpy?relay
// 2639   msg += Z_EXTADDR_LEN;
        LCALL   ?Subroutine95 & 0xFFFF
// 2640   pReq->srcEndpoint = *msg++;
??CrossCallReturnLabel_371:
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_115:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine26 & 0xFFFF
// 2641   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_35:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine10 & 0xFFFF
// 2642   msg += 2;
// 2643   pReq->dstAddress.addrMode = *msg++;
??CrossCallReturnLabel_465:
        MOV     R0,A
        MOV     A,?V0 + 0
        LCALL   ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_244:
        LCALL   ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_406:
        MOV     A,R0
        LCALL   ?Subroutine38 & 0xFFFF
// 2644   if ( pReq->dstAddress.addrMode == Addr64Bit )
??CrossCallReturnLabel_67:
        ADD     A,#0xb
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseBindUnbindReq_0
// 2645   {
// 2646     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   ??sAddrExtCpy?relay
// 2647     msg += Z_EXTADDR_LEN;
// 2648     pReq->dstEndpoint = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0x14
        LCALL   ??Subroutine173_0 & 0xFFFF
// 2649   }
??CrossCallReturnLabel_407:
        POP     A
          CFI CFA_SP SP+0
        SJMP    ??ZDO_ParseBindUnbindReq_1
// 2650   else
// 2651   {
// 2652     // copy group address
// 2653     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_0:
        LCALL   ?Subroutine72 & 0xFFFF
// 2654   }
??CrossCallReturnLabel_127:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseBindUnbindReq_1:
        MOVX    @DPTR,A
// 2655 }
        LJMP    ??Subroutine144_0 & 0xFFFF
          CFI EndBlock cfiBlock508

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond509 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+0
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker511 Using cfiCommon1
          CFI (cfiPicker511) NoFunction
          CFI (cfiPicker511) Picker
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_441:
        ; Setup parameters for call to function AddrMgrExtAddrValid
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        RET
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiPicker511

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond512 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_156
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+0
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_123
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+0
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_124
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+0
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker516 Using cfiCommon1
          CFI (cfiPicker516) NoFunction
          CFI (cfiPicker516) Picker
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_235:
        ADDC    A,#0x0
        MOV     DPH,A
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiPicker516
        REQUIRE ??Subroutine170_0
        ; // Fall through to label ??Subroutine170_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine170_0:
          CFI Block cfiCond517 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_439, ??CrossCallReturnLabel_149
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+0
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_435
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+0
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_436
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+0
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_437
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+0
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_ParseAddrRsp
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_442, ??CrossCallReturnLabel_438
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+0
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_155
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+0
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_156
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+0
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_123
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+0
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_124
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+0
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker527 Using cfiCommon1
          CFI (cfiPicker527) NoFunction
          CFI (cfiPicker527) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        RET
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiPicker527

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond528 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_343
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_344
          CFI (cfiCond529) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond529) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond529) CFA_SP SP+-5
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_2
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+0
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_3
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+0
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_155
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+0
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_441, ??CrossCallReturnLabel_156
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+0
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_123
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+0
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_440, ??CrossCallReturnLabel_124
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+0
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_0
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+0
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_1
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+0
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_96
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+0
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_97
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+0
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_435
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+0
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_436
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+0
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_437
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+0
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_100
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+0
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_101
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+0
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDO_ParseEPListRsp
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_157
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+0
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDO_ParseUserDescRsp
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_158
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+0
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_159
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+0
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker548 Using cfiCommon1
          CFI (cfiPicker548) NoFunction
          CFI (cfiPicker548) Picker
        MOV     A,R2
        ADD     A,#0x13
        MOV     DPL,A
        MOV     A,R3
        RET
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiPicker548
// 2656 
// 2657 /*********************************************************************
// 2658  * @fn      ZDO_ParseAddrRsp
// 2659  *
// 2660  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2661  *          structure.
// 2662  *
// 2663  * @param   inMsg - incoming message
// 2664  *
// 2665  * @return  pointer to parsed structures.  This structure was
// 2666  *          allocated using osal_mem_alloc, so it must be freed
// 2667  *          by the calling function [osal_mem_free()].
// 2668  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2669 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock549 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 2670 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2671   ZDO_NwkIEEEAddrResp_t *rsp;
// 2672   uint8 *msg;
// 2673   byte cnt = 0;
        MOV     ?V0 + 2,#0x0
// 2674 
// 2675   // Calculate the number of items in the list
// 2676   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV     A,R2
        ADD     A,#0x13
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        ADD     A,#0x10
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_277:
        CLR     C
        SUBB    A,#0xc
        JC      ??ZDO_ParseAddrRsp_0
// 2677   {
// 2678     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine156_0 & 0xFFFF
// 2679   }
??CrossCallReturnLabel_327:
        XCH     A,R0
        ADD     A,#0xb
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine152_0 & 0xFFFF
??CrossCallReturnLabel_278:
        MOV     ?V0 + 2,A
// 2680   else
// 2681   {
// 2682     cnt = 0;
// 2683   }
// 2684 
// 2685   // Make buffer
// 2686   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 2
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0xd
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 2687 
// 2688   if ( rsp )
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??ZDO_ParseAddrRsp_1
// 2689   {
// 2690     msg = inMsg->asdu;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine179_0 & 0xFFFF
// 2691 
// 2692     rsp->status = *msg++;
??CrossCallReturnLabel_438:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine27 & 0xFFFF
// 2693     if ( rsp->status == ZDO_SUCCESS )
??CrossCallReturnLabel_37:
        JNZ     ??ZDO_ParseAddrRsp_1
// 2694     {
// 2695       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 2696       msg += Z_EXTADDR_LEN;
        LCALL   ?Subroutine95 & 0xFFFF
// 2697       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_372:
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_117:
        INC     DPTR
        LCALL   ?Subroutine32 & 0xFFFF
// 2698 
// 2699       msg += 2;
// 2700       rsp->numAssocDevs = 0;
??CrossCallReturnLabel_56:
        MOV     A,?V0 + 0
        ADD     A,#0xb
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
// 2701 
// 2702       // StartIndex field is only present if NumAssocDev field is non-zero.
// 2703       if ( cnt > 0 )
        MOV     A,?V0 + 2
        JZ      ??ZDO_ParseAddrRsp_1
// 2704       {
// 2705         uint16 *pList = &(rsp->devList[0]);
        MOV     A,?V0 + 0
        ADD     A,#0xd
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
// 2706         byte n = cnt;
// 2707 
// 2708         rsp->numAssocDevs = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine23 & 0xFFFF
// 2709         rsp->startIndex = *msg++;
??CrossCallReturnLabel_30:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_413:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_77:
        MOV     ?V0 + 3,?V0 + 2
// 2710 
// 2711         while ( n != 0 )
// 2712         {
// 2713           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine30 & 0xFFFF
// 2714           msg += sizeof( uint16 );
??CrossCallReturnLabel_45:
        LCALL   ?Subroutine140 & 0xFFFF
// 2715           n--;
// 2716         }
??CrossCallReturnLabel_473:
        DEC     ?V0 + 3
        MOV     A,?V0 + 3
        JNZ     ??ZDO_ParseAddrRsp_2
// 2717       }
// 2718     }
// 2719   }
// 2720 
// 2721   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LJMP    ??Subroutine168_0 & 0xFFFF
          CFI EndBlock cfiBlock549
// 2722 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond550 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_371
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function ZDO_ParseAddrRsp
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+0
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+0
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker553 Using cfiCommon1
          CFI (cfiPicker553) NoFunction
          CFI (cfiPicker553) Picker
        MOV     A,R6
        ADD     A,#0x8
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiPicker553
        REQUIRE ??Subroutine171_0
        ; // Fall through to label ??Subroutine171_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine171_0:
          CFI Block cfiCond554 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_374
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+0
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDO_ParseAddrRsp
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+0
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+0
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker558 Using cfiCommon1
          CFI (cfiPicker558) NoFunction
          CFI (cfiPicker558) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_376:
        RET
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiPicker558

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond559 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_311
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_312
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+0
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_313
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+0
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_371
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+0
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDO_ParseAddrRsp
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_372
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+0
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_373
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+0
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_374
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+0
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_150
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+0
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_151
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+0
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker568 Using cfiCommon1
          CFI (cfiPicker568) NoFunction
          CFI (cfiPicker568) Picker
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiPicker568
// 2723 
// 2724 /*********************************************************************
// 2725  * @fn          ZDO_ParseNodeDescRsp
// 2726  *
// 2727  * @brief       This function parses the Node_Desc_rsp message.
// 2728  *
// 2729  * @param       inMsg - incoming message
// 2730  * @param       pNDRsp - place to parse the message into
// 2731  *
// 2732  * @return      none
// 2733  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2734 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock569 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 2735 {
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
// 2736   uint8 *msg;
// 2737 
// 2738   msg = inMsg->asdu;
        LCALL   ?Subroutine11 & 0xFFFF
// 2739 
// 2740   pNDRsp->status = *msg++;
// 2741   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2742 
// 2743   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_0:
        JZ      $+5
        LJMP    ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 2744   {
// 2745     msg += 2;
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
// 2746     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
        MOV     A,R4
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     R6,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0xf8
        ORL     A,R6
        LCALL   ?Subroutine14 & 0xFFFF
// 2747 
// 2748     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_9:
        MOV     C,0xE0 /* A   */.3
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     C,0xE0 /* A   */.3
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.3,C
        LCALL   ?Subroutine14 & 0xFFFF
// 2749     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_10:
        MOV     C,0xE0 /* A   */.4
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     C,0xE0 /* A   */.4
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.4,C
        LCALL   ?Subroutine44 & 0xFFFF
// 2750 
// 2751     msg++;  // Reserved bits.
??CrossCallReturnLabel_84:
        INC     R0
        MOV     R1,DPH
// 2752     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV     A,R4
        ADD     A,#0x4
        INC     R2
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R3,A
        MOVX    A,@DPTR
        ANL     A,#0xf8
        MOV     ?V0 + 0,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0x7
        ORL     A,?V0 + 0
        MOV     ?V0 + 0,A
        LCALL   ?Subroutine14 & 0xFFFF
// 2753     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_11:
        ANL     A,#0x7
        MOV     ?V0 + 1,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        MOV     A,#-0x8
        ANL     A,?V0 + 0
        ORL     A,?V0 + 1
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine14 & 0xFFFF
// 2754     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_12:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine24 & 0xFFFF
// 2755     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_416:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine17 & 0xFFFF
// 2756     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_19:
        LCALL   ?Subroutine17 & 0xFFFF
// 2757     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_20:
        INC     DPTR
        LCALL   ?Subroutine15 & 0xFFFF
// 2758     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_14:
        LCALL   ?Subroutine15 & 0xFFFF
// 2759     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_15:
        LCALL   ?Subroutine24 & 0xFFFF
// 2760     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_417:
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0xb
        MOV     DPL,A
        MOV     A,R5
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_401:
        MOV     A,?V0 + 0
        LCALL   ?Subroutine30 & 0xFFFF
// 2761     msg += 2;
// 2762     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??CrossCallReturnLabel_44:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        ADD     A,#0xd
        MOV     DPL,A
        MOV     A,R5
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_402:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine176_0 & 0xFFFF
// 2763     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
??CrossCallReturnLabel_418:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_380:
        MOV     A,R5
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_403:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine44 & 0xFFFF
// 2764     pNDRsp->nodeDesc.DescriptorCapability = *msg;
??CrossCallReturnLabel_85:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ?Subroutine104 & 0xFFFF
// 2765   }
??CrossCallReturnLabel_176:
        MOV     A,R5
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_404:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2766 }
??ZDO_ParseNodeDescRsp_0:
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock569

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond570 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_99
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+0
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+0
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-1
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        MOV     A,R6
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574
        REQUIRE ??Subroutine172_0
        ; // Fall through to label ??Subroutine172_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine172_0:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_378
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_291
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+0
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_292
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+0
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDO_ProcessUserDescSet
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+0
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-1
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_98
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+0
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_99
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+0
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+0
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-1
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker584 Using cfiCommon1
          CFI (cfiPicker584) NoFunction
          CFI (cfiPicker584) Picker
        ADD     A,#0xe
        MOV     DPL,A
        RET
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiPicker584

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond585 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_413
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-1
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+0
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-1
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker588 Using cfiCommon1
          CFI (cfiPicker588) NoFunction
          CFI (cfiPicker588) Picker
        MOV     A,?V0 + 0
        ADD     A,#0xc
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiPicker588
        REQUIRE ??Subroutine173_0
        ; // Fall through to label ??Subroutine173_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine173_0:
          CFI Block cfiCond589 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_407
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-1
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-1
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-1
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-1
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-1
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-1
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDO_ParseAddrRsp
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-1
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+0
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-1
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker598 Using cfiCommon1
          CFI (cfiPicker598) NoFunction
          CFI (cfiPicker598) Picker
        MOV     DPL,A
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiPicker598
        REQUIRE ??Subroutine174_0
        ; // Fall through to label ??Subroutine174_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine174_0:
          CFI Block cfiCond599 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_406
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-1
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-1
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-1
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-1
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-1
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-1
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ZDO_ParseAddrRsp
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-1
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+0
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-1
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker609 Using cfiCommon1
          CFI (cfiPicker609) NoFunction
          CFI (cfiPicker609) Picker
        MOV     A,?V0 + 1
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiPicker609
        REQUIRE ??Subroutine175_0
        ; // Fall through to label ??Subroutine175_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine175_0:
          CFI Block cfiCond610 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_385
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-1
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+0
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-1
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond614) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-1
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+0
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+0
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+0
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-1
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+0
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond620) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond620) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond620) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond620) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+0
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond621) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond621) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond621) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond621) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond621) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond621) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond621) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond621) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+0
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond622) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond622) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond622) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond622) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond622) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond622) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond622) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond622) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond622) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond622) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond622) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond622) CFA_SP SP+-1
          CFI (cfiCond622) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+0
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-1
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+0
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+0
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-1
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-1
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-1
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-1
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_406
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+0
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-1
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-1
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-1
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-1
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-1
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-1
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDO_ParseAddrRsp
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-1
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+0
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-1
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker641 Using cfiCommon1
          CFI (cfiPicker641) NoFunction
          CFI (cfiPicker641) Picker
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_461:
        RET
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiPicker641

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond642 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+0
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+0
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker645 Using cfiCommon1
          CFI (cfiPicker645) NoFunction
          CFI (cfiPicker645) Picker
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_419:
        RET
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiPicker645

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond646 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_419, ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_419, ??CrossCallReturnLabel_84
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+0
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_419, ??CrossCallReturnLabel_85
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+0
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_421, ??CrossCallReturnLabel_416
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+0
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_421, ??CrossCallReturnLabel_417
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+0
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_421, ??CrossCallReturnLabel_418
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+0
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_420, ??CrossCallReturnLabel_0
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+0
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_420, ??CrossCallReturnLabel_1
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+0
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker654 Using cfiCommon1
          CFI (cfiPicker654) NoFunction
          CFI (cfiPicker654) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        RET
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiPicker654

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond655 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+0
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker657 Using cfiCommon1
          CFI (cfiPicker657) NoFunction
          CFI (cfiPicker657) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
        RET
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiPicker657

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond658 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_416
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+0
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker660 Using cfiCommon1
          CFI (cfiPicker660) NoFunction
          CFI (cfiPicker660) Picker
        INC     DPTR
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiPicker660
        REQUIRE ??Subroutine176_0
        ; // Fall through to label ??Subroutine176_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine176_0:
          CFI Block cfiCond661 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_418
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+0
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+0
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker664 Using cfiCommon1
          CFI (cfiPicker664) NoFunction
          CFI (cfiPicker664) Picker
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_421:
        INC     R0
        MOV     R1,DPH
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiPicker664

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond665 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+0
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker667 Using cfiCommon1
          CFI (cfiPicker667) NoFunction
          CFI (cfiPicker667) Picker
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_179:
        RET
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiPicker667

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond668 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_20
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+0
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_14
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+0
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_15
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+0
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker672 Using cfiCommon1
          CFI (cfiPicker672) NoFunction
          CFI (cfiPicker672) Picker
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_231:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiPicker672

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond673 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+0
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker675 Using cfiCommon1
          CFI (cfiPicker675) NoFunction
          CFI (cfiPicker675) Picker
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_180:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiPicker675

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond676 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+0
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond678) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond678) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond678) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond678) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond678) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond678) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond678) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond678) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+0
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+0
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+0
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+0
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+0
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+0
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker684 Using cfiCommon1
          CFI (cfiPicker684) NoFunction
          CFI (cfiPicker684) Picker
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiPicker684
// 2767 
// 2768 /*********************************************************************
// 2769  * @fn          ZDO_ParsePowerDescRsp
// 2770  *
// 2771  * @brief       This function parses the Power_Desc_rsp message.
// 2772  *
// 2773  * @param       inMsg  - incoming message
// 2774  * @param       pNPRsp - place to parse the message into
// 2775  *
// 2776  * @return      none
// 2777  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2778 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock685 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 2779 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2780   uint8 *msg;
// 2781 
// 2782   msg = inMsg->asdu;
        MOV     A,R2
        LCALL   ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_245:
        MOV     A,R3
        LCALL   ?Subroutine78 & 0xFFFF
// 2783   pNPRsp->status = *msg++;
??CrossCallReturnLabel_142:
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_228:
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_76:
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
// 2784   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        LCALL   ??Subroutine149_0 & 0xFFFF
// 2785 
// 2786   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_254:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        JNZ     ??CrossCallReturnLabel_267
// 2787   {
// 2788     msg += 2;
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
// 2789     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
        MOV     A,R4
        ADD     A,#0x3
        MOV     A,R5
        ADDC    A,#0x0
        INC     R4
        INC     R4
        INC     R4
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,R6
        ORL     A,?V0 + 0
        MOV     R6,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine34 & 0xFFFF
// 2790     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
??CrossCallReturnLabel_58:
        INC     DPTR
        INC     R2
        MOV     R3,DPH
        MOV     A,R6
        ANL     A,#0xf0
        ORL     A,R0
        MOV     R0,A
        MOV     A,R7
        LCALL   ?Subroutine33 & 0xFFFF
// 2791     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
??CrossCallReturnLabel_266:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        ANL     A,#0xf
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0 + 0,A
        MOV     A,#0xc
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,R7
        ORL     A,?V0 + 1
        MOV     R7,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,R6
        LCALL   ?Subroutine34 & 0xFFFF
// 2792     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
// 2793   }
??CrossCallReturnLabel_59:
        MOV     A,R7
        ANL     A,#0xf0
        MOV     R7,A
        MOV     A,R0
        MOV     R1,A
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        ORL     A,R1
        LCALL   ?Subroutine33 & 0xFFFF
// 2794 }
??CrossCallReturnLabel_267:
        LJMP    ??Subroutine144_0 & 0xFFFF
          CFI EndBlock cfiBlock685

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond686 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_143
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+0
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker688 Using cfiCommon1
          CFI (cfiPicker688) NoFunction
          CFI (cfiPicker688) Picker
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_287:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiPicker688

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond689 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+0
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker691 Using cfiCommon1
          CFI (cfiPicker691) NoFunction
          CFI (cfiPicker691) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_194:
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R0,A
        RET
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiPicker691
// 2795 
// 2796 /*********************************************************************
// 2797  * @fn          ZDO_ParseSimpleDescRsp
// 2798  *
// 2799  * @brief       This function parse the Simple_Desc_rsp message.
// 2800  *
// 2801  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 2802  *         in the SimpleDescriptionFormat_t structure are allocated
// 2803  *         and the calling function needs to free [osal_msg_free()]
// 2804  *         these buffers.
// 2805  *
// 2806  * @param       inMsg  - incoming message
// 2807  * @param       pSimpleDescRsp - place to parse the message into
// 2808  *
// 2809  * @return      none
// 2810  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2811 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock692 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 2812 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2813   uint8 *msg;
// 2814 
// 2815   msg = inMsg->asdu;
        LCALL   ?Subroutine11 & 0xFFFF
// 2816   pSimpleDescRsp->status = *msg++;
// 2817   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2818   msg += sizeof ( uint16 );
// 2819   msg++; // Skip past the length field.
// 2820 
// 2821   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_1:
        JNZ     ??ZDO_ParseSimpleDescRsp_0
// 2822   {
// 2823     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV     A,R4
        ADD     A,#0x3
        MOV     R4,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R0
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??ZDO_ParseSimpleDescBuf?relay
          CFI EndBlock cfiBlock692
// 2824   }
// 2825 }
??ZDO_ParseSimpleDescRsp_0:
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock693 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock693

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond694 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+0
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker696 Using cfiCommon1
          CFI (cfiPicker696) NoFunction
          CFI (cfiPicker696) Picker
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_232:
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_213:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_420:
        MOV     R0,DPL
        MOV     R1,DPH
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiPicker696

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond697 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_111
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDO_ProcessUserDescSet
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_110
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+0
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_0
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+0
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_1
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+0
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker701 Using cfiCommon1
          CFI (cfiPicker701) NoFunction
          CFI (cfiPicker701) Picker
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_226:
        RET
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiPicker701

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond702 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_95
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+0
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_106
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+0
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDO_ProcessUserDescReq
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_198, ??CrossCallReturnLabel_107
          CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond705) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond705) CFA_SP SP+0
          CFI (cfiCond705) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_111
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+0
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDO_ProcessUserDescSet
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_110
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+0
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_0
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+0
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_1
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+0
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker710 Using cfiCommon1
          CFI (cfiPicker710) NoFunction
          CFI (cfiPicker710) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiPicker710
// 2826 
// 2827 /*********************************************************************
// 2828  * @fn          ZDO_ParseEPListRsp
// 2829  *
// 2830  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 2831  *
// 2832  * @param       inMsg  - incoming message
// 2833  *
// 2834  * @return      none
// 2835  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2836 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock711 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 2837 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2838   ZDO_ActiveEndpointRsp_t *pRsp;
// 2839   uint8 *msg;
// 2840   uint8 Status;
// 2841   uint8 cnt;
// 2842 
// 2843   msg = inMsg->asdu;
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_157:
        LCALL   ?Subroutine121 & 0xFFFF
// 2844   Status = *msg++;
??CrossCallReturnLabel_210:
        MOV     ?V0 + 5,A
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
// 2845   cnt = msg[2];
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
// 2846 
// 2847   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        MOV     DPL,A
        MOV     ?V0 + 0,DPL
        ; Setup parameters for call to function osal_mem_alloc
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R6,?V0 + 6
        MOV     R7,?V0 + 7
// 2848   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseEPListRsp_0
// 2849   {
// 2850     pRsp->status = Status;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 5
        LCALL   ?Subroutine48 & 0xFFFF
// 2851     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_93:
        MOV     R2,A
        LCALL   ?Subroutine21 & 0xFFFF
// 2852     msg += sizeof( uint16 );
// 2853     pRsp->cnt = cnt;
// 2854     msg++; // pass cnt
// 2855     osal_memcpy( pRsp->epList, msg, cnt );
??CrossCallReturnLabel_422:
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 4,R1
        MOV     ?V0 + 5,R2
        MOV     ?V0 + 6,R0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     R4,?V0 + 0
        MOV     R5,#0x0
        MOV     A,R6
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 2856   }
// 2857 
// 2858   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock711
// 2859 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond712 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function ZDO_ParseEPListRsp
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+0
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker714 Using cfiCommon1
          CFI (cfiPicker714) NoFunction
          CFI (cfiPicker714) Picker
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_221:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiPicker714

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond715 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_422
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDO_ParseUserDescRsp
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+0
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker717 Using cfiCommon1
          CFI (cfiPicker717) NoFunction
          CFI (cfiPicker717) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiPicker717
        REQUIRE ??Subroutine177_0
        ; // Fall through to label ??Subroutine177_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine177_0:
          CFI Block cfiCond718 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_424
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ZDO_ParseEPListRsp
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond719) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond719) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond719) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+0
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function ZDO_ParseUserDescRsp
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond720) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond720) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond720) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond720) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond720) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+0
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker721 Using cfiCommon1
          CFI (cfiPicker721) NoFunction
          CFI (cfiPicker721) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_425:
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiPicker721
// 2860 
// 2861 /*********************************************************************
// 2862  * @fn          ZDO_ParseServerDiscRsp
// 2863  *
// 2864  * @brief       Parse the Server_Discovery_rsp message.
// 2865  *
// 2866  * @param       inMsg - incoming message.
// 2867  * @param       pRsp - place to put the parsed information.
// 2868  *
// 2869  * @return      none
// 2870  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2871 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock722 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 2872 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2873   pRsp->status = inMsg->asdu[0];
        MOV     A,R2
        ADD     A,#0x13
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_229:
        LCALL   ?Subroutine14 & 0xFFFF
// 2874   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_13:
        LCALL   ??Subroutine142_0 & 0xFFFF
??CrossCallReturnLabel_237:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ??Subroutine184_0 & 0xFFFF
??CrossCallReturnLabel_462:
        INC     DPTR
        LCALL   ??Subroutine149_0 & 0xFFFF
// 2875 }
??CrossCallReturnLabel_255:
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock722

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond723 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_20
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+0
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_14
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+0
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_15
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+0
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond727) CFA_SP SP+0
          CFI (cfiCond727) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+0
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+0
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker730 Using cfiCommon1
          CFI (cfiPicker730) NoFunction
          CFI (cfiPicker730) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiPicker730
// 2876 
// 2877 /*********************************************************************
// 2878  * @fn          ZDO_ParseMgmtLqiRsp
// 2879  *
// 2880  * @brief       This function parses the incoming Management
// 2881  *              LQI response
// 2882  *
// 2883  * @param       inMsg - incoming message
// 2884  *
// 2885  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2886  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2887  *          by the calling function [osal_mem_free()].
// 2888  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2889 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock731 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 2890 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2891   ZDO_MgmtLqiRsp_t *pRsp;
// 2892   uint8 status;
// 2893   uint8 startIndex = 0;
        MOV     ?V0 + 5,#0x0
// 2894   uint8 neighborLqiCount = 0;
        MOV     ?V0 + 4,#0x0
// 2895   uint8 neighborLqiEntries = 0;
        MOV     ?V0 + 6,#0x0
// 2896   uint8 *msg;
// 2897 
// 2898   msg = inMsg->asdu;
        LCALL   ?Subroutine54 & 0xFFFF
// 2899 
// 2900   status = *msg++;
// 2901   if ( status == ZSuccess )
??CrossCallReturnLabel_100:
        JNZ     ??CrossCallReturnLabel_104
// 2902   {
// 2903     neighborLqiEntries = *msg++;
        LCALL   ?Subroutine56 & 0xFFFF
// 2904     startIndex = *msg++;
// 2905     neighborLqiCount = *msg++;
// 2906   }
// 2907 
// 2908   // Allocate a buffer big enough to handle the list.
// 2909   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 2910             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( neighborLqiItem_t )) );
??CrossCallReturnLabel_104:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 4
        MOV     B,#0xe
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_168:
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
// 2911   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseMgmtLqiRsp_0
// 2912   {
// 2913     uint8 x;
// 2914     neighborLqiItem_t *pList = pRsp->list;
        MOV     A,R6
        ADD     A,#0x4
        MOV     ?V0 + 0,A
        MOV     A,R7
        LCALL   ??Subroutine178_0 & 0xFFFF
// 2915     pRsp->status = status;
??CrossCallReturnLabel_430:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
// 2916     pRsp->neighborLqiEntries = neighborLqiEntries;
        INC     DPTR
        MOV     A,?V0 + 6
        LCALL   ?Subroutine43 & 0xFFFF
// 2917     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_80:
        INC     DPTR
        MOV     A,?V0 + 5
        LCALL   ??Subroutine177_0 & 0xFFFF
// 2918     pRsp->neighborLqiCount = neighborLqiCount;
// 2919 
// 2920     for ( x = 0; x < neighborLqiCount; x++ )
??CrossCallReturnLabel_424:
        MOV     ?V0 + 5,#0x0
        SJMP    ??ZDO_ParseMgmtLqiRsp_1
// 2921     {
// 2922       osal_cpyExtAddr(pList->extPANId, msg);   //Copy extended PAN ID
??ZDO_ParseMgmtLqiRsp_2:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_177:
        LCALL   ??sAddrExtCpy?relay
// 2923       msg += Z_EXTADDR_LEN;
// 2924 
// 2925       msg += Z_EXTADDR_LEN;  // Throwing away IEEE.
        MOV     A,?V0 + 2
        ADD     A,#0x10
        LCALL   ?Subroutine99 & 0xFFFF
// 2926       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_252:
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL   ??Subroutine149_0 & 0xFFFF
// 2927       msg += 2 + 1 + 1 + 1;      // Skip DeviceType, RxOnIdle, Rlationship, PermitJoining and Depth
??CrossCallReturnLabel_256:
        MOV     A,?V0 + 2
        ADD     A,#0x5
        LCALL   ??Subroutine169_0 & 0xFFFF
// 2928       pList->rxLqi = *msg++;
??CrossCallReturnLabel_370:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xd
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_408:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine19 & 0xFFFF
// 2929       pList->txQuality = 0;  // This is not specified OTA by ZigBee 1.1.
??CrossCallReturnLabel_23:
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_414:
        CLR     A
        MOVX    @DPTR,A
// 2930       pList++;
        MOV     A,?V0 + 0
        ADD     A,#0xe
        LCALL   ?Subroutine102 & 0xFFFF
// 2931     }
??CrossCallReturnLabel_433:
        INC     ?V0 + 5
??ZDO_ParseMgmtLqiRsp_1:
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ParseMgmtLqiRsp_2
// 2932   }
// 2933 
// 2934   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_0:
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock731
// 2935 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond732 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+0
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker734 Using cfiCommon1
          CFI (cfiPicker734) NoFunction
          CFI (cfiPicker734) Picker
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_202:
        RET
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiPicker734

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond735 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_118
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+0
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_102
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+0
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_103
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+0
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker739 Using cfiCommon1
          CFI (cfiPicker739) NoFunction
          CFI (cfiPicker739) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiPicker739

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond740 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+0
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+0
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+0
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker744 Using cfiCommon1
          CFI (cfiPicker744) NoFunction
          CFI (cfiPicker744) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_426:
        RET
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiPicker744

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond745 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_422
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_ParseUserDescRsp
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_423
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+0
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_424
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+0
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_82
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+0
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_79
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+0
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_80
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+0
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_81
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+0
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDO_ParseAddrRsp
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_37
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+0
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_38
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+0
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_39
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+0
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_35
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+0
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_36
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+0
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_67
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+0
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_68
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+0
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function ZDO_ParseAddrRsp
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_30
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+0
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_31
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+0
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_32
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+0
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDO_ParseAddrRsp
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_77
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+0
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_78
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+0
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker764 Using cfiCommon1
          CFI (cfiPicker764) NoFunction
          CFI (cfiPicker764) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiPicker764
// 2936 
// 2937 /*********************************************************************
// 2938  * @fn          ZDO_ParseMgmNwkDiscRsp
// 2939  *
// 2940  * @brief       This function parses the incoming Management
// 2941  *              Network Discover response.
// 2942  *
// 2943  * @param       inMsg - incoming message
// 2944  *
// 2945  * @return      pointer to parsed response.  This structure was
// 2946  *          allocated using osal_mem_alloc, so it must be freed
// 2947  *          by the calling function [osal_mem_free()].
// 2948  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2949 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock765 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 2950 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2951   ZDO_MgmNwkDiscRsp_t *pRsp;
// 2952   uint8 status;
// 2953   uint8 networkCount = 0;
        MOV     ?V0 + 6,#0x0
// 2954   uint8 startIndex = 0;
        MOV     ?V0 + 5,#0x0
// 2955   uint8 networkListCount = 0;
        MOV     ?V0 + 4,#0x0
// 2956   uint8 *msg;
// 2957 
// 2958   msg = inMsg->asdu;
        LCALL   ?Subroutine52 & 0xFFFF
// 2959   status = *msg++;
??CrossCallReturnLabel_435:
        MOV     ?V0 + 7,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2960 
// 2961   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmNwkDiscRsp_0
// 2962   {
// 2963     networkCount = *msg++;
        LCALL   ?Subroutine120 & 0xFFFF
// 2964     startIndex = *msg++;
// 2965     networkListCount = *msg++;
// 2966   }
??CrossCallReturnLabel_208:
        INC     R6
        INC     R6
        INC     R6
        MOV     R7,DPH
// 2967 
// 2968   // Allocate a buffer big enough to handle the list.
// 2969   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 2970                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_178:
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2971   if ( pRsp )
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 2972   {
// 2973     uint8 x;
// 2974     mgmtNwkDiscItem_t *pList;
// 2975 
// 2976     pRsp->status = status;
        LCALL   ?Subroutine13 & 0xFFFF
// 2977     pRsp->networkCount = networkCount;
// 2978     pRsp->startIndex = startIndex;
// 2979     pRsp->networkListCount = networkListCount;
// 2980     pList = pRsp->list;
??CrossCallReturnLabel_4:
        MOV     A,R2
        ADD     A,#0x4
        MOV     ?V0 + 0,A
        MOV     A,R3
        LCALL   ??Subroutine178_0 & 0xFFFF
// 2981 
// 2982     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_431:
        MOV     ?V0 + 5,#0x0
        SJMP    ??ZDO_ParseMgmNwkDiscRsp_2
// 2983     {
// 2984       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??sAddrExtCpy?relay
// 2985       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_102:
        INC     DPTR
        LCALL   ??Subroutine149_0 & 0xFFFF
// 2986       msg += Z_EXTADDR_LEN;
??CrossCallReturnLabel_257:
        LCALL   ?Subroutine95 & 0xFFFF
// 2987 
// 2988       pList->logicalChannel = *msg++;
??CrossCallReturnLabel_373:
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_108:
        LCALL   ?Subroutine27 & 0xFFFF
// 2989       pList->stackProfile = (*msg) & 0x0F;
??CrossCallReturnLabel_38:
        MOVX    A,@DPTR
        ANL     A,#0xf
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xb
        LCALL   ??Subroutine173_0 & 0xFFFF
// 2990       pList->version = (*msg++ >> 4) & 0x0F;
// 2991       pList->beaconOrder = (*msg) & 0x0F;
// 2992       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
// 2993       pList->permitJoining = *msg++;
// 2994       pList++;
// 2995     }
??CrossCallReturnLabel_409:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_86:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_415:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_31:
        ANL     A,#0xf
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xd
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_410:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_87:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xe
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_411:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_32:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xf
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_412:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_68:
        ADD     A,#0x10
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_434:
        INC     ?V0 + 5
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ParseMgmNwkDiscRsp_3
// 2996   }
// 2997 
// 2998   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LJMP    ??Subroutine165_0 & 0xFFFF
          CFI EndBlock cfiBlock765
// 2999 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond766 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+0
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker768 Using cfiCommon1
          CFI (cfiPicker768) NoFunction
          CFI (cfiPicker768) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiPicker768

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond769 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_432
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+0
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+0
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker772 Using cfiCommon1
          CFI (cfiPicker772) NoFunction
          CFI (cfiPicker772) Picker
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiPicker772
        REQUIRE ??Subroutine178_0
        ; // Fall through to label ??Subroutine178_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine178_0:
          CFI Block cfiCond773 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
          CFI Conditional ??CrossCallReturnLabel_429
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_430
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+0
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+0
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+0
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+0
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+0
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker779 Using cfiCommon1
          CFI (cfiPicker779) NoFunction
          CFI (cfiPicker779) Picker
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        RET
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiPicker779

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond780 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_86
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+0
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker782 Using cfiCommon1
          CFI (cfiPicker782) NoFunction
          CFI (cfiPicker782) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        RET
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiPicker782

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond783 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+0
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker785 Using cfiCommon1
          CFI (cfiPicker785) NoFunction
          CFI (cfiPicker785) Picker
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_182:
        MOV     A,?V0 + 0
        RET
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiPicker785

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond786 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+0
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+0
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker789 Using cfiCommon1
          CFI (cfiPicker789) NoFunction
          CFI (cfiPicker789) Picker
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_190:
        RET
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiPicker789

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond790 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_38
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+0
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_39
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+0
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_35
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+0
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_36
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+0
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker795 Using cfiCommon1
          CFI (cfiPicker795) NoFunction
          CFI (cfiPicker795) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_428:
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiPicker795

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond796 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+0
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+0
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker799 Using cfiCommon1
          CFI (cfiPicker799) NoFunction
          CFI (cfiPicker799) Picker
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_181:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiPicker799
// 3000 
// 3001 /*********************************************************************
// 3002  * @fn          ZDO_ParseMgmtRtgRsp
// 3003  *
// 3004  * @brief       This function parses the incoming Management
// 3005  *              Routing response.
// 3006  *
// 3007  * @param       inMsg - incoming message
// 3008  *
// 3009  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3010  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3011  *          by the calling function [osal_mem_free()].
// 3012  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3013 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock800 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 3014 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3015   ZDO_MgmtRtgRsp_t *pRsp;
// 3016   uint8 status;
// 3017   uint8 rtgCount = 0;
        MOV     ?V0 + 2,#0x0
// 3018   uint8 startIndex = 0;
        MOV     ?V0 + 1,#0x0
// 3019   uint8 rtgListCount = 0;
        MOV     ?V0 + 0,#0x0
// 3020   uint8 *msg;
// 3021 
// 3022   msg = inMsg->asdu;
        LCALL   ?Subroutine52 & 0xFFFF
// 3023 
// 3024   status = *msg++;
??CrossCallReturnLabel_436:
        MOV     ?V0 + 3,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3025   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtRtgRsp_0
// 3026   {
// 3027     rtgCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
// 3028     startIndex = *msg++;
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        INC     DPTR
// 3029     rtgListCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        INC     R6
        INC     R6
        INC     R6
        MOV     R7,DPH
// 3030   }
// 3031 
// 3032   // Allocate a buffer big enough to handle the list
// 3033   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 3034           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 0
        MOV     B,#0x7
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_169:
        LCALL   ??osal_mem_alloc?relay
// 3035   if ( pRsp )
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_ParseMgmtRtgRsp_1
// 3036   {
// 3037     uint8 x;
// 3038     rtgItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
// 3039     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
// 3040     pRsp->rtgCount = rtgCount;
        INC     DPTR
        MOV     A,?V0 + 2
        LCALL   ?Subroutine37 & 0xFFFF
// 3041     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_65:
        MOV     A,?V0 + 1
        LCALL   ?Subroutine37 & 0xFFFF
// 3042     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_66:
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 3043 
// 3044     for ( x = 0; x < rtgListCount; x++ )
        MOV     ?V0 + 1,#0x0
        SJMP    ??ZDO_ParseMgmtRtgRsp_2
// 3045     {
// 3046       uint8 statOpt;
// 3047 
// 3048       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_121:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine186_0 & 0xFFFF
// 3049       msg += 2;
// 3050       statOpt = *msg++;
??CrossCallReturnLabel_468:
        MOV     R4,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3051       pList->status = (statOpt & 0x07);
        MOV     A,#0x7
        ANL     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3052       pList->options = ((statOpt >> 3) & 0x07);
        MOV     A,R4
        RRC     A
        RRC     A
        RRC     A
        ANL     A,#0x1f
        ANL     A,#0x7
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3053       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_122:
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ?Subroutine106 & 0xFFFF
// 3054       msg += 2;
// 3055       pList++;
??CrossCallReturnLabel_469:
        MOV     A,R0
        ADD     A,#0x7
        MOV     R0,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
// 3056     }
        INC     ?V0 + 1
??ZDO_ParseMgmtRtgRsp_2:
        MOV     A,?V0 + 1
        CLR     C
        SUBB    A,?V0 + 0
        JC      ??ZDO_ParseMgmtRtgRsp_3
// 3057   }
// 3058 
// 3059   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
        LJMP    ??Subroutine168_0 & 0xFFFF
          CFI EndBlock cfiBlock800
// 3060 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond801 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+0
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond803 Using cfiCommon0
          CFI (cfiCond803) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond803) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond803) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond803) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond803) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond803) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond803) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond803) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond803) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond803) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond803) CFA_SP SP+0
          CFI (cfiCond803) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker804 Using cfiCommon1
          CFI (cfiPicker804) NoFunction
          CFI (cfiPicker804) Picker
        MUL     AB
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,B
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiCond803
          CFI EndBlock cfiPicker804

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond805 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond806) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond806) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond806) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond806) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond806) CFA_SP SP+0
          CFI (cfiCond806) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker807 Using cfiCommon1
          CFI (cfiPicker807) NoFunction
          CFI (cfiPicker807) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,?V0 + 2
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiPicker807

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond808 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_435
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+0
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond810) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+0
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker811 Using cfiCommon1
          CFI (cfiPicker811) NoFunction
          CFI (cfiPicker811) Picker
        LCALL   ?Subroutine132 & 0xFFFF
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiPicker811
??CrossCallReturnLabel_456:
        REQUIRE ??Subroutine179_0
        ; // Fall through to label ??Subroutine179_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine179_0:
          CFI Block cfiCond812 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_438
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+0
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+0
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond815) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+0
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker816 Using cfiCommon1
          CFI (cfiPicker816) NoFunction
          CFI (cfiPicker816) Picker
        LCALL   ??Subroutine170_0 & 0xFFFF
??CrossCallReturnLabel_442:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiPicker816

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond817 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond818) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond818) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond818) CFA_SP SP+0
          CFI (cfiCond818) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+0
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker820 Using cfiCommon1
          CFI (cfiPicker820) NoFunction
          CFI (cfiPicker820) Picker
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_195:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiPicker820
// 3061 
// 3062 /*********************************************************************
// 3063  * @fn          ZDO_ParseMgmtBindRsp
// 3064  *
// 3065  * @brief       This function parses the incoming Management
// 3066  *              Binding response.
// 3067  *
// 3068  * @param       inMsg - pointer to message to parse
// 3069  *
// 3070  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3071  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3072  *          by the calling function [osal_mem_free()].
// 3073  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3074 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock821 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 3075 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
// 3076   ZDO_MgmtBindRsp_t *pRsp;
// 3077   uint8 status;
// 3078   uint8 bindingCount = 0;
        MOV     ?V0 + 6,#0x0
// 3079   uint8 startIndex = 0;
        MOV     ?V0 + 5,#0x0
// 3080   uint8 bindingListCount = 0;
        MOV     ?V0 + 4,#0x0
// 3081   uint8 *msg;
// 3082 
// 3083   msg = inMsg->asdu;
        LCALL   ?Subroutine54 & 0xFFFF
// 3084 
// 3085   status = *msg++;
// 3086   if ( status == ZSuccess )
??CrossCallReturnLabel_101:
        JNZ     ??CrossCallReturnLabel_105
// 3087   {
// 3088     bindingCount = *msg++;
        LCALL   ?Subroutine56 & 0xFFFF
// 3089     startIndex = *msg++;
// 3090     bindingListCount = *msg++;
// 3091   }
// 3092 
// 3093   // Allocate a buffer big enough to handle the list
// 3094   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 3095           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??CrossCallReturnLabel_105:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 4
        MOV     B,#0x15
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_170:
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 3096   if ( pRsp )
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtBindRsp_0 & 0xFFFF
// 3097   {
// 3098     uint8 x;
// 3099     apsBindingItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R6,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R7,A
// 3100     pRsp->status = status;
        LCALL   ?Subroutine13 & 0xFFFF
// 3101     pRsp->bindingCount = bindingCount;
// 3102     pRsp->startIndex = startIndex;
// 3103     pRsp->bindingListCount = bindingListCount;
// 3104 
// 3105     for ( x = 0; x < bindingListCount; x++ )
??CrossCallReturnLabel_5:
        MOV     ?V0 + 5,#0x0
        SJMP    ??ZDO_ParseMgmtBindRsp_1
// 3106     {
// 3107       osal_cpyExtAddr( pList->srcAddr, msg );
// 3108       msg += Z_EXTADDR_LEN;
// 3109       pList->srcEP = *msg++;
// 3110 
// 3111       // Get the Cluster ID
// 3112 
// 3113       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 3114       msg += 2;
// 3115       pList->dstAddr.addrMode = *msg++;
// 3116       if ( pList->dstAddr.addrMode == Addr64Bit )
// 3117       {
// 3118         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 3119         msg += Z_EXTADDR_LEN;
// 3120         pList->dstEP = *msg++;
// 3121       }
// 3122       else
// 3123       {
// 3124         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_2:
        LCALL   ?Subroutine72 & 0xFFFF
// 3125         msg += 2;
// 3126       }
??CrossCallReturnLabel_128:
        LCALL   ??Subroutine182_0 & 0xFFFF
// 3127 
// 3128       pList++;
??CrossCallReturnLabel_450:
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        INC     ?V0 + 5
??ZDO_ParseMgmtBindRsp_1:
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,?V0 + 4
        JNC     ??ZDO_ParseMgmtBindRsp_0
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
        MOV     A,?V0 + 2
        ADD     A,#0x8
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_253:
        MOV     DPL,?V0 + 2
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_444:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_22:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_448:
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_154:
        MOV     A,R0
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_24:
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseMgmtBindRsp_2
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ??sAddrExtCpy?relay
        LCALL   ?Subroutine91 & 0xFFFF
// 3129     }
// 3130   }
??CrossCallReturnLabel_369:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_405:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_25:
        SJMP    ??CrossCallReturnLabel_450
// 3131 
// 3132   return ( pRsp );
??ZDO_ParseMgmtBindRsp_0:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock821
// 3133 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond822 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_445
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond823) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond823) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond823) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+0
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker824 Using cfiCommon1
          CFI (cfiPicker824) NoFunction
          CFI (cfiPicker824) Picker
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiPicker824
        REQUIRE ??Subroutine180_0
        ; // Fall through to label ??Subroutine180_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine180_0:
          CFI Block cfiCond825 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_444
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+0
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+0
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker828 Using cfiCommon1
          CFI (cfiPicker828) NoFunction
          CFI (cfiPicker828) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiPicker828
        REQUIRE ??Subroutine181_0
        ; // Fall through to label ??Subroutine181_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine181_0:
          CFI Block cfiCond829 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
          CFI Conditional ??CrossCallReturnLabel_443
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond830) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond830) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond830) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond830) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond830) CFA_SP SP+0
          CFI (cfiCond830) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+0
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+0
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker833 Using cfiCommon1
          CFI (cfiPicker833) NoFunction
          CFI (cfiPicker833) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiPicker833

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond834 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond835) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+0
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker836 Using cfiCommon1
          CFI (cfiPicker836) NoFunction
          CFI (cfiPicker836) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R4
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiPicker836

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond837 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond838) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+0
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker839 Using cfiCommon1
          CFI (cfiPicker839) NoFunction
          CFI (cfiPicker839) Picker
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_209:
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        RET
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiPicker839

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond840 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_104
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond841) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond841) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond841) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+0
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_105
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+0
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker843 Using cfiCommon1
          CFI (cfiPicker843) NoFunction
          CFI (cfiPicker843) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        RET
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiPicker843

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond844 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+0
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker846 Using cfiCommon1
          CFI (cfiPicker846) NoFunction
          CFI (cfiPicker846) Picker
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_457:
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_211:
        MOV     ?V0 + 7,A
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        RET
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiPicker846

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond847 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_210
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_100
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+0
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_101
          CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond849) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond849) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond849) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond849) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond849) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond849) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond849) CFA_SP SP+0
          CFI (cfiCond849) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker850 Using cfiCommon1
          CFI (cfiPicker850) NoFunction
          CFI (cfiPicker850) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiPicker850

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond851 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+0
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+0
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker854 Using cfiCommon1
          CFI (cfiPicker854) NoFunction
          CFI (cfiPicker854) Picker
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_185:
        RET
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiPicker854

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond855 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_24
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+0
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_25
          CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond857) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond857) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond857) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond857) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond857) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond857) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond857) CFA_SP SP+0
          CFI (cfiCond857) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_21
          CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond858) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond858) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond858) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond858) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond858) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond858) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond858) CFA_SP SP+0
          CFI (cfiCond858) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_22
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond859) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond859) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond859) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+0
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker860 Using cfiCommon1
          CFI (cfiPicker860) NoFunction
          CFI (cfiPicker860) Picker
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_223:
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        RET
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiPicker860

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond861 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ZDO_ParseEPListRsp
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_93
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+0
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_23
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+0
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_24
          CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond864) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond864) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond864) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond864) CFA_SP SP+0
          CFI (cfiCond864) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond865 Using cfiCommon0
          CFI (cfiCond865) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond865) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_25
          CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond865) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond865) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond865) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond865) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond865) CFA_SP SP+0
          CFI (cfiCond865) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond866 Using cfiCommon0
          CFI (cfiCond866) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond866) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_21
          CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond866) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond866) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond866) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond866) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond866) CFA_SP SP+0
          CFI (cfiCond866) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_22
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+0
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function ZDO_ParseUserDescRsp
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+0
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker869 Using cfiCommon1
          CFI (cfiPicker869) NoFunction
          CFI (cfiPicker869) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        RET
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiCond865
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiPicker869

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond870 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond871) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+0
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker872 Using cfiCommon1
          CFI (cfiPicker872) NoFunction
          CFI (cfiPicker872) Picker
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_184:
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_205:
        RET
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiPicker872

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond873 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_2
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond874) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond874) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond874) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond874) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond874) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond874) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond874) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+0
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_3
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+0
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_21
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_SP SP+0
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_22
          CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond877) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond877) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond877) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond877) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond877) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond877) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond877) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond877) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond877) CFA_SP SP+0
          CFI (cfiCond877) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_35
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+0
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_36
          CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond879) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond879) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond879) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond879) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond879) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond879) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond879) CFA_SP SP+0
          CFI (cfiCond879) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_150
          CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond880) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond880) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond880) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond880) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond880) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond880) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond880) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond880) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond880) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond880) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond880) CFA_SP SP+0
          CFI (cfiCond880) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_151
          CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond881) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond881) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond881) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond881) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond881) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond881) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond881) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond881) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond881) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond881) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond881) CFA_SP SP+0
          CFI (cfiCond881) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker882 Using cfiCommon1
          CFI (cfiPicker882) NoFunction
          CFI (cfiPicker882) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        RET
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiPicker882

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond883 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond884) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+0
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker885 Using cfiCommon1
          CFI (cfiPicker885) NoFunction
          CFI (cfiPicker885) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 6
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_196:
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 5
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_191:
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiPicker885

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond886 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_447
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond887 Using cfiCommon0
          CFI (cfiCond887) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond887) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond887) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond887) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond887) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond887) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond887) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond887) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond887) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond887) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond887) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond887) CFA_SP SP+0
          CFI (cfiCond887) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker888 Using cfiCommon1
          CFI (cfiPicker888) NoFunction
          CFI (cfiPicker888) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond886
          CFI EndBlock cfiCond887
          CFI EndBlock cfiPicker888
        REQUIRE ??Subroutine182_0
        ; // Fall through to label ??Subroutine182_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine182_0:
          CFI Block cfiCond889 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_449
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond890) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond890) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond890) CFA_SP SP+0
          CFI (cfiCond890) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond891 Using cfiCommon0
          CFI (cfiCond891) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond891) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond891) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond891) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond891) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond891) CFA_SP SP+0
          CFI (cfiCond891) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond892) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond892) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond892) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond892) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond892) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond892) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond892) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond892) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond892) CFA_SP SP+0
          CFI (cfiCond892) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker893 Using cfiCommon1
          CFI (cfiPicker893) NoFunction
          CFI (cfiPicker893) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,?V0 + 2
        ADD     A,#0x2
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        RET
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiPicker893
// 3134 
// 3135 /*********************************************************************
// 3136  * @fn          ZDO_ParseUserDescRsp
// 3137  *
// 3138  * @brief       This function parses the incoming User
// 3139  *              Descriptor Response.
// 3140  *
// 3141  * @param       inMsg - incoming response message
// 3142  *
// 3143  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3144  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3145  *          by the calling function [osal_mem_free()].
// 3146  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3147 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock894 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 3148 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3149   ZDO_UserDescRsp_t *pRsp;
// 3150   uint8 *msg;
// 3151   uint8 descLen = 0;
        MOV     ?V0 + 4,#0x0
// 3152 
// 3153   msg = inMsg->asdu;
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_158:
        LCALL   ??Subroutine161_0 & 0xFFFF
??CrossCallReturnLabel_322:
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
// 3154 
// 3155   if ( msg[0] == ZSuccess )
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??ZDO_ParseUserDescRsp_0
// 3156   {
// 3157     descLen = msg[3];
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
// 3158   }
// 3159 
// 3160   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        MOV     DPL,?V0 + 4
        MOV     ?V0 + 0,DPL
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 0
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R6,?V0 + 6
        MOV     R7,?V0 + 7
// 3161   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseUserDescRsp_1
// 3162   {
// 3163     pRsp->status = msg[0];
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_443:
        LCALL   ?Subroutine135 & 0xFFFF
// 3164     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_222:
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_145:
        LCALL   ?Subroutine21 & 0xFFFF
// 3165     pRsp->length = descLen;
// 3166     if ( descLen )
??CrossCallReturnLabel_423:
        JZ      ??ZDO_ParseUserDescRsp_1
// 3167     {
// 3168       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0 + 2
        ADD     A,#0x4
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,R0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     R4,?V0 + 0
        MOV     R5,#0x0
        MOV     A,R6
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 3169     }
// 3170   }
// 3171 
// 3172   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock894
// 3173 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond895 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function ZDO_ParseUserDescRsp
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+0
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond897 Using cfiCommon0
          CFI (cfiCond897) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond897) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond897) CFA_SP SP+0
          CFI (cfiCond897) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker898 Using cfiCommon1
          CFI (cfiPicker898) NoFunction
          CFI (cfiPicker898) Picker
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_458:
        RET
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiCond897
          CFI EndBlock cfiPicker898

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond899 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_97
          CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond900) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond900) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond900) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond900) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond900) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond900) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond900) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond900) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond900) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond900) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond900) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond900) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond900) CFA_SP SP+0
          CFI (cfiCond900) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_435
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+0
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_436
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+0
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_437
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond903) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond903) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond903) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+0
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond904 Using cfiCommon0
          CFI (cfiCond904) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond904) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_100
          CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond904) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond904) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond904) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond904) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond904) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond904) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond904) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond904) CFA_SP SP+0
          CFI (cfiCond904) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond905 Using cfiCommon0
          CFI (cfiCond905) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond905) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_101
          CFI (cfiCond905) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond905) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond905) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond905) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond905) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond905) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond905) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond905) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond905) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond905) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond905) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond905) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond905) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond905) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond905) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond905) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond905) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond905) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond905) CFA_SP SP+0
          CFI (cfiCond905) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function ZDO_ParseEPListRsp
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_157
          CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond906) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond906) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond906) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond906) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond906) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond906) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond906) CFA_SP SP+0
          CFI (cfiCond906) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function ZDO_ParseUserDescRsp
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_158
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_SP SP+0
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_159
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+0
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker909 Using cfiCommon1
          CFI (cfiPicker909) NoFunction
          CFI (cfiPicker909) Picker
        LCALL   ?Subroutine139 & 0xFFFF
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiCond904
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiPicker909
??CrossCallReturnLabel_236:
        REQUIRE ??Subroutine183_0
        ; // Fall through to label ??Subroutine183_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine183_0:
          CFI Block cfiCond910 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_163
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+0
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_453, ??CrossCallReturnLabel_152
          CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond912) CFA_SP SP+0
          CFI (cfiCond912) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_453, ??CrossCallReturnLabel_153
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_SP SP+0
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_453, ??CrossCallReturnLabel_154
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+0
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_291
          CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond915) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond915) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond915) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond915) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond915) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond915) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond915) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond915) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond915) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond915) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond915) CFA_SP SP+0
          CFI (cfiCond915) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_292
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond916) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond916) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond916) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond916) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond916) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond916) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond916) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_SP SP+0
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_290
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+0
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_294
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+0
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_295
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+0
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_451, ??CrossCallReturnLabel_28
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond920) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+0
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_451, ??CrossCallReturnLabel_29
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond921) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond921) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond921) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+0
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_343
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond922) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond922) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond922) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond922) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond922) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond922) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+0
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_344
          CFI (cfiCond923) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond923) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond923) CFA_SP SP+-5
          CFI Block cfiCond924 Using cfiCommon0
          CFI (cfiCond924) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond924) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_342
          CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond924) CFA_SP SP+0
          CFI (cfiCond924) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_ParseAddrRsp
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_413
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-1
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_414
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+0
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_415
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+-1
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_407
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+-1
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_408
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+-1
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_409
          CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond930) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond930) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond930) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond930) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond930) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond930) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond930) CFA_SP SP+-1
          CFI (cfiCond930) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond931 Using cfiCommon0
          CFI (cfiCond931) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond931) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_410
          CFI (cfiCond931) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond931) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond931) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond931) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond931) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond931) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond931) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond931) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond931) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond931) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond931) CFA_SP SP+-1
          CFI (cfiCond931) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond932 Using cfiCommon0
          CFI (cfiCond932) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond932) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_411
          CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond932) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond932) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond932) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond932) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond932) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond932) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond932) CFA_SP SP+-1
          CFI (cfiCond932) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_412
          CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond933) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond933) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond933) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond933) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond933) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond933) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond933) CFA_SP SP+-1
          CFI (cfiCond933) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_406
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+0
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_385
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+0
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_386
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond936) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond936) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond936) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond936) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond936) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond936) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-1
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_387
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+0
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_388
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond938) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond938) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond938) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond938) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond938) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond938) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond938) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond938) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond938) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+-1
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond939 Using cfiCommon0
          CFI (cfiCond939) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond939) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_389
          CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond939) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond939) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond939) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond939) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond939) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond939) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond939) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond939) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond939) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond939) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond939) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond939) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond939) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond939) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond939) CFA_SP SP+-1
          CFI (cfiCond939) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_390
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond940) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond940) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond940) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond940) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond940) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond940) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond940) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond940) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond940) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+0
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_391
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+0
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_392
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond942) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond942) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+0
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_393
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond943) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond943) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond943) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond943) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond943) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-1
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_394
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond944) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+0
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_395
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+0
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_396
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond946) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond946) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond946) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond946) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond946) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond946) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond946) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond946) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond946) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond946) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond946) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond946) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+0
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_397
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond947) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond947) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond947) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond947) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond947) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond947) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond947) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond947) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond947) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond947) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+-1
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_398
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+0
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_399
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond949) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond949) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond949) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond949) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-1
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_400
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+0
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_401
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+0
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_402
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-1
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_403
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+-1
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_404
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-1
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_405
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond955) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond955) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond955) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+-1
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_96
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond956) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond956) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond956) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond956) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond956) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond956) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond956) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond956) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond956) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond956) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond956) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+0
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_97
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond957) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond957) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond957) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond957) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond957) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond957) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+0
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond958 Using cfiCommon0
          CFI (cfiCond958) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond958) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_435
          CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond958) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond958) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond958) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond958) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond958) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond958) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond958) CFA_SP SP+0
          CFI (cfiCond958) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_436
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+0
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_437
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond960) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond960) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond960) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond960) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond960) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond960) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond960) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+0
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_100
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond961) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond961) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+0
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond962 Using cfiCommon0
          CFI (cfiCond962) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond962) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_101
          CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond962) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond962) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond962) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond962) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond962) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond962) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond962) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond962) CFA_SP SP+0
          CFI (cfiCond962) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond963 Using cfiCommon0
          CFI (cfiCond963) Function ZDO_ParseEPListRsp
          CFI (cfiCond963) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_157
          CFI (cfiCond963) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond963) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond963) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond963) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond963) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond963) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond963) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond963) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond963) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond963) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond963) CFA_SP SP+0
          CFI (cfiCond963) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond964 Using cfiCommon0
          CFI (cfiCond964) Function ZDO_ParseUserDescRsp
          CFI (cfiCond964) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_158
          CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond964) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond964) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond964) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond964) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond964) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond964) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond964) CFA_SP SP+0
          CFI (cfiCond964) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond965 Using cfiCommon0
          CFI (cfiCond965) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond965) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_159
          CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond965) CFA_SP SP+0
          CFI (cfiCond965) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker966 Using cfiCommon1
          CFI (cfiPicker966) NoFunction
          CFI (cfiPicker966) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiCond931
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiCond962
          CFI EndBlock cfiCond963
          CFI EndBlock cfiCond964
          CFI EndBlock cfiCond965
          CFI EndBlock cfiPicker966

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond967 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function ZDO_ParseUserDescRsp
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+0
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker969 Using cfiCommon1
          CFI (cfiPicker969) NoFunction
          CFI (cfiPicker969) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        RET
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiPicker969
// 3174 
// 3175 /*********************************************************************
// 3176  * @fn          ZDO_ParseSimpleDescBuf
// 3177  *
// 3178  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 3179  *
// 3180  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 3181  * @param       desc - SimpleDescriptionFormat_t *
// 3182  *
// 3183  *              This routine allocates storage for the cluster IDs because
// 3184  *              they are 16-bit and need to be aligned to be properly processed.
// 3185  *              This routine returns non-zero if an allocation fails.
// 3186  *
// 3187  *              NOTE: This means that the caller or user of the input structure
// 3188  *                    is responsible for freeing the memory
// 3189  *
// 3190  * @return      0: success
// 3191  *              1: failure due to malloc failure.
// 3192  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3193 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock970 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 3194 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 3195   uint8 num, i;
// 3196 
// 3197   desc->EndPoint = *buf++;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL   ?Subroutine26 & 0xFFFF
// 3198   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_36:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine185_0 & 0xFFFF
// 3199   buf += 2;
// 3200   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_467:
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_463:
        LCALL   ?Subroutine10 & 0xFFFF
// 3201   buf += 2;
// 3202   desc->AppDevVer = *buf >> 4;
??CrossCallReturnLabel_466:
        SWAP    A
        ANL     A,#0xf
// 3203 
// 3204   desc->Reserved = 0;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine43 & 0xFFFF
// 3205   buf++;
// 3206 
// 3207   // move in input cluster list (if any). allocate aligned memory.
// 3208   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_81:
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        INC     R6
        INC     R6
        MOV     R7,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3209   if ( num )
        MOV     A,R4
        ADD     A,#0x7
        MOV     ?V0 + 2,A
        MOV     A,R5
        LCALL   ??Subroutine147_0 & 0xFFFF
??CrossCallReturnLabel_249:
        MOV     A,?V0 + 4
        JZ      ??ZDO_ParseSimpleDescBuf_0
// 3210   {
// 3211     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_54:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_356:
        JNZ     $+5
        LJMP    ??ZDO_ParseSimpleDescBuf_1 & 0xFFFF
// 3212     {
// 3213       // malloc failed. we're done.
// 3214       return 1;
// 3215     }
// 3216     for (i=0; i<num; ++i)
        MOV     R4,#0x0
        SJMP    ??CrossCallReturnLabel_69
// 3217     {
// 3218       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_2:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,?V0 + 6
        ADD     A,#0x0
        CLR     A
        ADDC    A,R3
        MOV     ?V0 + 7,A
        MOV     A,R4
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        MOV     A,R0
        ADD     A,R2
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,R3
        MOV     DPH,A
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 7
        LCALL   ?Subroutine39 & 0xFFFF
// 3219       buf += 2;
// 3220     }
??CrossCallReturnLabel_69:
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ParseSimpleDescBuf_2
// 3221   }
// 3222 
// 3223   // move in output cluster list (if any). allocate aligned memory.
// 3224   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3225   if (num)
        JZ      ??ZDO_ParseSimpleDescBuf_3
// 3226   {
// 3227     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        MOV     A,?V0 + 0
        ADD     A,#0xa
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 4
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_55:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_357:
        JNZ     ??ZDO_ParseSimpleDescBuf_4
// 3228     {
// 3229       // malloc failed. free input cluster list memory if there is any
// 3230       if ( desc->pAppInClusterList != NULL )
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine155_0 & 0xFFFF
??CrossCallReturnLabel_293:
        JZ      ??ZDO_ParseSimpleDescBuf_1
// 3231       {
// 3232         osal_mem_free(desc->pAppInClusterList);
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??osal_mem_free?relay
// 3233 
// 3234         desc->pAppInClusterList = NULL;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 3235       }
// 3236       return 1;
??ZDO_ParseSimpleDescBuf_1:
        MOV     R1,#0x1
        SJMP    ??ZDO_ParseSimpleDescBuf_5
// 3237     }
// 3238     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_4:
        MOV     R4,#0x0
        SJMP    ??CrossCallReturnLabel_70
// 3239     {
// 3240       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_6:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine76 & 0xFFFF
// 3241       buf += 2;
// 3242     }
??CrossCallReturnLabel_139:
        MOV     R3,A
        MOV     A,?V0 + 0
        ADD     A,#0x0
        CLR     A
        ADDC    A,R3
        MOV     ?V0 + 1,A
        MOV     A,R4
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        MOV     A,R0
        ADD     A,R2
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,R3
        MOV     DPH,A
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_70:
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ParseSimpleDescBuf_6
// 3243   }
// 3244   return 0;
??ZDO_ParseSimpleDescBuf_3:
        MOV     R1,#0x0
??ZDO_ParseSimpleDescBuf_5:
        LJMP    ??Subroutine165_0 & 0xFFFF
          CFI EndBlock cfiBlock970
// 3245 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond971 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_463
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond972 Using cfiCommon0
          CFI (cfiCond972) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond972) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond972) CFA_SP SP+0
          CFI (cfiCond972) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker973 Using cfiCommon1
          CFI (cfiPicker973) NoFunction
          CFI (cfiPicker973) Picker
        MOV     R2,A
          CFI EndBlock cfiCond971
          CFI EndBlock cfiCond972
          CFI EndBlock cfiPicker973
        REQUIRE ??Subroutine184_0
        ; // Fall through to label ??Subroutine184_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine184_0:
          CFI Block cfiCond974 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_462
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond975 Using cfiCommon0
          CFI (cfiCond975) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond975) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond975) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond975) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond975) CFA_SP SP+0
          CFI (cfiCond975) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond976 Using cfiCommon0
          CFI (cfiCond976) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond976) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond976) CFA_SP SP+0
          CFI (cfiCond976) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker977 Using cfiCommon1
          CFI (cfiPicker977) NoFunction
          CFI (cfiPicker977) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond974
          CFI EndBlock cfiCond975
          CFI EndBlock cfiCond976
          CFI EndBlock cfiPicker977

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond978 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_69
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond979 Using cfiCommon0
          CFI (cfiCond979) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond979) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond979) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond979) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond979) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond979) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond979) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond979) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond979) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond979) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond979) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond979) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond979) CFA_SP SP+0
          CFI (cfiCond979) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker980 Using cfiCommon1
          CFI (cfiPicker980) NoFunction
          CFI (cfiPicker980) Picker
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_470:
        INC     R4
        RET
          CFI EndBlock cfiCond978
          CFI EndBlock cfiCond979
          CFI EndBlock cfiPicker980

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond981 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond982 Using cfiCommon0
          CFI (cfiCond982) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond982) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond982) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond982) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond982) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond982) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond982) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond982) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond982) CFA_SP SP+0
          CFI (cfiCond982) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker983 Using cfiCommon1
          CFI (cfiPicker983) NoFunction
          CFI (cfiPicker983) Picker
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_189:
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_206:
        RET
          CFI EndBlock cfiCond981
          CFI EndBlock cfiCond982
          CFI EndBlock cfiPicker983

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond984 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_465
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond985 Using cfiCommon0
          CFI (cfiCond985) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond985) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond985) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond985) CFA_SP SP+0
          CFI (cfiCond985) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker986 Using cfiCommon1
          CFI (cfiPicker986) NoFunction
          CFI (cfiPicker986) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond984
          CFI EndBlock cfiCond985
          CFI EndBlock cfiPicker986
        REQUIRE ??Subroutine185_0
        ; // Fall through to label ??Subroutine185_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine185_0:
          CFI Block cfiCond987 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_467
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+0
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond989 Using cfiCommon0
          CFI (cfiCond989) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond989) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond989) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond989) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond989) CFA_SP SP+0
          CFI (cfiCond989) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker990 Using cfiCommon1
          CFI (cfiPicker990) NoFunction
          CFI (cfiPicker990) Picker
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiCond989
          CFI EndBlock cfiPicker990
        REQUIRE ??Subroutine186_0
        ; // Fall through to label ??Subroutine186_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine186_0:
          CFI Block cfiCond991 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_468
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_467
          CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond992) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond992) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond992) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond992) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond992) CFA_SP SP+0
          CFI (cfiCond992) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond993 Using cfiCommon0
          CFI (cfiCond993) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond993) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond993) CFA_SP SP+0
          CFI (cfiCond993) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond994) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond994) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond994) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond994) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond994) CFA_SP SP+0
          CFI (cfiCond994) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker995 Using cfiCommon1
          CFI (cfiPicker995) NoFunction
          CFI (cfiPicker995) Picker
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_471:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiPicker995
// 3246 
// 3247 /*********************************************************************
// 3248  * @fn          ZDO_ParseDeviceAnnce
// 3249  *
// 3250  * @brief       Parse a Device Announce message.
// 3251  *
// 3252  * @param       inMsg - Incoming message
// 3253  * @param       pAnnce - place to put the parsed information
// 3254  *
// 3255  * @return      none
// 3256  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3257 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock996 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3258 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 3259   uint8 *msg;
// 3260 
// 3261   // Parse incoming message
// 3262   msg = inMsg->asdu;
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_159:
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_147:
        MOV     R7,A
// 3263   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_464:
        LCALL   ?Subroutine32 & 0xFFFF
// 3264   msg += 2;
// 3265   osal_cpyExtAddr( pAnnce->extAddr, msg );
??CrossCallReturnLabel_57:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 3266   msg += Z_EXTADDR_LEN;
// 3267   pAnnce->capabilities = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_109:
        MOVX    @DPTR,A
// 3268 }
        LJMP    ??Subroutine144_0 & 0xFFFF
          CFI EndBlock cfiBlock996

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond997 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+0
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker999 Using cfiCommon1
          CFI (cfiPicker999) NoFunction
          CFI (cfiPicker999) Picker
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_361:
        MOV     R6,A
        MOV     A,R1
        RET
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiPicker999

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond1000 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+0
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1002 Using cfiCommon1
          CFI (cfiPicker1002) NoFunction
          CFI (cfiPicker1002) Picker
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_199:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiPicker1002

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond1003 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+0
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1005 Using cfiCommon1
          CFI (cfiPicker1005) NoFunction
          CFI (cfiPicker1005) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_472:
        RET
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiPicker1005

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond1006 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_469
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_69
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+0
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_70
          CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1008) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1008) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1008) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1008) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1008) CFA_SP SP+0
          CFI (cfiCond1008) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_465
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+0
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_466
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+0
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_467
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+0
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_468
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+0
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1013 Using cfiCommon0
          CFI (cfiCond1013) Function ZDO_ParseAddrRsp
          CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_56
          CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1013) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1013) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1013) CFA_SP SP+0
          CFI (cfiCond1013) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_57
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+0
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1015 Using cfiCommon1
          CFI (cfiPicker1015) NoFunction
          CFI (cfiPicker1015) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_475:
        RET
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiPicker1015

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond1016 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_41
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+0
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function ZDO_ParseAddrRsp
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+0
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1019 Using cfiCommon0
          CFI (cfiCond1019) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_469
          CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1019) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1019) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1019) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1019) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1019) CFA_SP SP+0
          CFI (cfiCond1019) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1020 Using cfiCommon0
          CFI (cfiCond1020) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_69
          CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1020) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1020) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1020) CFA_SP SP+0
          CFI (cfiCond1020) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_70
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+0
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1022 Using cfiCommon0
          CFI (cfiCond1022) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_465
          CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1022) CFA_SP SP+0
          CFI (cfiCond1022) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1023 Using cfiCommon0
          CFI (cfiCond1023) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_466
          CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1023) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1023) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1023) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1023) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1023) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1023) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1023) CFA_SP SP+0
          CFI (cfiCond1023) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_467
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1024) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1024) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1024) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_SP SP+0
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1025 Using cfiCommon0
          CFI (cfiCond1025) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_468
          CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1025) CFA_SP SP+0
          CFI (cfiCond1025) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1026 Using cfiCommon0
          CFI (cfiCond1026) Function ZDO_ParseAddrRsp
          CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_56
          CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1026) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1026) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1026) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1026) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1026) CFA_SP SP+0
          CFI (cfiCond1026) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_57
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+0
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1028 Using cfiCommon1
          CFI (cfiPicker1028) NoFunction
          CFI (cfiPicker1028) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        RET
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiCond1019
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiCond1022
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiCond1025
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiPicker1028
// 3269 
// 3270 /*********************************************************************
// 3271  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3272  *
// 3273  * @brief       This function handles parsing of the incoming Management
// 3274  *              Network Update notify.
// 3275  *
// 3276  * @param       inMsg - incoming message (request)
// 3277  *
// 3278  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3279  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3280  *          by the calling function [osal_mem_free()].
// 3281  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3282 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1029 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3283 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
// 3284   uint8 status;
// 3285   uint32 scannedChannels = 0;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
// 3286   uint16 totalTransmissions = 0;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
// 3287   uint16 transmissionFailures = 0;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 3288   uint8 listCount = 0;
        MOV     ?V0 + 10,#0x0
// 3289   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine52 & 0xFFFF
// 3290   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3291 
// 3292   status = *msg++;
??CrossCallReturnLabel_437:
        MOV     ?V0 + 11,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3293   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3294   {
// 3295     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_build_uint32?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
// 3296     msg += 4;
        MOV     A,R6
        ADD     A,#0x4
        LCALL   ?Subroutine86 & 0xFFFF
// 3297     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_150:
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
// 3298     msg += 2;
        MOV     A,R6
        ADD     A,#0x2
        LCALL   ?Subroutine86 & 0xFFFF
// 3299     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_151:
        MOV     ?V0 + 2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 3,A
// 3300     msg += 2;
        MOV     A,R6
        ADD     A,#0x2
        LCALL   ??Subroutine160_0 & 0xFFFF
// 3301     listCount = *msg++;
// 3302   }
??CrossCallReturnLabel_313:
        MOV     ?V0 + 10,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 3303 
// 3304   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        MOV     DPL,?V0 + 10
        MOV     ?V0 + 8,DPL
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 8
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 14,R2
        MOV     ?V0 + 15,R3
// 3305 
// 3306   if ( pRsp )
        MOV     A,R2
        ORL     A,?V0 + 15
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_1
// 3307   {
// 3308     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 11
        MOVX    @DPTR,A
// 3309     pRsp->scannedChannels = scannedChannels;
        INC     DPTR
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
// 3310     pRsp->totalTransmissions = totalTransmissions;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        LCALL   ?Subroutine16 & 0xFFFF
// 3311     pRsp->transmissionFailures = transmissionFailures;
??CrossCallReturnLabel_17:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        LCALL   ?Subroutine16 & 0xFFFF
// 3312     pRsp->listCount = listCount;
??CrossCallReturnLabel_18:
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 10
        MOVX    @DPTR,A
// 3313 
// 3314     // Allocate a buffer big enough to handle the list.
// 3315     if ( listCount > 0 )
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_1
// 3316     {
// 3317       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,?V0 + 8
        MOV     R5,#0x0
        MOV     A,R2
        ADD     A,#0xa
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 3318     }
// 3319   }
// 3320 
// 3321   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_1:
        MOV     R2,?V0 + 14
        MOV     R3,?V0 + 15
        LJMP    ??Subroutine157_0 & 0xFFFF
          CFI EndBlock cfiBlock1029
// 3322 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond1030 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1031 Using cfiCommon0
          CFI (cfiCond1031) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1031) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1031) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1031) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1031) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1031) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1031) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1031) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1031) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1031) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1031) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1031) CFA_SP SP+0
          CFI (cfiCond1031) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1032 Using cfiCommon1
          CFI (cfiPicker1032) NoFunction
          CFI (cfiPicker1032) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_377:
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_207:
        ADD     A,#0x0
        RET
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiPicker1032

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond1033 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1034 Using cfiCommon0
          CFI (cfiCond1034) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1034) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1034) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1034) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1034) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1034) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1034) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1034) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1034) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1034) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1034) CFA_SP SP+0
          CFI (cfiCond1034) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1035) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1035) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1035) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1035) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1035) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1035) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1035) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+0
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1036 Using cfiCommon1
          CFI (cfiPicker1036) NoFunction
          CFI (cfiPicker1036) Picker
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_192:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiPicker1036

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond1037 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1038 Using cfiCommon0
          CFI (cfiCond1038) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_5
          CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1038) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1038) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1038) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1038) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1038) CFA_SP SP+0
          CFI (cfiCond1038) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1039 Using cfiCommon0
          CFI (cfiCond1039) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_16
          CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1039) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1039) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1039) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1039) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1039) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1039) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1039) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1039) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1039) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1039) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1039) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1039) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1039) CFA_SP SP+0
          CFI (cfiCond1039) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1040 Using cfiCommon0
          CFI (cfiCond1040) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_17
          CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1040) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1040) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1040) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1040) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1040) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1040) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1040) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1040) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1040) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1040) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1040) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1040) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1040) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1040) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1040) CFA_SP SP+0
          CFI (cfiCond1040) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_18
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1041) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1041) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1041) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1041) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1041) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1041) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1041) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1041) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1041) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1041) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1041) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+0
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1042 Using cfiCommon1
          CFI (cfiPicker1042) NoFunction
          CFI (cfiPicker1042) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiPicker1042
// 3323 
// 3324 /*********************************************************************
// 3325  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3326  *
// 3327  * @brief       This function handles parsing the incoming Management
// 3328  *              Network Update request and starts the request (if needed).
// 3329  *
// 3330  * @param       inMsg - incoming message (request)
// 3331  * @param       pReq - pointer to place to parse message to
// 3332  *
// 3333  * @return      none
// 3334  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3335 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1043 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3336 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 3337   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine68 & 0xFFFF
// 3338 
// 3339   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_124:
        LCALL   ??osal_build_uint32?relay
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?XSTORE_R2345
// 3340   msg += 4;
        LCALL   ?Subroutine94 & 0xFFFF
// 3341   pReq->scanDuration = *msg++;
??CrossCallReturnLabel_312:
        MOV     R2,A
        MOV     A,?V0 + 0
        ADD     A,#0x4
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine27 & 0xFFFF
// 3342 
// 3343   if ( pReq->scanDuration <= 0x05 )
??CrossCallReturnLabel_39:
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_0
// 3344   {
// 3345     // Request is to scan over channelMask
// 3346     pReq->scanCount = *msg;
        LCALL   ?Subroutine136 & 0xFFFF
// 3347   }
??CrossCallReturnLabel_224:
        SJMP    ??ZDO_ParseMgmtNwkUpdateReq_1
// 3348   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV     A,#-0x2
        XRL     A,R2
        JZ      ??ZDO_ParseMgmtNwkUpdateReq_2
        MOV     A,#-0x1
        XRL     A,R2
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3349   {
// 3350     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3351     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_2:
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_116:
        LCALL   ?Subroutine42 & 0xFFFF
// 3352 
// 3353     if ( pReq->scanDuration == 0xFF )
??CrossCallReturnLabel_78:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3354     {
// 3355       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine55 & 0xFFFF
// 3356     }
// 3357   }
??CrossCallReturnLabel_103:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOVX    @DPTR,A
// 3358 }
??ZDO_ParseMgmtNwkUpdateReq_3:
        LJMP    ??Subroutine144_0 & 0xFFFF
          CFI EndBlock cfiBlock1043

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond1044 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1045 Using cfiCommon0
          CFI (cfiCond1045) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1045) CFA_SP SP+0
          CFI (cfiCond1045) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1046 Using cfiCommon1
          CFI (cfiPicker1046) NoFunction
          CFI (cfiPicker1046) Picker
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_440:
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1044
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiPicker1046

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond1047 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1048 Using cfiCommon0
          CFI (cfiCond1048) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1048) CFA_SP SP+0
          CFI (cfiCond1048) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1049 Using cfiCommon1
          CFI (cfiPicker1049) NoFunction
          CFI (cfiPicker1049) Picker
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_200:
        RET
          CFI EndBlock cfiCond1047
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiPicker1049

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond1050 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_109
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_SP SP+0
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1052 Using cfiCommon0
          CFI (cfiCond1052) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_115
          CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1052) CFA_SP SP+0
          CFI (cfiCond1052) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1053 Using cfiCommon0
          CFI (cfiCond1053) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_116
          CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1053) CFA_SP SP+0
          CFI (cfiCond1053) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1054 Using cfiCommon1
          CFI (cfiPicker1054) NoFunction
          CFI (cfiPicker1054) Picker
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_225:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiCond1053
          CFI EndBlock cfiPicker1054

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond1055 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_224
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1056 Using cfiCommon0
          CFI (cfiCond1056) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_108
          CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1056) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1056) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1056) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1056) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1056) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1056) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1056) CFA_SP SP+0
          CFI (cfiCond1056) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_109
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_SP SP+0
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1058 Using cfiCommon0
          CFI (cfiCond1058) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_115
          CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1058) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1058) CFA_SP SP+0
          CFI (cfiCond1058) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1059 Using cfiCommon0
          CFI (cfiCond1059) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1059) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_116
          CFI (cfiCond1059) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1059) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1059) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1059) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1059) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1059) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1059) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1059) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1059) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1059) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1059) CFA_SP SP+0
          CFI (cfiCond1059) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1060 Using cfiCommon1
          CFI (cfiPicker1060) NoFunction
          CFI (cfiPicker1060) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1055
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiCond1058
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiPicker1060

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond1061 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1062 Using cfiCommon0
          CFI (cfiCond1062) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1062) CFA_SP SP+0
          CFI (cfiCond1062) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1063 Using cfiCommon1
          CFI (cfiPicker1063) NoFunction
          CFI (cfiPicker1063) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_201:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiPicker1063

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond1064 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1065 Using cfiCommon0
          CFI (cfiCond1065) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1065) CFA_SP SP+0
          CFI (cfiCond1065) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1066 Using cfiCommon1
          CFI (cfiPicker1066) NoFunction
          CFI (cfiPicker1066) Picker
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_183:
        RET
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiPicker1066

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond1067 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1068 Using cfiCommon0
          CFI (cfiCond1068) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_68
          CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1068) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1068) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1068) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1068) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1068) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1068) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1068) CFA_SP SP+0
          CFI (cfiCond1068) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1069 Using cfiCommon0
          CFI (cfiCond1069) Function ZDO_ParseAddrRsp
          CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_30
          CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1069) CFA_SP SP+0
          CFI (cfiCond1069) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_31
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1070) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_SP SP+0
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1071 Using cfiCommon0
          CFI (cfiCond1071) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_32
          CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1071) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1071) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1071) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1071) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1071) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1071) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1071) CFA_SP SP+0
          CFI (cfiCond1071) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1072 Using cfiCommon0
          CFI (cfiCond1072) Function ZDO_ParseAddrRsp
          CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_77
          CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1072) CFA_SP SP+0
          CFI (cfiCond1072) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_78
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+0
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1074 Using cfiCommon1
          CFI (cfiPicker1074) NoFunction
          CFI (cfiPicker1074) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_427:
        INC     R6
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiCond1068
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiCond1071
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiPicker1074
// 3359 
// 3360 /*********************************************************************
// 3361  * @fn          ZDO_ParseEndDeviceTimeoutRsp
// 3362  *
// 3363  * @brief       Parse the End_Device_Timeout_rsp message.
// 3364  *
// 3365  * @param       inMsg - incoming message.
// 3366  * @param       pRsp - place to put the parsed information.
// 3367  *
// 3368  * @return      none
// 3369  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3370 void ZDO_ParseEndDeviceTimeoutRsp( zdoIncomingMsg_t *inMsg, uint16 *pRsp )
ZDO_ParseEndDeviceTimeoutRsp:
          CFI Block cfiBlock1075 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceTimeoutRsp
        CODE
// 3371 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 3372   *pRsp = inMsg->asdu[0];
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_344:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 3373 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1075

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_Init?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_StartDevice?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_UpdateNwkStatus?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_AnyClusterMatches?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessNodeDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessPowerDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessSimpleDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessActiveEPReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ConvertOTAClusters?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMatchDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessBindUnbindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_UpdateAddrManager?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessServerDiscReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessEndDeviceTimeoutReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessEndDeviceTimeoutReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_EndDeviceTimeoutCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtLqiReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtNwkDiscReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtRtgReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtBindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtDirectJoinReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtLeaveReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtPermitJoinReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??NLME_PermitJoiningTimeout?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessUserDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessUserDescSet?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessDeviceAnnce?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_BuildSimpleDescBuf?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseEndDeviceBindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseBindUnbindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseAddrRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseNodeDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParsePowerDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseSimpleDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseEPListRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseServerDiscRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtLqiRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmNwkDiscRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtRtgRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtBindRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseUserDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseSimpleDescBuf?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseDeviceAnnce?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtNwkUpdateNotify?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtNwkUpdateReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseEndDeviceTimeoutRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceTimeoutRsp

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "StartDevice ERR">`:
        DB "StartDevice ERR"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "MODE unknown">`:
        DB "MODE unknown"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "End Device Bind">`:
        DB "End Device Bind"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Success Sent">`:
        DB "Success Sent"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Timeout">`:
        DB "Timeout"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Match Desc Req">`:
        DB "Match Desc Req"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Rsp Sent">`:
        DB "Rsp Sent"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Rsp Non Matched">`:
        DB "Rsp Non Matched"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Non Matched">`:
        DB "Non Matched"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e8:
        DD 1000

        END
// 3374 
// 3375 /*********************************************************************
// 3376 *********************************************************************/
// 
// 10 306 bytes in segment BANKED_CODE
//    270 bytes in segment BANK_RELAYS
//    122 bytes in segment XDATA_ROM_C
//     62 bytes in segment XDATA_Z
// 
// 10 576 bytes of CODE  memory
//    118 bytes of CONST memory (+ 4 bytes shared)
//     62 bytes of XDATA memory
//
//Errors: none
//Warnings: none
